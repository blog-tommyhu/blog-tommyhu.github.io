<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Blogging via Hexo</title>
    <url>/2020/04/29/Blogging-via-Hexo/</url>
    <content><![CDATA[<p>I recently moved my blog here using <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a> instead of previous <a href="http://jekyllrb.com/" target="_blank" rel="noopener">Jekyll</a>, though the old version is still <a href="http://blog-ythu.github.io/" target="_blank" rel="noopener">available</a>. Hexo is a fast, simple &amp; powerful blog framework. Compared with Jekyll, Hexo is more flexible in terms of setup, post writing via Markdown, tags, themes, content searching, 3rd-part plugin support, etc.</p>
<p>This post summarizes the setup steps of Hexo in Windows 10, which I hope will somehow help those who want to blog using Hexo as well.</p>
<a id="more"></a>
<h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><ol>
<li>Install <a href="http://nodejs.org/" target="_blank" rel="noopener"><strong>Node.js</strong></a>. Verify installation via running <code>node -v</code> in cmd.</li>
<li>Install <a href="http://git-scm.com/" target="_blank" rel="noopener"><strong>Git</strong></a>. Verify installation via running <code>git version</code> in cmd.</li>
<li><p>Install <strong>Hexo</strong> (using the following command in cmd). Verify installation via running <code>hexo version</code> in cmd.</p>
   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Note: If encountering with <em>“Error: Cannot find module ‘hexo’”</em>, try install Hexo using the following command instead</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ol>
<h1 id="Init-blog"><a href="#Init-blog" class="headerlink" title="Init blog"></a>Init blog</h1><ol>
<li>Open cmd in the target base folder.</li>
<li>Run the following commands (assume blog root folder as <code>blog</code>):   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h1><h2 id="Setup-deploy-repo1"><a href="#Setup-deploy-repo1" class="headerlink" title="Setup deploy repo1"></a>Setup deploy repo<sup><a href="#fn_1" id="reffn_1">1</a></sup></h2><ol>
<li>Create a Git repo, e.g. <code>blog</code> under <code>me</code> GitHub account.</li>
<li>Add SSH Key to <code>me</code> GitHub account (assuming assocaited with email account <code>me@gmail.com</code>).<ol>
<li>Open <strong>Git Bash</strong>.</li>
<li>Run commands   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C me@gmail.com</span><br></pre></td></tr></table></figure></li>
<li>Open created <code>id_rsa.pub</code> and copy all its content to <code>me</code> GitHub account.</li>
</ol>
</li>
<li>Setup user info by running following commands in <strong>Git Bash</strong>   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">"user_name"</span></span><br><span class="line">git config --global user.email <span class="string">"email_address"</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Use-NexT-theme"><a href="#Use-NexT-theme" class="headerlink" title="Use NexT theme"></a>Use NexT theme</h2><ol>
<li>Download <a href="https://github.com/theme-next/hexo-theme-next/releases" target="_blank" rel="noopener">NexT releases</a> and put it to <code>blog/themes/next</code>.</li>
<li>Enable it by editing <code>blog/_config.yml</code>.   <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Support-global-search2"><a href="#Support-global-search2" class="headerlink" title="Support global search2"></a>Support global search<sup><a href="#fn_2" id="reffn_2">2</a></sup></h2><ol>
<li>Install plugin <code>hexo-generator-searchdb</code>. Run following commands in cmd.   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li>
<li>Add following config to <code>blog/_config.yml</code>.   <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># search</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">field:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">format:</span> <span class="string">html</span></span><br><span class="line"><span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure></li>
<li>Enable in theme config, i.e. <code>blog/themes/next/_config.yml</code>.   <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Support-images-via-standard-Markdown5"><a href="#Support-images-via-standard-Markdown5" class="headerlink" title="Support images via standard Markdown5"></a>Support images via standard Markdown<sup><a href="#fn_5" id="reffn_5">5</a></sup></h2><ol>
<li>Enable in config <code>blog/_config.yml</code>.   <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li>
<li>Run commend in cmd.   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i -s hexo-asset-link</span><br></pre></td></tr></table></figure></li>
<li>Done! Add image in post using   <figure class="highlight md"><table><tr><td class="code"><pre><span class="line">![<span class="string">Alt Text</span>](<span class="link">Post-Asset-Folder/image-name.png</span>)</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Support-LaTex-math-equations3"><a href="#Support-LaTex-math-equations3" class="headerlink" title="Support LaTex math equations3"></a>Support LaTex math equations<sup><a href="#fn_3" id="reffn_3">3</a></sup></h2><ol>
<li>Install <strong>Kramed</strong> to replace <strong>Marked</strong>.   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure></li>
<li>Config <code>blog/node_modules/hexo-renderer-kramed/lib/renderer.js</code>. Replace   <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Change inline math rule</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatText</span>(<span class="params">text</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// Fit kramed's rule: $$ + \1 + $$</span></span><br><span class="line">      <span class="keyword">return</span> text.replace(<span class="regexp">/`\$(.*?)\$`/g</span>, <span class="string">'$$$$$1$$$$'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
   by   <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Change inline math rule</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatText</span>(<span class="params">text</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> text;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>Install <code>hexo-renderer-mathjax</code> to replace <code>hexo-math</code>.   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-math --save</span><br><span class="line">npm install hexo-renderer-mathjax --save</span><br></pre></td></tr></table></figure></li>
<li>Config Mathjax CDN in <code>blog/node_modules/hexo-renderer-mathjax/mathjax.html</code>. Config <code>&lt;script&gt;</code> as   <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>Config <code>blog/node_modules/kramed/lib/rules/inline.js</code>.   <ol>
<li>Replace    <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">escape</span>: <span class="regexp">/^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/</span>,</span><br></pre></td></tr></table></figure>
   by   <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">escape</span>: <span class="regexp">/^\\([`*\[\]()# +\-.!_&gt;])/</span>,</span><br></pre></td></tr></table></figure></li>
<li>Replace    <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">em: <span class="regexp">/^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</span>,</span><br></pre></td></tr></table></figure>
   by   <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">em: <span class="regexp">/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</span>,</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li>Enable Mathjax in <code>blog/themes/next/_config.yml</code>   <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li>
<li>Enable in given post (only enable when needed for speed).   <figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: ...</span><br><span class="line">date: ...</span><br><span class="line">mathjax: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Support-Disqus-comments4"><a href="#Support-Disqus-comments4" class="headerlink" title="Support Disqus comments4"></a>Support Disqus comments<sup><a href="#fn_4" id="reffn_4">4</a></sup></h2><ol>
<li>Setup on <a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a>.<ol>
<li>Create an account and log into Disqus. </li>
<li>Click the <code>GET STARTED</code> button.</li>
<li>Click <code>I want to install Disqus on my site</code>.</li>
<li>Enter <code>Website Name</code>, which will serve as your Disqus shortname, and select a <code>Category</code>.</li>
<li>Click <code>Create Site</code> button.</li>
<li>In <code>2. Install Disqus</code>, click <code>I don&#39;t see my platform listed, install manually with Universal Code</code>, and then click <code>Configure</code>.</li>
<li>Click <code>Complete Setup</code>.</li>
</ol>
</li>
<li>Config in <code>blog/themes/next/_config.yml</code>.   <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">disqus:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">shortname:</span> <span class="string">your-short-disqus-name</span></span><br><span class="line">      <span class="attr">count:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="Write-preview-amp-deploy"><a href="#Write-preview-amp-deploy" class="headerlink" title="Write, preview &amp; deploy"></a>Write, preview &amp; deploy</h1><ol>
<li>Create a post, e.g. <code>first post</code>. This will add <code>blog/source/_posts/first-post.md</code>, which can be edited using any text/Markdown editor you want.   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">"first post"</span></span><br></pre></td></tr></table></figure></li>
<li>Build and preview posts (preview at <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>)   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo generate &amp;&amp; hexo server</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Note: While in preview, post edits will be updated in realtime (may require refreshing the preview page).</p>
</blockquote>
</li>
<li>Deploy/publish. By default, it will be available at <a href="https://me.github.io" target="_blank" rel="noopener">https://me.github.io</a>.   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g -d</span><br></pre></td></tr></table></figure>
</li>
</ol>
<blockquote id="fn_1">
<sup>1</sup>. <a href="https://www.cnblogs.com/xsilence/p/6001938.html" target="_blank" rel="noopener">针对github权限导致hexo部署失败的解决方案</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. <a href="https://yashuning.github.io/2018/06/29/hexo-Next-%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/" target="_blank" rel="noopener">hexo - Next 主题添加搜索功能</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_3">
<sup>3</sup>. <a href="https://www.jianshu.com/p/e8d433a2c5b7" target="_blank" rel="noopener">如何在 hexo 中支持 Mathjax?</a><a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_4">
<sup>4</sup>. <a href="https://theme-next.org/docs/third-party-services/comments" target="_blank" rel="noopener">Comment Systems</a><a href="#reffn_4" title="Jump back to footnote [4] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_5">
<sup>5</sup>. <a href="https://chrismroberts.com/2020/01/06/using-markdown-in-hexo-to-add-images/" target="_blank" rel="noopener">Adding Images to Hexo Posts with Markdown</a><a href="#reffn_5" title="Jump back to footnote [5] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>setup</tag>
      </tags>
  </entry>
  <entry>
    <title>Build Boost for x32/x64 VC++ compilers on Windows</title>
    <url>/2013/01/02/Build-Boost-for-x32-x64-VC-compilers-on-Windows/</url>
    <content><![CDATA[<p><a href="http://www.boost.org/" target="_blank" rel="noopener">Boost</a> is a set of libraries for the C++ programming language that provide support for tasks and structures such as linear algebra, pseudorandom number generation, multithreading, image processing, regular expressions, and unit testing. Steps to build Boost for x32/x64 VC++ compilers on Windows are as follows:</p>
<a id="more"></a>
<ol>
<li>Download <a href="http://www.boost.org/" target="_blank" rel="noopener">Boost</a> and extract it to PC (assume <code>C:\Libs\boost_1_47_0</code>).</li>
<li>Double click to run <code>bootstrap.bat</code> in Boost’s root folder, which will generate <code>bjam.exe</code> (and <code>b2.exe</code>…) in the same folder.</li>
<li>Run <strong>VC++</strong>.</li>
<li><code>VC++ &gt; Tools &gt; Visual Studio Command Prompt</code>.</li>
<li><p>In the command window, first change working folder to <code>C:\Libs\boost_1_47_0</code> and type the following command (Note: it will take a long time to finish, which is depended on your system, 20min for me.):</p>
 <figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">bjam --build-<span class="built_in">type</span>=complete toolset=msvc-<span class="number">10</span>.<span class="number">0</span> threading=multi link=static address-model=<span class="number">64</span></span><br></pre></td></tr></table></figure></li>
<li>Setup VC++. Two steps need to be done.<ul>
<li>Add <code>C:\Libs\boost_1_47_0</code> to project Include files.</li>
<li>Add <code>C:\Libs\boost_1_47_0\stage\lib</code> to project Library files.</li>
</ul>
</li>
</ol>
<h2 id="Remarks"><a href="#Remarks" class="headerlink" title="Remarks:"></a>Remarks:</h2><p>The above step will build <strong>static Boost libraries for x64 VC++</strong>. Options can be modified in step 5 to build it for other versions’ VC++, see the following table for details.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">Command</th>
<th style="text-align:center">Options</th>
<th style="text-align:center">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">toolset</td>
<td style="text-align:center"><span style="color:red">msvc-6.5</span> <br> <span style="color:red">msvc-8.0</span> <br> <span style="color:red">msvc-9.0</span> <br> <span style="color:red">msvc-10.0</span> <br> <span style="color:red">msvc-11.0</span> <br> <span style="color:red">msvc-12.0</span></td>
<td style="text-align:center">Visual Studio 6.0, Service Pack 5 <br> Visual Studio 2005 <br> Visual Studio 2008 <br> Visual Studio 2010 <br> Visual Studio 2012 <br> Visual Studio 2013</td>
</tr>
<tr>
<td style="text-align:center">link</td>
<td style="text-align:center"><span style="color:red">static</span> <br> <span style="color:red">shared</span></td>
<td style="text-align:center">static libraries <br> shared libraries</td>
</tr>
<tr>
<td style="text-align:center">address-model</td>
<td style="text-align:center"><span style="color:red">32</span> <br> <span style="color:red">64</span></td>
<td style="text-align:center">x32 VC++ compilers <br> x64 VC++ compilers</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <tags>
        <tag>setup</tag>
        <tag>boost</tag>
      </tags>
  </entry>
  <entry>
    <title>CMake sumup</title>
    <url>/2014/09/25/CMake-sumup/</url>
    <content><![CDATA[<h2 id="CMakeLists-txt-for-Lib-project"><a href="#CMakeLists-txt-for-Lib-project" class="headerlink" title="CMakeLists.txt for Lib project:"></a>CMakeLists.txt for Lib project:</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># add path of headers to include_directories</span></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="keyword">include</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># STATIC for static lib, and SHARED for dynamic</span></span><br><span class="line"><span class="keyword">FILE</span>(GLOB SOURCES</span><br><span class="line">	src/*.h</span><br><span class="line">    src/*.cpp</span><br><span class="line">)</span><br><span class="line"><span class="keyword">add_library</span>(mylib STATIC <span class="variable">$&#123;SOURCES&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># link libs, list all of them</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(mylib</span><br><span class="line">    -lib-name-.lib</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="CMakeLists-txt-for-EXE-project"><a href="#CMakeLists-txt-for-EXE-project" class="headerlink" title="CMakeLists.txt for EXE project:"></a>CMakeLists.txt for EXE project:</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Set the minimum required version of cmake.</span></span><br><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">2.6</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the entire solution name.</span></span><br><span class="line"><span class="keyword">project</span>(testProject)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add path of headers to include_directories.</span></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="keyword">include</span>)</span><br><span class="line"><span class="keyword">include_directories</span>(lib/mylib)</span><br><span class="line"><span class="keyword">include_directories</span>(external/-external-lib-/<span class="keyword">include</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add an executable to the project using the specified source files.</span></span><br><span class="line"><span class="keyword">file</span>(GLOB SOURCES</span><br><span class="line">    src/*.*</span><br><span class="line">	lib/-external-lib-/source/*.h</span><br><span class="line">    lib/-external-lib-/source/*.cpp</span><br><span class="line">    <span class="keyword">test</span>/main.cpp</span><br><span class="line">)</span><br><span class="line"><span class="keyword">add_executable</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> <span class="variable">$&#123;SOURCES&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add mylib lib project</span></span><br><span class="line"><span class="keyword">add_subdirectory</span>(lib/mylib)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> mylib)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add opencv lib</span></span><br><span class="line"><span class="keyword">find_package</span>(OpenCV <span class="number">2</span> REQUIRED)</span><br><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;OPENCV_INCLUDE_DIRS&#125;</span>)</span><br><span class="line"><span class="keyword">link_directories</span>(<span class="variable">$&#123;OPENCV_LIBRARY_DIRS&#125;</span>)</span><br><span class="line"><span class="keyword">add_definitions</span>(<span class="variable">$&#123;OPENCV_DEFINITIONS&#125;</span>)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span><span class="variable">$&#123;OpenCV_LIBS&#125;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Remarks"><a href="#Remarks" class="headerlink" title="Remarks:"></a>Remarks:</h2><ol>
<li>For <strong><code>add_executable()</code></strong>: actually there is no need to add headers here, but is essential to load them also in project view.</li>
<li>To use name that contains spaces, use <code>\</code> before spaces to escape them.</li>
<li>To group source files in VS (e.g. put given source files into new folder under VS), use<ul>
<li><code>source_group(&lt;name&gt; FILES &lt;src&gt;...)</code> (use <code>${SOURCES}</code> for  files list defined earlier), or</li>
<li><code>source_group(&lt;name&gt; REGULAR_EXPRESSION &lt;regex&gt;)</code> (e.g. use <code>.*..*</code> for normal <code>*.*</code>)</li>
</ul>
</li>
<li>Link different libraries for Debug and Release mode: <figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">target_link_libraries</span>(testProj</span><br><span class="line">      debug -path-to-debug-lib-/lib_debug.lib</span><br><span class="line">optimized -path-to-release-lib-/lib.lib</span><br><span class="line">  )</span><br></pre></td></tr></table></figure></li>
<li>CMake for setting highest warning level can be: <figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># set highest warnings level, and treat them as errors</span></span><br><span class="line"><span class="keyword">if</span>(MSVC)</span><br><span class="line">    <span class="comment"># c++</span></span><br><span class="line">    <span class="keyword">if</span>(CMAKE_CXX_FLAGS <span class="keyword">MATCHES</span> <span class="string">"/W[0-4]"</span>)</span><br><span class="line">        <span class="keyword">string</span>(REGEX REPLACE <span class="string">"/W[0-4]"</span> <span class="string">"/W4 /WX"</span> CMAKE_CXX_FLAGS <span class="string">"$&#123;CMAKE_CXX_FLAGS&#125;"</span>)</span><br><span class="line">    <span class="keyword">else</span>()</span><br><span class="line">        <span class="keyword">set</span>(CMAKE_CXX_FLAGS <span class="string">"$&#123;CMAKE_CXX_FLAGS&#125; /W4 /WX"</span>)</span><br><span class="line">    <span class="keyword">endif</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># c</span></span><br><span class="line">    <span class="keyword">if</span>(CMAKE_C_FLAGS <span class="keyword">MATCHES</span> <span class="string">"/W[0-4]"</span>)</span><br><span class="line">        <span class="keyword">string</span>(REGEX REPLACE <span class="string">"/W[0-4]"</span> <span class="string">"/W4 /WX"</span> CMAKE_C_FLAGS <span class="string">"$&#123;CMAKE_C_FLAGS&#125;"</span>)</span><br><span class="line">    <span class="keyword">else</span>()</span><br><span class="line">        <span class="keyword">set</span>(CMAKE_C_FLAGS <span class="string">"$&#123;CMAKE_C_FLAGS&#125; /W4 /WX"</span>)</span><br><span class="line">    <span class="keyword">endif</span>()</span><br><span class="line"><span class="keyword">elseif</span>(CMAKE_COMPILER_IS_GNUCC <span class="keyword">OR</span> CMAKE_COMPILER_IS_GNUCXX)</span><br><span class="line">    <span class="keyword">set</span>(CMAKE_CXX_FLAGS <span class="string">"$&#123;CMAKE_CXX_FLAGS&#125; -Wall -Werror -Wconversion -Wno-long-long -pedantic"</span>)</span><br><span class="line"><span class="keyword">elseif</span>(CMAKE_COMPILER_IS_GNUC)</span><br><span class="line">    <span class="keyword">set</span>(CMAKE_C_FLAGS <span class="string">"$&#123;CMAKE_C_FLAGS&#125; -Wall -Werror -Wconversion -Wno-long-long -pedantic"</span>)</span><br><span class="line"><span class="keyword">endif</span>()</span><br></pre></td></tr></table></figure></li>
<li>Enable OpenMP: <figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># enable openmp</span></span><br><span class="line"><span class="keyword">find_package</span>(OpenMP)</span><br><span class="line"><span class="keyword">if</span> (OPENMP_FOUND)</span><br><span class="line">	<span class="keyword">set</span> (CMAKE_C_FLAGS <span class="string">"$&#123;CMAKE_C_FLAGS&#125; $&#123;OpenMP_C_FLAGS&#125;"</span>)</span><br><span class="line">	<span class="keyword">set</span> (CMAKE_CXX_FLAGS <span class="string">"$&#123;CMAKE_CXX_FLAGS&#125; $&#123;OpenMP_CXX_FLAGS&#125;"</span>)</span><br><span class="line"><span class="keyword">endif</span>()</span><br></pre></td></tr></table></figure></li>
<li>for copying all needed data files to binary dir (when <code>cmake</code>), there are two ways:<ul>
<li>List all the files, e.g.,  <figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">file</span>(GLOB files_needed</span><br><span class="line">	<span class="keyword">test</span>/<span class="keyword">test</span>-data/*.*</span><br><span class="line">	lib/-external-lib-/models/*.dat</span><br><span class="line">	lib/-matlab-/*.m</span><br><span class="line">)</span><br><span class="line"><span class="keyword">file</span>(COPY <span class="variable">$&#123;files_needed&#125;</span> DESTINATION <span class="variable">$&#123;CMAKE_CURRENT_BINARY_DIR&#125;</span>)</span><br></pre></td></tr></table></figure></li>
<li>List only the folders that contain the data, e.g.,  <figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">file</span>(GLOB files_needed</span><br><span class="line">	<span class="keyword">test</span>/<span class="keyword">test</span>-data</span><br><span class="line">	lib/-external-lib-/models</span><br><span class="line">	lib/-matlab-</span><br><span class="line">)</span><br><span class="line"><span class="keyword">file</span>(COPY <span class="variable">$&#123;files_needed&#125;</span> DESTINATION <span class="variable">$&#123;CMAKE_CURRENT_BINARY_DIR&#125;</span>)</span><br></pre></td></tr></table></figure>
The difference is that: the first method <strong>only copy the listed files</strong> to the binary dir <strong>without directory structure</strong>, while the second will <strong>copy all the files in these folders</strong>, as well as <strong>with directory structure</strong> (only the least parent will retain), i.e. there will be three folders named <code>test-data</code>, <code>models</code> and <code>-matlab-</code> in the binary dir after copying.</li>
</ul>
</li>
</ol>
]]></content>
      <tags>
        <tag>cmake</tag>
        <tag>coding</tag>
      </tags>
  </entry>
  <entry>
    <title>Character encodings of text files</title>
    <url>/2013/01/21/Character-encodings-of-text-files/</url>
    <content><![CDATA[<p>A text file can be encoded in many different <a href="http://en.wikipedia.org/wiki/Character_encoding" target="_blank" rel="noopener">character encodings</a>. There are many <a href="http://en.wikipedia.org/wiki/Windows_code_page" target="_blank" rel="noopener">encoding variations</a> even just for Windows system. Special attention has to be given when handling text files with different character encodings, e.g. if we use <code>fstream</code>‘s <code>getline()</code> to read from a text file (contains Chinese) in <code>UTF-8</code>, we will get gibberish characters, while will be correct if the text file is in <code>ANSI</code>.</p>
<p>In this post, given a text file, I will show how to get its character encoding and how to convert it from one character encoding to another.</p>
<a id="more"></a>
<h2 id="Get-the-character-encoding-of-a-text-file"><a href="#Get-the-character-encoding-of-a-text-file" class="headerlink" title="Get the character encoding of a text file"></a>Get the character encoding of a text file</h2><p>Actually, <a href="http://stackoverflow.com/questions/9103294/c-how-to-inspect-file-byte-order-mark-in-order-to-get-if-it-is-utf-8" target="_blank" rel="noopener">in many cases</a>, we cannot be sure about which character encoding a file is encoded. In the following, I will only give the method to get a text file’s character encoding if its character encoding can only be 4 basic ones, namely <code>ANSI</code>, <code>Unicode</code>, <code>Unicode big endian</code> and <code>UTF-8 (with BOM)</code>. These 4 encodings are all Notepad supports.  It cannot guarantee to give the correct answer if not satisfy this, e.g. it will be considered as a ANSI file if it’s UTF-8 (without BOM). See the following code (based on <a href="http://hi.baidu.com/whmtorrent/item/932d270a1dc4787abee97e4f" target="_blank" rel="noopener">[1]</a> <a href="http://stackoverflow.com/questions/9103294/c-how-to-inspect-file-byte-order-mark-in-order-to-get-if-it-is-utf-8" target="_blank" rel="noopener">[2]</a>).</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 0 - ANSI</span></span><br><span class="line"><span class="comment">// 1 - Unicode</span></span><br><span class="line"><span class="comment">// 2 - Unicode big endian</span></span><br><span class="line"><span class="comment">// 3 - UTF-8</span></span><br><span class="line"><span class="comment">// <span class="doctag">NOTE:</span> only correct for handling normal encodings (i.e. see NOTEPAD's 4 types)</span></span><br><span class="line"><span class="comment">//        , eg. UTF-8 with BOM, if UTF-8 without BOM, will considered as ANSI</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_text_file_encoding</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *filename)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nReturn = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> uniTxt[] = &#123;<span class="number">0xFF</span>, <span class="number">0xFE</span>&#125;;<span class="comment">// Unicode file header</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> endianTxt[] = &#123;<span class="number">0xFE</span>, <span class="number">0xFF</span>&#125;;<span class="comment">// Unicode big endian file header</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> utf8Txt[] = &#123;<span class="number">0xEF</span>, <span class="number">0xBB</span>&#125;;<span class="comment">// UTF_8 file header</span></span><br><span class="line"></span><br><span class="line">    DWORD dwBytesRead = <span class="number">0</span>;</span><br><span class="line">    HANDLE hFile = CreateFile(filename, GENERIC_READ, FILE_SHARE_READ, <span class="literal">NULL</span>, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (hFile == INVALID_HANDLE_VALUE)</span><br><span class="line">    &#123;</span><br><span class="line">        hFile = <span class="literal">NULL</span>;</span><br><span class="line">        CloseHandle(hFile);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    BYTE *lpHeader = <span class="keyword">new</span> BYTE[<span class="number">2</span>];</span><br><span class="line">    ReadFile(hFile, lpHeader, <span class="number">2</span>, &amp;dwBytesRead, <span class="literal">NULL</span>);</span><br><span class="line">    CloseHandle(hFile);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (lpHeader[<span class="number">0</span>] == uniTxt[<span class="number">0</span>] &amp;&amp; lpHeader[<span class="number">1</span>] == uniTxt[<span class="number">1</span>])<span class="comment">// Unicode file</span></span><br><span class="line">        nReturn = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (lpHeader[<span class="number">0</span>] == endianTxt[<span class="number">0</span>] &amp;&amp; lpHeader[<span class="number">1</span>] == endianTxt[<span class="number">1</span>])<span class="comment">//  Unicode big endian file</span></span><br><span class="line">        nReturn = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (lpHeader[<span class="number">0</span>] == utf8Txt[<span class="number">0</span>] &amp;&amp; lpHeader[<span class="number">1</span>] == utf8Txt[<span class="number">1</span>])<span class="comment">// UTF-8 file</span></span><br><span class="line">        nReturn = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        nReturn = <span class="number">0</span>;   <span class="comment">//Ascii</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">delete</span> []lpHeader;</span><br><span class="line">    <span class="keyword">return</span> nReturn;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Convert-from-one-character-encoding-to-another"><a href="#Convert-from-one-character-encoding-to-another" class="headerlink" title="Convert from one character encoding to another"></a>Convert from one character encoding to another</h2><p>As the example goes in the beginning that if we use <code>fstream</code>‘s <code>getline()</code> to read from a text file (contains Chinese) in <code>UTF8</code>, we will get gibberish characters, while will be correct if the text file is in <code>ANSI</code>, in the following, only 2 converting methods will be given, namely <code>UTF-8 (with BOM)</code> to <code>ANSI</code> and <code>UTF-8 (without BOM)</code> to <code>ANSI</code>. See the following code (based on <a href="http://m.oschina.net/blog/17457" target="_blank" rel="noopener">[3]</a> <a href="http://blog.csdn.net/afjafjafj2008/article/details/6620617" target="_blank" rel="noopener">[4]</a>). Conversions between <code>UTF-8</code>, <code>UTF-16</code> and <code>UTF-32</code> can be seen from <a href="http://my.oschina.net/zhangzhihao/blog/70462" target="_blank" rel="noopener">[5]</a>.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// change a char's encoding from UTF8 to ANSI</span></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">change_encoding_from_UTF8_to_ANSI</span><span class="params">(<span class="keyword">char</span>* szU8)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> wcsLen = ::MultiByteToWideChar(CP_UTF8, <span class="literal">NULL</span>, szU8, <span class="built_in">strlen</span>(szU8), <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">wchar_t</span>* wszString = <span class="keyword">new</span> <span class="keyword">wchar_t</span>[wcsLen + <span class="number">1</span>];</span><br><span class="line">    ::MultiByteToWideChar(CP_UTF8, <span class="literal">NULL</span>, szU8, <span class="built_in">strlen</span>(szU8), wszString, wcsLen);</span><br><span class="line">    wszString[wcsLen] = <span class="string">'\0'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ansiLen = ::WideCharToMultiByte(CP_ACP, <span class="literal">NULL</span>, wszString, wcslen(wszString), <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">char</span>* szAnsi = <span class="keyword">new</span> <span class="keyword">char</span>[ansiLen + <span class="number">1</span>];</span><br><span class="line">    ::WideCharToMultiByte(CP_ACP, <span class="literal">NULL</span>, wszString, wcslen(wszString), szAnsi, ansiLen, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    szAnsi[ansiLen] = <span class="string">'\0'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> szAnsi;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// read UTF-8 (with BOM) file and convert it to be in ANSI</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_text_file_encoding_from_UTF8_with_BOM_to_ANSI</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* filename)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ifstream infile;</span><br><span class="line">    <span class="built_in">string</span> strLine=<span class="string">""</span>;</span><br><span class="line">    <span class="built_in">string</span> strResult=<span class="string">""</span>;</span><br><span class="line">    infile.open(filename);</span><br><span class="line">    <span class="keyword">if</span> (infile)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// the first 3 bytes (ef bb bf) is UTF-8 header flags</span></span><br><span class="line">        <span class="comment">// all the others are single byte ASCII code.</span></span><br><span class="line">        <span class="comment">// should delete these 3 when output</span></span><br><span class="line">        getline(infile, strLine);</span><br><span class="line">        strResult += strLine.substr(<span class="number">3</span>)+<span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!infile.eof())</span><br><span class="line">        &#123;</span><br><span class="line">            getline(infile, strLine);</span><br><span class="line">            strResult += strLine+<span class="string">"\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    infile.close();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span>* changeTemp=<span class="keyword">new</span> <span class="keyword">char</span>[strResult.length()];</span><br><span class="line">    <span class="built_in">strcpy</span>(changeTemp, strResult.c_str());</span><br><span class="line">    <span class="keyword">char</span>* changeResult = change_encoding_from_UTF8_to_ANSI(changeTemp);</span><br><span class="line">    strResult=changeResult;</span><br><span class="line"></span><br><span class="line">    ofstream outfile;</span><br><span class="line">    outfile.open(filename);</span><br><span class="line">    outfile.write(strResult.c_str(),strResult.length());</span><br><span class="line">    outfile.flush();</span><br><span class="line">    outfile.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// read UTF-8 (without BOM) file and convert it to be in ANSI</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_text_file_encoding_from_UTF8_without_BOM_to_ANSI</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* filename)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ifstream infile;</span><br><span class="line">    <span class="built_in">string</span> strLine=<span class="string">""</span>;</span><br><span class="line">    <span class="built_in">string</span> strResult=<span class="string">""</span>;</span><br><span class="line">    infile.open(filename);</span><br><span class="line">    <span class="keyword">if</span> (infile)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(!infile.eof())</span><br><span class="line">        &#123;</span><br><span class="line">            getline(infile, strLine);</span><br><span class="line">            strResult += strLine+<span class="string">"\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    infile.close();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span>* changeTemp=<span class="keyword">new</span> <span class="keyword">char</span>[strResult.length()];</span><br><span class="line">    <span class="built_in">strcpy</span>(changeTemp, strResult.c_str());</span><br><span class="line">    <span class="keyword">char</span>* changeResult = change_encoding_from_UTF8_to_ANSI(changeTemp);</span><br><span class="line">    strResult=changeResult;</span><br><span class="line"></span><br><span class="line">    ofstream outfile;</span><br><span class="line">    outfile.open(filename);</span><br><span class="line">    outfile.write(strResult.c_str(),strResult.length());</span><br><span class="line">    outfile.flush();</span><br><span class="line">    outfile.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li>What Every Programmer Absolutely, Positively Needs To Know About Encodings And Character Sets To Work With Text: <a href="http://kunststube.net/encoding/" target="_blank" rel="noopener">http://kunststube.net/encoding/</a></li>
</ol>
]]></content>
      <tags>
        <tag>coding</tag>
        <tag>encoding</tag>
        <tag>text</tag>
      </tags>
  </entry>
  <entry>
    <title>DOS sumup</title>
    <url>/2012/04/06/DOS-sumup/</url>
    <content><![CDATA[<h2 id="Upgrade-the-structure-of-all-files-in-current-folder-including-sub-folders-and-sub-sub-folders…-by-one-level"><a href="#Upgrade-the-structure-of-all-files-in-current-folder-including-sub-folders-and-sub-sub-folders…-by-one-level" class="headerlink" title="Upgrade the structure of all files in current folder (including sub-folders and sub-sub-folders…) by one level"></a>Upgrade the structure of all files in current folder (including sub-folders and sub-sub-folders…) by one level</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> /r %x <span class="keyword">in</span> (*.*) <span class="keyword">do</span> move <span class="string">"%x"</span> <span class="string">"%x"</span>/../..</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="Get-all-file-names-absolute-paths-in-current-folder-to-txt"><a href="#Get-all-file-names-absolute-paths-in-current-folder-to-txt" class="headerlink" title="Get all file names (absolute paths) in current folder to txt"></a>Get all file names (absolute paths) in current folder to txt</h2><ul>
<li><p>Get all file names</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Dir /b *.* &gt; list.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p>Get all file full paths</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Dir /s /b *.* &gt; list.txt</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <tags>
        <tag>coding</tag>
        <tag>dos</tag>
      </tags>
  </entry>
  <entry>
    <title>Conversion between image and world coordinates</title>
    <url>/2012/04/06/Conversion-between-image-and-world-coordinates/</url>
    <content><![CDATA[<p>Conversion between Image Coordinates and World Coordinates are fundamental to all image formation problems. Always confused to me. Sumup here for further references.</p>
<p><img src="/2012/04/06/Conversion-between-image-and-world-coordinates/image2.png" alt=""></p>
<a id="more"></a>
<h2 id="Preknowledge-Camera-calibration-information"><a href="#Preknowledge-Camera-calibration-information" class="headerlink" title="Preknowledge: Camera calibration information"></a>Preknowledge: Camera calibration information</h2><p>First we have to know camera calibration information, which is essential for these conversions. These parameters contains (see PETS 2009’s calibration data as an example):</p>
<p><strong>1. Geometry parameters</strong></p>
<ul>
<li>\(w\), \(h\) (image’s width and height)</li>
<li>\(dpx\), \(dpy\)</li>
<li>\(dx\), \(dy\)</li>
<li>\(ncx\)</li>
<li>\(nfx\)</li>
</ul>
<p><strong>2. Intrinsic parameters</strong></p>
<ul>
<li>\(f\) (focal length)</li>
<li>\(sx\)</li>
<li>\(cx\), \(cy\)</li>
<li>\(kappa1\)</li>
</ul>
<p><strong>3. Extrinsic parameters</strong></p>
<ul>
<li>\(rx\), \(ry\), \(rz\)</li>
<li>\(tx\), \(ty\), \(tz\)</li>
</ul>
<p>Based on above parameters, we can get:</p>
<ol>
<li><p><strong>Camera transform matrix \(Pc\) (3×4)</strong> that multiplies a scene point expressed as a homogeneous coordinate in \(R^4\) (\(w1(x,y,z,1)\)) to produce an image point expressed as a homogeneous coordinate in \(R^3\) (\(w2(u,v,1)\)).</p>
<p> NOTE: Traditionally, we can obtain (u,v) by the following formula that is projected from 3D scene point (x,y,z). But we have to concern image distortion problem, thus, in practice, we often do this by 4 steps as shown in following <strong>PART: World coordinates to image coordinates</strong>.</p>
<script type="math/tex; mode=display">
     w \begin{pmatrix} u \\\ v \\\ 1 \end{pmatrix}
     = Pc \cdot \lambda \begin{pmatrix} x \\\ y \\\ z \\\ 1 \end{pmatrix}
     = \begin{pmatrix} R11 & R12 & R13 & R14 \\\  R21 & R22 & R23 & R24 \\\  R31 & R32 & R33 & R34 \end{pmatrix} \cdot \lambda \begin{pmatrix} x \\\ y \\\ z \\\ 1 \end{pmatrix}</script><p> , where</p>
<script type="math/tex; mode=display">
     \begin{cases} \begin{array}{l l}
         R11 &= cb \cdot cg \\\
         R12 &= cg \cdot sa \cdot sb - ca \cdot sg \\\
         R13 &= sa \cdot sg + ca \cdot cg \cdot sb \\\
         R14 &= tx \\\
         R21 &= cb \cdot sg \\\
         R22 &= sa \cdot sb \cdot sg + ca \cdot cg \\\
         R23 &= ca \cdot sb \cdot sg - cg \cdot sa \\\
         R24 &= ty \\\
         R31 &= -sb \\\
         R32 &= cb \cdot sa \\\
         R33 &= ca \cdot cb \\\
         R34 &= tz \\\
         sa &= \sin(rx) \\\
         ca &= \cos(rx) \\\
         sb &= \sin(ry) \\\
         cb &= \cos(ry) \\\
         sg &= \sin(rz) \\\
         cg &= \cos(rz)
     \end{array} \end{cases}</script></li>
<li><p><strong>Camera position (\(C<em>{posx}\), \(C</em>{posy}\), \(C_{posz}\)):</strong></p>
<script type="math/tex; mode=display">
     \begin{cases} \begin{array}{l l}
         Cposx &= -( tx \cdot R11 + ty \cdot R21 + tz \cdot R31 ) \\\
         Cposy &= -( tx \cdot R12 + ty \cdot R22 + tz \cdot R32 ) \\\
         Cposz &= -( tx \cdot R13 + ty \cdot R23 + tz \cdot R33 )
     \end{array} \end{cases}</script></li>
</ol>
<h2 id="World-coordinates-to-image-coordinates-3D-gt-2D-i-e-x-y-z-gt-u-v"><a href="#World-coordinates-to-image-coordinates-3D-gt-2D-i-e-x-y-z-gt-u-v" class="headerlink" title="World coordinates to image coordinates (\(3D=&gt;2D\), i.e., \((x,y,z)=&gt;(u,v)\))"></a>World coordinates to image coordinates (\(3D=&gt;2D\), i.e., \((x,y,z)=&gt;(u,v)\))</h2><p>Meaning: 3D scene point \((x,y,z) =&gt;\) 2D image pixel \((u,v)\). There need to be 4 steps to do this:</p>
<ol>
<li><p><strong>Convert from world coordinates to camera coordinates (\(3D =&gt; 3D\), i.e., \((x,y,z)=&gt;(xc,yc,zc)\)):</strong></p>
<script type="math/tex; mode=display">
     \begin{pmatrix} xc \\\ yc \\\ zc \end{pmatrix}
     = Pc \cdot \begin{pmatrix} x \\\ y \\\ z \\\ 1 \end{pmatrix}</script></li>
<li><p><strong>Convert from camera coordinates to undistorted sensor plane coordinates (\(3D=&gt;2D\), i.e., \((xc,yc,zc)=&gt;(xu,yu)\)):</strong></p>
<script type="math/tex; mode=display">
     \begin{cases} \begin{array}{l l}
         xu &= \frac{f \cdot xc}{zc} \\\
         yu &= \frac{f \cdot yc}{zc}
     \end{array} \end{cases}</script></li>
<li><p><strong>Convert from undistorted to distorted sensor plane coordinates (\(2D=&gt;2D\), i.e., \((xu,yu)=&gt;(xd,yd)\))</strong>, reference to the following function in PETS 2009’s calibration pragram:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CameraModel::undistortedToDistortedSensorCoord</span> <span class="params">(<span class="keyword">double</span> Xu, <span class="keyword">double</span> Yu, <span class="keyword">double</span>&amp; Xd, <span class="keyword">double</span>&amp; Yd)</span></span></span><br></pre></td></tr></table></figure></li>
<li><p><strong>Convert from distorted sensor plane coordinates to image coordinates (\(2D=&gt;2D\), i.e., \((xd,yd)=&gt;(u,v)\)):</strong></p>
<script type="math/tex; mode=display">
     \begin{cases} \begin{array}{l l}
         u &= \frac{xd \cdot sx}{dpx} + cx \\\
         v &= \frac{yd}{dpy} + cy
     \end{array} \end{cases}</script></li>
</ol>
<h2 id="Image-coordinates-to-world-coordinates-2D-gt-3D-i-e-u-v-gt-x-y-z"><a href="#Image-coordinates-to-world-coordinates-2D-gt-3D-i-e-u-v-gt-x-y-z" class="headerlink" title="Image coordinates to world coordinates (\(2D=&gt;3D\), i.e., \((u,v)=&gt;(x,y,z)\))"></a>Image coordinates to world coordinates (\(2D=&gt;3D\), i.e., \((u,v)=&gt;(x,y,z)\))</h2><p><em>NOTE: If we only have one view, we actually can not get this done unless we also know its z-axis. In this case, please refer to the following function in PETS 2009’s calibration pragram:</em><br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">CameraModel::imageToWorld</span><span class="params">(<span class="keyword">double</span> Xi, <span class="keyword">double</span> Yi, <span class="keyword">double</span> Zw, <span class="keyword">double</span>&amp; Xw, <span class="keyword">double</span>&amp; Yw)</span></span></span><br></pre></td></tr></table></figure></p>
<p>Or we can use multi-views to make this done. The following are the steps given two image coordinates from two different views \((u1,v1)(u2,v2)\), both of them are projected from the same 3D scene point \((x,y,z)\). <strong>In this case, the problem has changed to be 2 \(2D\) pair points (corresponding points) \(=&gt; 3D\), i.e., \((u1,v1)(u2,v2)=&gt;(x,y,z)\).</strong></p>
<p>The idea is that we anti-project to the \(3D\) space (See following figure, \(C1,C2\) are the camera positions and \(p1=(u1,v1)\), \(p2=(u2,v2))\). We based on line \(R1=C1p1\) and line \(R2=C2p2\). Perfectly, the intersection of \(R1\) and \(R2\) is what we want \(P(x,y,z)\). Unfortunately, \(R1\) and \(R2\) do not in practice intersect, then the idea changes to find midpoint of shortest perpendicular. The following are the steps:<br><img src="/2012/04/06/Conversion-between-image-and-world-coordinates/image55.png" style="width: 400px;"/></p>
<ol>
<li><p><strong>Convert from image coordinates to distorted sensor coordinates (\(2D=&gt;2D\), i.e., \((u1,v1)=&gt;(xd1,yd1), (u2,v2)=&gt;(xd2,yd2)\)):</strong></p>
<script type="math/tex; mode=display">
     \begin{cases} \begin{array}{l l}
         xd1 &= dpx \cdot \frac{u1 - cx1}{sx1} \\\
         yd1 &= dpy \cdot (v1 - cy1) \\\
         xd2 &= dpx \cdot \frac{u2 - cx2}{sx2} \\\
         yd2 &= dpy \cdot (v2 - cy2)
     \end{array} \end{cases}</script></li>
<li><p><strong>Convert from distorted sensor to undistorted sensor plane coordinates (\(2D=&gt;2D\), i.e., \((xd1,yd1)=&gt;(xu1,yu1), (xd2,yd2)=&gt;(xu2,yu2)\)):</strong></p>
<script type="math/tex; mode=display">
     \begin{cases} \begin{array}{l l}
         xu1 &= xd1 \cdot (1 + kappa11 \cdot (xd1 \cdot xd1 + yd1 \cdot yd1)) \\\
         yu1 &= yd1 \cdot (1 + kappa11 \cdot (xd1 \cdot xd1 + yd1 \cdot yd1)) \\\
         xu2 &= xd2 \cdot (1 + kappa12 \cdot (xd2 \cdot xd2 + yd2 \cdot yd2)) \\\
         yu2 &= yd2 \cdot (1 + kappa12 \cdot (xd2 \cdot xd2 + yd2 \cdot yd2))
     \end{array} \end{cases}</script></li>
<li><p><strong>Convert from undistorted sensor plane coordinates to camera coordinates (\(2D=&gt;3D\), i.e., \((xu1,yu1)=&gt;(xc1,yc1,zc1), (xu1,yu1)=&gt;(xc1,yc1,zc1)\)):</strong></p>
<script type="math/tex; mode=display">
     \begin{cases} \begin{array}{l l}
         xc1 &= xu1 \\\
         yc1 &= yu1 \\\
         zc1 &= f1 \\\
         xc2 &= xu2 \\\
         yc2 &= yu2 \\\
         zc2 &= f2
     \end{array} \end{cases}</script><p> NOTE: Here assumed that image plane are between camera position and the scene, if are not, \(zc\) should be set to be \(–f\).</p>
</li>
<li><p><strong>Convert from camera coordinates to world coordinates (\(3D=&gt;3D\), i.e., \((xc1,yc1,zc1)=&gt;(x1,y1,z1), (xc2,yc2,zc2)=&gt;(x2,y2,z2)\)):</strong> refer to the following function in PETS 2009’s calibration pragram:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">CameraModel::cameraToWorldCoord</span> <span class="params">(<span class="keyword">double</span> xc, <span class="keyword">double</span> yc, <span class="keyword">double</span> zc, <span class="keyword">double</span>&amp; xw, <span class="keyword">double</span>&amp; yw, <span class="keyword">double</span>&amp; zw)</span></span></span><br></pre></td></tr></table></figure></li>
<li>Compute closest pair points of pair camera rays, say M1M2.</li>
<li>Return M1M2’s midpoint as result.</li>
</ol>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li>Multi-Camera Networks: Principles and Applications, H. Aghajan, A. Cavallaro, Elsevier, ISBN: 978-0-12-374633-7, May 2009.</li>
<li>PETS 2009 Benchmark Data, <a href="http://www.cvg.rdg.ac.uk/PETS2009/a.html" target="_blank" rel="noopener">http://www.cvg.rdg.ac.uk/PETS2009/a.html</a>.</li>
</ol>
]]></content>
      <tags>
        <tag>conversion</tag>
      </tags>
  </entry>
  <entry>
    <title>Debugging: errors and fixes</title>
    <url>/2012/09/06/Debugging-errors-and-fixes/</url>
    <content><![CDATA[<h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><h2 id="Error-code-S1023-when-trying-to-install-DirectX"><a href="#Error-code-S1023-when-trying-to-install-DirectX" class="headerlink" title="Error code: S1023 when trying to install DirectX"></a>Error code: S1023 when trying to install DirectX</h2><p>Solve <a href="http://answers.microsoft.com/en-us/windows/forum/windows_7-windows_programs/error-code-s1023-when-trying-to-install-directx/0aadf7ec-e004-42eb-8a1a-2865ff5b3a37" target="_blank" rel="noopener">[1]</a>:</p>
<ol>
<li>Uninstall <strong>Microsoft Visual C++ 2010 x86 Redistributable</strong> and <strong>Microsoft Visual C++ 2010 x64 Redistributable</strong>.</li>
<li>Install DirectX again. Should be OK.</li>
<li>Install back <strong>Microsoft Visual C++ 2010 x86 Redistributable</strong> and <strong>Microsoft Visual C++ 2010 x64 Redistributable</strong>.</li>
</ol>
<a id="more"></a>
<h2 id="Error-Code-S1023-when-trying-to-install-DirectX-SDK-June-2010"><a href="#Error-Code-S1023-when-trying-to-install-DirectX-SDK-June-2010" class="headerlink" title="Error Code: S1023 when trying to install DirectX SDK (June 2010)"></a>Error Code: S1023 when trying to install DirectX SDK (June 2010)</h2><p>cc: <a href="http://blogs.msdn.com/b/chuckw/archive/2011/12/09/known-issue-directx-sdk-june-2010-setup-and-the-s1023-error.aspx" target="_blank" rel="noopener">http://blogs.msdn.com/b/chuckw/archive/2011/12/09/known-issue-directx-sdk-june-2010-setup-and-the-s1023-error.aspx</a></p>
<ol>
<li><p>Remove the <strong>Visual C++ 2010 Redistributable Package version 10.0.40219 (Service Pack 1)</strong> from the system (both x86 and x64 if applicable). This can be easily done via a command-line with administrator rights:</p>
 <figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">MsiExec.exe /passive /X&#123;F0C3E5D1-<span class="number">1</span>ADE-<span class="number">321</span>E-<span class="number">8167</span>-<span class="number">68</span>EF0DE699A5&#125;</span><br><span class="line">MsiExec.exe /passive /X&#123;<span class="number">1</span>D8E6291-B0D5-<span class="number">35</span>EC-<span class="number">8441</span>-<span class="number">6616</span>F567A0F7&#125;</span><br></pre></td></tr></table></figure></li>
<li>Install the DirectX SDK (June 2010).</li>
<li>Reinstall the <strong>Visual C++ 2010 Redistributable Package version 10.0.40219 (Service Pack 1)</strong>. On an x64 system, you should install both the x86 and x64 versions of the C++ REDIST. Be sure to install the most <a href="http://www.microsoft.com/download/en/details.aspx?displaylang=en&amp;id=26999" target="_blank" rel="noopener">current version available</a>.</li>
</ol>
<h1 id="Compile"><a href="#Compile" class="headerlink" title="Compile"></a>Compile</h1><h2 id="Can-not-find-dxtrans-h-in-DirectX-programming"><a href="#Can-not-find-dxtrans-h-in-DirectX-programming" class="headerlink" title="Can not find dxtrans.h in DirectX programming"></a>Can not find dxtrans.h in DirectX programming</h2><p>cc: <a href="http://blog.csdn.net/clever101/article/details/5617982" target="_blank" rel="noopener">http://blog.csdn.net/clever101/article/details/5617982</a></p>
<ol>
<li>Remove <code>#include &quot;dxtrans.h&quot;</code> where causing errors (e.g. <code>qedit.h</code>).</li>
<li><p>Add the following macro definition to the beginning of code <code>#include &lt;qedit.h&gt;</code></p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __IDxtCompositor_INTERFACE_DEFINED__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __IDxtAlphaSetter_INTERFACE_DEFINED__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __IDxtJpeg_INTERFACE_DEFINED__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __IDxtKey_INTERFACE_DEFINED__</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="error-C2143-syntax-error-missing-‘-’-before-‘constant’"><a href="#error-C2143-syntax-error-missing-‘-’-before-‘constant’" class="headerlink" title="error C2143: syntax error : missing ‘)’ before ‘constant’"></a>error C2143: syntax error : missing ‘)’ before ‘constant’</h2><p>E.g. after defining a constant: <code>#define A 1</code>, but in program, we mistaken using <code>int A;</code> and so on.</p>
<p>Solve: use <code>A</code> directly, not <code>int A</code>.</p>
<h2 id="error-C2146-syntax-error-missing-‘-’-before-identifier-‘PVOID64’"><a href="#error-C2146-syntax-error-missing-‘-’-before-identifier-‘PVOID64’" class="headerlink" title="error C2146: syntax error : missing ‘;’ before identifier ‘PVOID64’"></a>error C2146: syntax error : missing ‘;’ before identifier ‘PVOID64’</h2><p>In <code>winnt.h</code>, add the following line</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> POINTER_64 __ptr64</span></span><br></pre></td></tr></table></figure>
<p>before</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">void</span> *PVOID;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">void</span> * POINTER_64 PVOID64;</span><br></pre></td></tr></table></figure>
<h2 id="error-C2471-cannot-update-program-database-—-vc90-pdb"><a href="#error-C2471-cannot-update-program-database-—-vc90-pdb" class="headerlink" title="error C2471: cannot update program database —-vc90.pdb"></a>error C2471: cannot update program database —-vc90.pdb</h2><p><code>Project –&gt; Properties –&gt; C/C++ –&gt; General –&gt; Debug Information Format –&gt; &#39;Disabled&#39;</code>.</p>
<h2 id="error-C2664-‘CWnd-MessageBoxW’-cannot-convert-parameter-1-from-‘const-char-12-’-to-‘LPCTSTR’"><a href="#error-C2664-‘CWnd-MessageBoxW’-cannot-convert-parameter-1-from-‘const-char-12-’-to-‘LPCTSTR’" class="headerlink" title="error C2664: ‘CWnd::MessageBoxW’ : cannot convert parameter 1 from ‘const char [12]’ to ‘LPCTSTR’"></a>error C2664: ‘CWnd::MessageBoxW’ : cannot convert parameter 1 from ‘const char [12]’ to ‘LPCTSTR’</h2><p>Two ways to fix it:</p>
<ol>
<li><code>Project –&gt; Properties –&gt; General –&gt; Character Set –&gt; &quot;Use Multi-Byte Character Set&quot;</code>.</li>
<li>Indicate that the string literal, in this case <code>&quot;Hello world!&quot;</code> is of a specific encoding. This can be done through either prefixing it with <code>L</code>, such as <code>L&quot;Hello world!&quot;</code>, or surrounding it with the generic <code>_T(&quot;Hello world!&quot;)</code> macro. The latter will expand to the L prefix if you are compiling for unicode, and nothing (indicating multi-byte) otherwise.</li>
</ol>
<h2 id="error-C2665-‘std-Copy-impl’-none-of-the-2-overloads-could-convert-all-the-argument-types-xutility"><a href="#error-C2665-‘std-Copy-impl’-none-of-the-2-overloads-could-convert-all-the-argument-types-xutility" class="headerlink" title="error C2665: ‘std::_Copy_impl’ : none of the 2 overloads could convert all the argument types (xutility)"></a>error C2665: ‘std::_Copy_impl’ : none of the 2 overloads could convert all the argument types (xutility)</h2><p>Based on: <a href="https://svn.boost.org/trac/boost/ticket/4874" target="_blank" rel="noopener">https://svn.boost.org/trac/boost/ticket/4874</a><br>This is a bug of boost library (before version 1_52_0) when using VC2010 in Debug mode (note: the problem also exists in boost-1_52_0 for VC2012 in Debug mode, but still cannot be solved with this method). It can be solved by modifying <code>BOOST_PATH/boost/multi_array/view.hpp</code> to something like</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">multi_array_view&amp; <span class="keyword">operator</span>=(<span class="keyword">const</span> multi_array_view&amp; other) &#123;</span><br><span class="line">    <span class="keyword">if</span> (&amp;other != <span class="keyword">this</span>) &#123;</span><br><span class="line">        <span class="comment">// make sure the dimensions agree</span></span><br><span class="line">        BOOST_ASSERT(other.num_dimensions() == <span class="keyword">this</span>-&gt;num_dimensions());</span><br><span class="line">        BOOST_ASSERT(<span class="built_in">std</span>::equal(other.shape(),</span><br><span class="line">            other.shape()+<span class="keyword">this</span>-&gt;num_dimensions(),</span><br><span class="line">            <span class="keyword">this</span>-&gt;shape()));</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> _MSC_VER &gt;= 1600</span></span><br><span class="line">        <span class="keyword">auto</span></span><br><span class="line">            iterThis = begin();</span><br><span class="line">        <span class="keyword">auto</span></span><br><span class="line">            iterOther = other.begin();</span><br><span class="line">        <span class="keyword">for</span> (; iterThis != end(); ++iterThis, ++iterOther)</span><br><span class="line">            *iterThis = *iterOther;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">        <span class="comment">// iterator-based copy</span></span><br><span class="line">        <span class="built_in">std</span>::copy(other.begin(),other.end(),begin());</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="This-source-file-has-changed-It-no-longer-matches-the-version-of-the-file-used-to-build-the-application-being-debugged"><a href="#This-source-file-has-changed-It-no-longer-matches-the-version-of-the-file-used-to-build-the-application-being-debugged" class="headerlink" title="This source file has changed. It no longer matches the version of the file used to build the application being debugged"></a>This source file has changed. It no longer matches the version of the file used to build the application being debugged</h2><ol>
<li>Check if code contains illegal characters, e.g. copied from QQ.</li>
<li>Build your project before you debug.</li>
</ol>
<h1 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h1><h2 id="error-LNK1000-Internal-error-during-IncrBuildImage"><a href="#error-LNK1000-Internal-error-during-IncrBuildImage" class="headerlink" title="error LNK1000: Internal error during IncrBuildImage"></a>error LNK1000: Internal error during IncrBuildImage</h2><p>This is common in VS2008, VS2010 fix this. Two ways to fix it:</p>
<ol>
<li>Install patch <a href="https://gitlab.com/herohuyongtao/files-public/-/blob/master/files/exe/VS90-KB948127.exe" target="_blank" rel="noopener">VS90-KB948127.exe</a>.   </li>
<li>Two steps:<ol>
<li><code>Project –&gt; Properties –&gt; Linker –&gt; General –&gt; Enable Incremental Linking –&gt; &#39;No&#39;</code>.</li>
<li><code>Project –&gt; Properties –&gt; C/C++ –&gt; General –&gt; Debug Information Format –&gt; &#39;Program Database (/Zi)&#39;</code>.</li>
</ol>
</li>
</ol>
<h2 id="error-LNK1104-cannot-open-file-‘cxcore-lib’"><a href="#error-LNK1104-cannot-open-file-‘cxcore-lib’" class="headerlink" title="error LNK1104: cannot open file ‘cxcore.lib’"></a>error LNK1104: cannot open file ‘cxcore.lib’</h2><p><code>Project –&gt; Properties –&gt; Configuration properties –&gt; Linker – &gt; Input –&gt; Additional Dependence –&gt;</code> Check whether all libs here are consistent with current PC (e.g. after installing OpenCV2.0, should be cxcore200.lib).</p>
<h2 id="error-LNK2001-unresolved-external-symbol-imp-CrtDbgReportW"><a href="#error-LNK2001-unresolved-external-symbol-imp-CrtDbgReportW" class="headerlink" title="error LNK2001: unresolved external symbol __imp___CrtDbgReportW"></a>error LNK2001: unresolved external symbol <code>__imp___CrtDbgReportW</code></h2><p>This will happen when compiling code under <strong>vc10 + Debug</strong>.</p>
<p>Solve: <code>Project –&gt; Properties –&gt; C/C++ –&gt; Code Generation –&gt; Runtime Library –&gt; Multi-threaded Debug DLL (/MDd)&#39;</code>.</p>
<h2 id="error-LNK2001-unresolved-external-symbol"><a href="#error-LNK2001-unresolved-external-symbol" class="headerlink" title="error LNK2001: unresolved external symbol"></a>error LNK2001: unresolved external symbol</h2><p>Reason: not use <code>class::</code> before the types/names we defined ourselves.</p>
<p>Solve: try to add these all <code>class::</code> needed.</p>
<h1 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h1><h2 id="Entry-Point-Not-Found-in-DLLs"><a href="#Entry-Point-Not-Found-in-DLLs" class="headerlink" title="Entry Point Not Found in DLLs"></a>Entry Point Not Found in DLLs</h2><p>This means the related dlls CAN be found, but the versions (e.g., x64 vs. x86, built by different versions of MSVCs) of the found Dlls are not correct.</p>
<ul>
<li>To check which exact dlls are linking, use tools like <a href="https://github.com/lucasg/Dependencies" target="_blank" rel="noopener"><em>Dependencies</em></a> to check (click $    \rhd$ to see nested dependent dlls).</li>
<li>To resolve this, make sure all the dependent DLLs are all correct.</li>
</ul>
<blockquote>
<p>Note: In some cases, it’s caused by the settings of PATH environment variables, where dlls are found in <em>earlier included paths</em> rather the correct ones. Also keep in mind that System PATH will be included earlier than User PATH.</p>
</blockquote>
<h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc."></a>Misc.</h1><h2 id="Visual-Studio-Bug-This-platform-could-not-be-created-because-a-solution-platform-of-the-same-name-already-exists"><a href="#Visual-Studio-Bug-This-platform-could-not-be-created-because-a-solution-platform-of-the-same-name-already-exists" class="headerlink" title="Visual Studio Bug: This platform could not be created because a solution platform of the same name already exists"></a>Visual Studio Bug: This platform could not be created because a solution platform of the same name already exists</h2><p>This will happen when you want to create a solution platform for a single project in a big solution, which one of other projects in the solution has already has this solution platform.<br>Solve <a href="http://www.dpvreony.co.uk/blog/post/v/62" target="_blank" rel="noopener">[1]</a>:</p>
<ol>
<li>Close Visual Studio</li>
<li>Find the project’s (the one that you want to create platform) <code>.vcproject</code>  file and open it with e.g. notepad… other than VS.</li>
<li>Inside the <code>&lt;ItemGroup Label=&quot;ProjectConfigurations&quot;&gt;</code> node you will find a series of Configuration nodes. Copy (and paste underneath) one which has a name attribute beginning with <code>Debug|</code> and replace the text at the end with your desired platform (i.e. Change <code>Debug|Win32</code> to <code>Debug|x64</code>).</li>
<li>Repeat the above step for a <code>Release</code> configuration.</li>
</ol>
]]></content>
      <tags>
        <tag>coding</tag>
        <tag>debugging</tag>
      </tags>
  </entry>
  <entry>
    <title>Good PC tools</title>
    <url>/2013/05/24/Good-PC-tools/</url>
    <content><![CDATA[<blockquote>
<p>Note: Most tools are for Windows.</p>
</blockquote>
<h2 id="Text"><a href="#Text" class="headerlink" title="Text"></a>Text</h2><ul>
<li><a href="http://notepad-plus-plus.org/download" target="_blank" rel="noopener"><strong>Notepad++</strong></a>: advanced text editor</li>
<li><a href="https://www.tug.org/texlive/" target="_blank" rel="noopener"><strong>TeX Live</strong></a>: LaTex editing</li>
<li><a href="https://code.visualstudio.com/" target="_blank" rel="noopener"><strong>Visual Studio Code</strong></a>: advanced editor for structured code</li>
</ul>
<a id="more"></a>
<h2 id="File"><a href="#File" class="headerlink" title="File"></a>File</h2><ul>
<li><a href="http://www.mythicsoft.com/agentransack/download" target="_blank" rel="noopener"><strong>Agent Ransack</strong></a>: fast content search in files</li>
<li><a href="http://ejie.me/" target="_blank" rel="noopener"><strong>Clover</strong></a>: add multi-tab functionality for Windows Explorer</li>
<li><a href="http://www.voidtools.com/downloads/" target="_blank" rel="noopener"><strong>Everything</strong></a>: fast file search</li>
<li><a href="http://www.lopesoft.com/en/filemenutools/download" target="_blank" rel="noopener"><strong>FileMenu Tools</strong></a>: file/folder right click menus manager</li>
<li><a href="http://www.listary.com/download" target="_blank" rel="noopener"><strong>Listary</strong></a>: file managing/browsing…</li>
<li><a href="https://www.piriform.com/recuva/download" target="_blank" rel="noopener"><strong>Recuva</strong></a>: restore deleted files</li>
</ul>
<h2 id="System"><a href="#System" class="headerlink" title="System"></a>System</h2><ul>
<li><a href="https://toolslib.net/downloads/viewdownload/1-adwcleaner/" target="_blank" rel="noopener"><strong>AdwCleaner</strong></a>: remove toolbars and hijackers</li>
<li><a href="http://www.disktool.cn/feature.html" target="_blank" rel="noopener"><strong>Disk Tool</strong></a>: disk partition management</li>
<li><a href="http://www.displayfusion.com/Download/" target="_blank" rel="noopener"><strong>DisplayFusion</strong></a>: multi-monitor taskbars, title-bar buttons…</li>
<li><strong>EaseUS Partition Master</strong>: disk partition management, good for converting dynamic disks to basic mode</li>
<li><a href="http://www.microsoft.com/en-hk/download/details.aspx?id=35460" target="_blank" rel="noopener"><strong>Mouse without Borders</strong></a>: control multiple PCs using single mouse</li>
<li><a href="https://www.getquicker.net/" target="_blank" rel="noopener"><strong>Quicker</strong></a>: define customed shortcut controls for system or diff apps</li>
<li><a href="http://www.rapidee.com/en/download" target="_blank" rel="noopener"><strong>Rapid Environment Editor</strong></a>: environment variables management</li>
<li><a href="https://rufus.akeo.ie/" target="_blank" rel="noopener"><strong>Rufus</strong></a>: create bootable USB (in case <em>Windows 7 USB DVD Download Tool</em> fails)</li>
<li><a href="https://www.realtimesoft.com/ultramon/download.asp" target="_blank" rel="noopener"><strong>UltraMon</strong></a>: multi-toolbars for multi-monitors</li>
</ul>
<h2 id="Viewer-Player-Editor"><a href="#Viewer-Player-Editor" class="headerlink" title="Viewer / Player / Editor"></a>Viewer / Player / Editor</h2><ul>
<li><strong>Adobe Audition</strong>: real-time multi-channel audio recording &amp; audio editing</li>
<li><a href="http://audacity.sourceforge.net/download/" target="_blank" rel="noopener"><strong>Audacity</strong></a>: audio editing, e.g. cutting, resampling, changing speed…</li>
<li><strong>CorelDRAW</strong>: vector diagram drawing</li>
<li><a href="https://en.bandisoft.com/bandizip/" target="_blank" rel="noopener"><strong>Bandizip</strong></a>: compress/extract files</li>
<li><a href="https://www.edrawingsviewer.com/download-edrawings" target="_blank" rel="noopener"><strong>eDrawings Viewer</strong></a>: 3D model file viewer, support types STP/IGS/DWG/DXF…</li>
<li><a href="http://www.tracker-software.com/product/pdf-xchange-editor" target="_blank" rel="noopener"><strong>PDF-XChange Editor</strong></a>: pdf viewer and editor</li>
<li><a href="http://potplayer.daum.net/" target="_blank" rel="noopener"><strong>PotPlayer</strong></a>: video player</li>
<li><a href="http://www.xnview.com/en/xnview/" target="_blank" rel="noopener"><strong>XnView</strong></a>: image viewer</li>
</ul>
<h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding"></a>Coding</h2><ul>
<li><a href="https://github.com/lucasg/Dependencies" target="_blank" rel="noopener"><strong>Dependencies</strong></a>: track dependent dlls, good for exporting cross-platform apps</li>
<li><strong>Matlab Plugins</strong>:<ul>
<li><a href="http://www.mathworks.com/matlabcentral/fileexchange/23629-exportfig" target="_blank" rel="noopener">export_fig</a>: exports figures nicely to a number of vector &amp; bitmap formats</li>
<li><a href="http://www.mathworks.com/matlabcentral/fileexchange/8028-mmread" target="_blank" rel="noopener">mmread</a>: read virtually any media file in Windows, Linux, or Mac</li>
</ul>
</li>
<li><a href="https://www.syntevo.com/smartgit/" target="_blank" rel="noopener"><strong>SmartGit</strong></a>: Git &amp; Mercurial client</li>
<li><a href="http://tortoisesvn.net/downloads.html" target="_blank" rel="noopener"><strong>TortoiseSVN</strong></a>: SVN repo browser, check out…</li>
<li><strong>Visual Studio Extensions</strong>:<ul>
<li><strong>C# outline</strong>: add braces {} outlining for C#</li>
<li><strong>Code alignment</strong>: format code vertically</li>
<li><strong>Code Compare</strong>: code comparison and automatic merging</li>
<li><strong>Image Watch</strong>: watch window for viewing in-memory OpenCV images</li>
<li><strong>Indent Guides</strong>: display indent and page width guides</li>
<li><strong>Productivity Power Tools</strong>: code structure visualizer (better disabled as conflict with Indent Guides), scrollbar markers, double-click to maximize windows, ctrl + click to peek definition, show matched margin, color printing</li>
<li><strong>ReSharper</strong>: to-do explorer, color picker in C#/WPF, unit testing</li>
<li><strong>Visual Assist X</strong>: navigate, refactor, generate code, coding assistance</li>
<li><strong>VSCommands</strong>: main menu enhancements, code block end tagger, build assistance, output window enhancement</li>
</ul>
</li>
</ul>
<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><ul>
<li><a href="http://bing.msn.cn/dict/desktop/" target="_blank" rel="noopener"><strong>BingDict</strong></a>: Chinese/English Dictionary</li>
<li><strong>Camtasia Studio</strong>: screen recording</li>
<li><strong>Chrome Plugins</strong>:<ul>
<li><a href="https://chrome.google.com/webstore/detail/adblock/gighmmpiobklfepjocnamgkkbiglidom" target="_blank" rel="noopener">AdBlock</a>: Ads blocking</li>
<li><a href="https://chrome.google.com/webstore/detail/checker-plus-for-gmail/oeopbcgkkoapgobdbedcemjljbihmemj" target="_blank" rel="noopener">Checker Plus for Gmail</a>: email checking</li>
<li><a href="https://chrome.google.com/webstore/detail/linkclump/lfpjkncokllnfokkgpkobnkbkmelfefj" target="_blank" rel="noopener">Linkclump</a>: roi links copying/openning (can be self-defined)</li>
<li><a href="https://chrome.google.com/webstore/detail/remove-cookies-for-site/lmfdblomdpkcniknaenceeogpgepocmm" target="_blank" rel="noopener">Remove cookies for site</a>: remove cookies for given site</li>
<li><a href="https://chrome.google.com/webstore/detail/webmail-ad-blocker/cbhfdchmklhpcngcgjmpdbjakdggkkjp" target="_blank" rel="noopener">Webmail Ad Blocker</a>: Ads blocking for webmails</li>
</ul>
</li>
<li><strong>DVD Decrypter</strong>: extract data from DVD</li>
<li><strong>Duck Capture</strong>: screenshot, good to capture whole webpage (multi-page)</li>
<li><a href="https://filezilla-project.org/" target="_blank" rel="noopener"><strong>FileZilla</strong></a>: ftp connect client</li>
<li><a href="http://www.pcfreetime.com/download.html" target="_blank" rel="noopener"><strong>FormatFactory</strong></a>: picture/audio/video file format converting</li>
<li><a href="http://www.fraps.com/download.php" target="_blank" rel="noopener"><strong>Fraps</strong></a>: screen capture…, really useful to capture screen under full-screen mode</li>
<li><strong>Image Composite Editor</strong>: advanced panoramic image stitcher</li>
<li><a href="https://www.bunkus.org/videotools/mkvtoolnix/downloads.html" target="_blank" rel="noopener"><strong>mkvtoolnix</strong></a>: video processing, e.g. extracting given channel audio from movie…</li>
<li><a href="http://www.teamviewer.com/en/download/windows.aspx" target="_blank" rel="noopener"><strong>TeamViewer</strong></a>: cross-domain remote desktop connector</li>
<li><a href="http://wkhtmltopdf.org/downloads.html" target="_blank" rel="noopener"><strong>WKhtmlTOpdf</strong></a>: convent HTML to PDF with style retained, using<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">wkhtmltopdf.exe www.website.url.com out.pdf</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <tags>
        <tag>tools</tag>
        <tag>pc</tag>
      </tags>
  </entry>
  <entry>
    <title>Data continuity of OpenCV Mat</title>
    <url>/2020/05/01/Data-continuity-of-OpenCV-Mat/</url>
    <content><![CDATA[<p>Data stored in OpenCV <code>cv::Mat</code>s are not always continuous in memory, which can be verified via API <a href="https://docs.opencv.org/2.4/modules/core/doc/basic_structures.html#mat-iscontinuous" target="_blank" rel="noopener"><code>Mat::isContinuous()</code></a>. Instead, it follows the following rules:</p>
<ol>
<li>Matrices created by <strong><code>imread()</code></strong>, <strong><code>clone()</code></strong>, or a <strong>constructor</strong> will always be continuous.</li>
<li>The only time a matrix will not be continuous is when it <strong>borrows data from an existing matrix</strong> (i.e. created out of an ROI of a big mat), with the exception that the data borrowed is continuous in the big matrix, including<ul>
<li>borrow a single row; </li>
<li>borrow multiple rows but with full original width.</li>
</ul>
</li>
</ol>
<a id="more"></a>
<p>The <a href="https://gitlab.com/snippets/1972256" target="_blank" rel="noopener">following code</a> demonstrates this in a better way (see the inline comments for further explanation).</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="function"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;cv::Mat&gt; <span class="title">mats</span><span class="params">(<span class="number">7</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">  mats[<span class="number">0</span>] = cv::Mat::ones(<span class="number">1000</span>, <span class="number">800</span>, CV_32FC3);         <span class="comment">// continuous as created using constructor</span></span><br><span class="line">  mats[<span class="number">1</span>] = mats[<span class="number">0</span>](cv::Rect(<span class="number">100</span>, <span class="number">100</span>, <span class="number">300</span>, <span class="number">200</span>));      <span class="comment">// NOT continuous as borrowed data is not continuous (multiple rows and not full original width)</span></span><br><span class="line">  mats[<span class="number">2</span>] = mats[<span class="number">1</span>].clone();                            <span class="comment">// continuous as created using clone()</span></span><br><span class="line">  mats[<span class="number">3</span>] = mats[<span class="number">2</span>].row(<span class="number">10</span>);                            <span class="comment">// continuous for single row always</span></span><br><span class="line">  mats[<span class="number">4</span>] = mats[<span class="number">2</span>](cv::Rect(<span class="number">5</span>, <span class="number">5</span>, <span class="number">100</span>, <span class="number">2</span>));            <span class="comment">// NOT continuous as borrowed data is not continuous (multiple rows and not full original width) </span></span><br><span class="line">  mats[<span class="number">5</span>] = mats[<span class="number">2</span>](cv::Rect(<span class="number">0</span>, <span class="number">5</span>, mats[<span class="number">2</span>].cols, <span class="number">2</span>));   <span class="comment">// continuous as borrowed data is continuous (multiple rows with full original width)</span></span><br><span class="line">  mats[<span class="number">6</span>] = mats[<span class="number">2</span>].col(<span class="number">10</span>);                            <span class="comment">// NOT continuous as borrowed data is not continuous (multiple rows and not full original width) </span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; mats.size(); ++i) &#123;</span><br><span class="line">    <span class="keyword">if</span> (mats[i].isContinuous()) &#123;</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Data of mats["</span> &lt;&lt; <span class="keyword">int</span>(i) &lt;&lt; <span class="string">"] is continuous with size ="</span> &lt;&lt; mats[i].size() &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Data of mats["</span> &lt;&lt; <span class="keyword">int</span>(i) &lt;&lt; <span class="string">"] is NOT continuous with size ="</span> &lt;&lt; mats[i].size() &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  system(<span class="string">"pause"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>coding</tag>
        <tag>opencv</tag>
      </tags>
  </entry>
  <entry>
    <title>Good refs on Stack Overflow</title>
    <url>/2014/04/13/Good-refs-on-Stack-Overflow/</url>
    <content><![CDATA[<h5 id="C"><a href="#C" class="headerlink" title="C"></a>C</h5><ul>
<li><a href="http://denniskubes.com/2012/08/20/is-c-pass-by-value-or-reference/" target="_blank" rel="noopener">everything is pass-by-value</a></li>
<li><a href="http://stackoverflow.com/a/21950708/2589776" target="_blank" rel="noopener">cannot declare functions inside <code>struct</code></a></li>
</ul>
<a id="more"></a>
<h5 id="C-1"><a href="#C-1" class="headerlink" title="C++"></a>C++</h5><ul>
<li>string literal<ul>
<li><a href="http://stackoverflow.com/a/164229/2589776" target="_blank" rel="noopener"><code>char *str=&quot;string&quot;;</code> vs. <code>char str[]=&quot;string&quot;;</code></a></li>
<li><a href="http://stackoverflow.com/a/24760066/2589776" target="_blank" rel="noopener">life-time of string literal</a> [<a href="http://stackoverflow.com/q/9970295/2589776" target="_blank" rel="noopener">2</a>]</li>
<li><a href="http://stackoverflow.com/a/24804277/2589776" target="_blank" rel="noopener">adjacent string literals are concatenated in translation phase 6</a></li>
</ul>
</li>
<li><a href="http://stackoverflow.com/a/23544364/2589776" target="_blank" rel="noopener">array decayed to pointer: when &amp; when not</a></li>
<li><a href="http://stackoverflow.com/q/57483/2589776" target="_blank" rel="noopener">pointer vs. reference</a></li>
<li><a href="http://stackoverflow.com/a/24807698/2589776" target="_blank" rel="noopener">compare pointers</a></li>
<li><a href="http://stackoverflow.com/a/54596/2589776" target="_blank" rel="noopener"><code>class</code> vs. <code>struct</code></a></li>
<li><a href="http://stackoverflow.com/q/332030/2589776" target="_blank" rel="noopener"><code>static_cast</code> vs. <code>dynamic_cast</code> vs. <code>const_cast</code> vs. <code>reinterpret_cast</code></a></li>
<li><a href="http://stackoverflow.com/a/22383496/2589776" target="_blank" rel="noopener"><code>cout double</code> value with full precision</a></li>
<li><a href="http://stackoverflow.com/a/21375753/2589776" target="_blank" rel="noopener">Why <code>cout</code> works weird for <code>unsigned char</code></a>?</li>
<li><a href="http://stackoverflow.com/a/162615/2589776" target="_blank" rel="noopener"><code>const</code> reading</a> | <a href="http://stackoverflow.com/a/22419598/2589776" target="_blank" rel="noopener">cvqualifiers</a> | <a href="http://www.parashift.com/c++-faq-lite/const-correctness.html" target="_blank" rel="noopener"><code>const</code> correctness</a> | <a href="http://duramecho.com/ComputerInformation/WhyHowCppConst.html" target="_blank" rel="noopener">The C++ <code>const</code> Declaration: Why &amp; How</a> | <a href="http://stackoverflow.com/a/751783/2589776" target="_blank" rel="noopener"><code>const</code> member function</a></li>
<li><a href="http://stackoverflow.com/q/22410531/2589776" target="_blank" rel="noopener">get the type of an array element</a></li>
<li><a href="http://stackoverflow.com/a/47990/2589776" target="_blank" rel="noopener">set, clear, toggle, and check a single bit</a></li>
<li><a href="http://stackoverflow.com/q/5605125/2589776" target="_blank" rel="noopener"><code>iostream::eof</code> inside a loop condition is wrong!!!</a></li>
<li><a href="http://stackoverflow.com/a/23042974/2589776" target="_blank" rel="noopener"><code>set</code> with custom comparator</a></li>
<li><a href="http://stackoverflow.com/q/4176328/2589776" target="_blank" rel="noopener">Undefined Behavior and Sequence Points</a></li>
<li><a href="http://stackoverflow.com/q/10195343/2589776" target="_blank" rel="noopener">copy files (for all types/without knowing types)</a></li>
</ul>
<h5 id="OpenCV"><a href="#OpenCV" class="headerlink" title="OpenCV"></a>OpenCV</h5><ul>
<li><a href="http://www.anlak.com/2012/10/using-opencv-2-4-x-with-visual-studio-2010-tutorial.html" target="_blank" rel="noopener">setup in VS</a></li>
<li><a href="http://stackoverflow.com/a/20730585/2589776" target="_blank" rel="noopener">missing dll issues</a></li>
<li><a href="http://stackoverflow.com/a/23486280/2589776" target="_blank" rel="noopener">automatic memory management (e.g. <code>Mat</code>)</a></li>
<li><a href="http://stackoverflow.com/a/21336627/2589776" target="_blank" rel="noopener"><code>waitKey()</code></a></li>
<li><a href="http://stackoverflow.com/a/21421342/2589776" target="_blank" rel="noopener"><code>imwrite()</code> supported types</a></li>
<li>comma-separated initializer for <code>Mat</code>: <code>Mat mat = (Mat_&lt;float&gt;(2,3) &lt;&lt; 1, 2, 3, 4, 5, 6);</code></li>
<li><a href="http://stackoverflow.com/a/22329736/2589776" target="_blank" rel="noopener">apply function to each image pixel</a></li>
<li><a href="http://stackoverflow.com/q/23510571/2589776" target="_blank" rel="noopener">set all <code>Mat</code> values at given channel to given value</a></li>
<li><a href="http://stackoverflow.com/a/23573442/2589776" target="_blank" rel="noopener">set <code>Mat</code> values given condition</a></li>
<li><a href="http://stackoverflow.com/a/26685567/2589776" target="_blank" rel="noopener">convertion from <code>Mat</code> to <code>vector</code></a></li>
<li><a href="http://stackoverflow.com/a/30828747/2589776" target="_blank" rel="noopener">create rotated rectangular or polygonal ROI/mask</a></li>
<li><a href="http://stackoverflow.com/a/11412325/2589776" target="_blank" rel="noopener"><code>kmeans()</code> on color images (per pixel [RGB] as a sample)</a></li>
<li><a href="http://stackoverflow.com/a/22374195/2589776" target="_blank" rel="noopener">HOG feature</a> | <a href="http://stackoverflow.com/a/20805153/2589776" target="_blank" rel="noopener"><code>CascadeClassifier::detectMultiScale()</code> parameters</a></li>
</ul>
<h5 id="Dos"><a href="#Dos" class="headerlink" title="Dos"></a>Dos</h5><ul>
<li><a href="http://stackoverflow.com/a/12049845/2589776" target="_blank" rel="noopener">Rename and move files in batch</a></li>
</ul>
<h5 id="Mixed-Programming"><a href="#Mixed-Programming" class="headerlink" title="Mixed Programming"></a>Mixed Programming</h5><ul>
<li><a href="http://stackoverflow.com/a/23063703/2589776" target="_blank" rel="noopener">Matlab/C++ - mixed programming</a></li>
<li><a href="http://stackoverflow.com/q/27697451/2589776" target="_blank" rel="noopener">Matlab/OpenCV - <code>Mat</code> transfering through XML</a></li>
</ul>
<h5 id="Regex"><a href="#Regex" class="headerlink" title="Regex"></a>Regex</h5><ul>
<li><a href="http://stackoverflow.com/q/22937618/2589776" target="_blank" rel="noopener">reference list</a></li>
<li><a href="http://stackoverflow.com/a/23563821/2589776" target="_blank" rel="noopener">find/replace in VS</a></li>
</ul>
<h5 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h5><ul>
<li><a href="http://stackoverflow.com/a/20844851/2589776" target="_blank" rel="noopener">Convert recursion to iteration</a></li>
</ul>
<hr>
<p><strong>Note</strong>: If one thread is both applied to C and C++, I will put it in C++.</p>
]]></content>
      <tags>
        <tag>coding</tag>
      </tags>
  </entry>
  <entry>
    <title>Handle Chinese bookmarks in Latex</title>
    <url>/2014/12/08/Handle-Chinese-bookmarks-in-Latex/</url>
    <content><![CDATA[<p>We often encounter problems of showing Chinese bookmarks during using Latex, take the following MWE, i.e. <code>main.tex</code> as an example:</p>
<a id="more"></a>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">documentclass</span><span class="string">&#123;article&#125;</span></span> </span><br><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">[english]</span><span class="string">&#123;babel&#125;</span></span> </span><br><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">&#123;CJK&#125;</span></span> </span><br><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">[CJKbookmarks]</span><span class="string">&#123;hyperref&#125;</span></span> </span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;document&#125;</span></span> </span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;CJK*&#125;</span><span class="string">&#123;GBK&#125;</span><span class="string">&#123;song&#125;</span></span> </span><br><span class="line"><span class="tag">\<span class="name">section</span><span class="string">&#123;测试&#125;</span></span> </span><br><span class="line">基于CJK的可以搜索、复制、有书签的中文PDF。</span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;CJK*&#125;</span></span> </span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;document&#125;</span></span></span><br></pre></td></tr></table></figure>
<p>When using <code>pdflatex</code> to compile, the Chinese bookmarks will not show correctly, though there will be no problem showing Chinese in the body text.</p>
<p>Correct way to handle is:</p>
<ol>
<li>Download and extract <a href="https://gitlab.com/herohuyongtao/files-public/-/blob/master/files/misc/gbk2uni.zip" target="_blank" rel="noopener"><code>gbk2uni.exe</code></a> to the Latex source folder.</li>
<li>Before final run of <code>pdflatex</code> command, dos run <code>gdk2uni.exe main.out</code></li>
<li>Run <code>pdflatex</code> again. Done!</li>
</ol>
<hr>
<p>It’s possible to simplify the 2nd step by adding a one-click button to the Latex editor, i.e. WinEdt’s toobar. The steps are:</p>
<ol>
<li>Copy <code>gbk2uni.exe</code> to <code>C:\CTEX\MiKTeX\miktex\bin</code>.</li>
<li>Create file <code>gbk2uni.bat</code> with the following content:<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">gbk2uni %<span class="number">1</span>.out</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure></li>
<li>Put this file to <code>..\Ctex\WinEdt\Bin\</code> (create <code>Bin</code> folder if not existing).</li>
<li>In <strong>WinEdt</strong>: <code>Options –&gt; Option Interface… –&gt; Menu and Toolbar… –&gt; MainMenu –&gt;</code> double click to open <code>MainMenu.ini</code> file <code>–&gt;</code> add the following content before <code>END=&quot;&amp;Accessories&quot; –&gt;</code> right click <code>MainMenu –&gt; load script (F9)</code>.<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="attr">ITEM</span>=<span class="string">"GBK to Unicode"</span></span><br><span class="line">    CAPTION="gbk2uni"</span><br><span class="line">    IMAGE="Notepad"</span><br><span class="line">    SAVE_INPUT=1</span><br><span class="line">    MACRO=:Run('%B\Bin\gbk2uni.bat %N');</span><br><span class="line">    REQ_FILTER="%P\%N.out"</span><br></pre></td></tr></table></figure></li>
<li>In <strong>WinEdt</strong>: <code>Options –&gt; Option Interface… –&gt; Menu and Toolbar… – &gt; Toolbar –&gt;</code> double click to open <code>toolbar.ini</code> file –&gt; add <code>BUTTON=&quot;GBK to Unicode&quot;</code>, e.g. before <code>BUTTON=&quot;MetaFont&quot; –&gt;</code> right click <code>Toolbar –&gt; load script (F9)</code>.</li>
<li>Done! There will be a <code>gbk2uni</code> button (with a <strong>Notepad</strong> icon, change in step-4 if you want to use other icons) before <code>MetaFont</code> button.</li>
</ol>
<p>Up to now, the way to generate the PDF with correct Chinese bookmarks can be, i.e <strong><em>all by simply clicking the coresponding buttons</em></strong>: <code>pdflatex -&gt; pdflatex –&gt; gdk2uni -&gt; pdflatex</code>.</p>
<hr>
<h4 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h4><ol>
<li>Example from: <a href="http://bbs.ctex.org/forum.php?mod=viewthread&amp;tid=64270" target="_blank" rel="noopener">http://bbs.ctex.org/forum.php?mod=viewthread&amp;tid=64270</a></li>
<li>Adding <code>gbk2uni</code> button to WinEdt is based on: <a href="http://blog.sina.com.cn/s/blog_48f3a1cd0101mon3.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_48f3a1cd0101mon3.html</a></li>
</ol>
]]></content>
      <tags>
        <tag>coding</tag>
        <tag>latex</tag>
      </tags>
  </entry>
  <entry>
    <title>IO sumup</title>
    <url>/2012/01/01/IO-sumup/</url>
    <content><![CDATA[<h2 id="using-C-FILE-stdio-h"><a href="#using-C-FILE-stdio-h" class="headerlink" title="using C - FILE (stdio.h)"></a>using C - FILE (stdio.h)</h2><ul>
<li><p>文件的类型: 二进制文件/一般文件, 只是读取和写入的方式不一样罢了</p>
<ul>
<li><p>读取一般文件: (写类似)</p>
  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">FILE *fi;</span><br><span class="line">fi=fopen(<span class="string">"15.dat"</span>,<span class="string">"r"</span>);</span><br></pre></td></tr></table></figure></li>
<li><p>读取二进制文件: (写类似)</p>
  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">FILE *fi;</span><br><span class="line">fi=fopen(<span class="string">"15.dat"</span>,<span class="string">"rb"</span>);</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<a id="more"></a>
<ul>
<li><p>读数据: (写类似)</p>
<ul>
<li><p>数据规整的话 (均为同一类型) 可以全部读出, Like:</p>
  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">FILE * fi2;</span><br><span class="line"><span class="keyword">float</span> * data2 =<span class="keyword">new</span> <span class="keyword">float</span>[length*width*heigth];</span><br><span class="line">fi2=fopen(<span class="string">"1.bin"</span>,<span class="string">"rb"</span>);</span><br><span class="line">fread(data2, <span class="keyword">sizeof</span>(<span class="keyword">float</span>), length*width*heigth, fi2);</span><br></pre></td></tr></table></figure></li>
<li><p>不规整的话: Like:</p>
  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">float</span> x,y,z,t,f;</span><br><span class="line"><span class="comment">//get to the real data point, start reading</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">    res = <span class="built_in">fscanf</span>(fi, <span class="string">"%f %f %f %f %f"</span>, &amp;x, &amp;y, &amp;z, &amp;t, &amp;f);</span><br><span class="line">&#125; <span class="keyword">while</span> (res != EOF &amp;&amp; res == <span class="number">5</span>);</span><br></pre></td></tr></table></figure>
<p>NOTE: 写用</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">fprintf</span>(fo, <span class="string">"%f\t%f\t0.0\n"</span>, a, b);</span><br></pre></td></tr></table></figure>
<p>或</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">fwrite (x, <span class="number">1</span>, <span class="keyword">sizeof</span>(<span class="keyword">float</span>) , fo );</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<p><em>特别注意</em>: fprintf 对应fscanf, fwrite对应fread, 别搞混了!!!</p>
<ul>
<li><p>忽略前面的说明信息, 找到真正的开始点再读取:</p>
  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//look for a starting point</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">    res=<span class="built_in">fscanf</span>(fi,<span class="string">"%100s"</span>, stub);</span><br><span class="line">&#125; <span class="keyword">while</span> (res != EOF &amp;&amp; stricmp(stub, <span class="string">"aaaaa"</span>)!=<span class="number">0</span>);</span><br></pre></td></tr></table></figure>
<p>  注: aaaaa为你真正数据的上一个信息, 下一个就为真实数据</p>
</li>
</ul>
<h2 id="using-C-fstream-fstream-h"><a href="#using-C-fstream-fstream-h" class="headerlink" title="using C++ - fstream (fstream.h)"></a>using C++ - fstream (fstream.h)</h2><p>cc: <a href="http://www.newxing.com/Tech/Program/Cpp/577.html" target="_blank" rel="noopener">http://www.newxing.com/Tech/Program/Cpp/577.html</a></p>
]]></content>
      <tags>
        <tag>coding</tag>
        <tag>i/o</tag>
      </tags>
  </entry>
  <entry>
    <title>Host code via Bitbucket</title>
    <url>/2013/01/22/Host-code-via-Bitbucket/</url>
    <content><![CDATA[<p>Similar to <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>, <a href="https://bitbucket.org/" target="_blank" rel="noopener">Bitbucket</a> makes it very easy to host your code. We all know that GitHub works great for open-source. However, you have to pay if you want to create private repositories. On the other hand, Bitbucket enables you to create unlimited free private repositories. This is an important reason why more and more people are using Bitbucket nowadays. In this post, I will show how to use Bitbucket to easily host your code (over <a href="http://tortoisehg.bitbucket.org/" target="_blank" rel="noopener">TortoiseHg</a> specifically).</p>
<a id="more"></a>
<h2 id="Setup-Bitbucket-over-Internet"><a href="#Setup-Bitbucket-over-Internet" class="headerlink" title="Setup Bitbucket over Internet"></a>Setup Bitbucket over Internet</h2><ol>
<li>Login <code>Bitbucket &gt; Repositories &gt; Create repository</code>.</li>
<li>In the Create a new repository page:<ul>
<li><strong>Name</strong>: Fill in the repository name (<code>testRepo</code> as an example).</li>
<li><strong>Description</strong>: I will always leave this empty because I prefer to use a <code>README.text</code> file instead, which supports <a href="http://pypi.python.org/pypi/Markdown" target="_blank" rel="noopener">Python-Markdown</a> and is much more powerful.</li>
<li>…</li>
</ul>
</li>
</ol>
<h2 id="Setup-TortoiseHg"><a href="#Setup-TortoiseHg" class="headerlink" title="Setup TortoiseHg"></a>Setup TortoiseHg</h2><p>Simple way is to use <strong>SSH keys</strong> and follow setup sets by this post: <a href="https://codebeamer.com/cb/wiki/32044#section-Windows" target="_blank" rel="noopener">Set up SSH for Mercurial</a>. One key step is to add the following content to <code>mercurial.ini</code> (TortoiseHg’s global setting file):</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[ui]</span></span><br><span class="line"><span class="attr">username</span> = -name-you-want-to-show- &lt;-email-@xxmail.com&gt;</span><br><span class="line"><span class="attr">ssh</span> = <span class="string">"C:\Program Files\TortoiseHg\TortoisePlink.exe"</span> -ssh -<span class="number">2</span> -batch -C</span><br></pre></td></tr></table></figure>
<p>Another key step is to generate your private SSH key file using <a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html" target="_blank" rel="noopener">PuTTYGen</a> and copy the key to your online Bitbucket profile.</p>
<p>Note:</p>
<ol>
<li>Make sure <code>Pageant.exe</code> is running in background in order to make it work (<code>Add key &gt; load &gt;</code> input passphrase).</li>
<li><p>It’s possible to make <code>Pageant.exe</code> automatically load keys on system startup, see <a href="http://blog.shvetsov.com/2010/03/making-pageant-automatically-load-keys.html" target="_blank" rel="noopener">this post</a>. Key step is add a shortcut of <code>Pageant.exe</code> to PC’s <code>Startup</code> folder and change its <code>Target</code> to be something like:</p>
 <figure class="highlight"><table><tr><td class="code"><pre><span class="line">"C:\Program Files\TortoiseHg\Pageant.exe" "-path-of-your-ssh-key-file-.ppk"</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Commit-your-code-using-TortoiseHg"><a href="#Commit-your-code-using-TortoiseHg" class="headerlink" title="Commit your code using TortoiseHg"></a>Commit your code using TortoiseHg</h2><ol>
<li><code>File &gt; New Repository &gt;</code> Change <code>Destination path</code> to where your code is <code>&gt; Create</code>.</li>
<li>Click <code>Commit</code> button in toolbar. It will list all the modified (including edit/add/delete…) files in the left window. Note, click <code>Refresh current repository</code> button in toolbar when needed if you cannot see the new updated files. Check the files that we want to check in. And you can right click &gt; <code>Ignore</code> to ignores files to check in.</li>
<li>Fill in some commit update information in the right window and then click <code>Commit</code>.</li>
<li>Click <code>Push outgoing changes to selected URL</code> button in toolbar.</li>
<li>In <code>Remote Repository &gt;</code> Select <code>https</code> &gt;<code>Add the URL of the repo</code>testRepo<code>&gt; Click</code>save` button in just this left to remember this URL so that you have no need to type again when doing further commit this repo to this URL.</li>
</ol>
<p>Note: all you need to do is to loop in step 2~5 for further commits.</p>
<h2 id="Sync-between-multiple-users-PCs"><a href="#Sync-between-multiple-users-PCs" class="headerlink" title="Sync between multiple users/PCs"></a>Sync between multiple users/PCs</h2><ol>
<li><strong>Get latest</strong>: Before editing, always get current latest version by <code>Repository &gt; Synchronize &gt; Pull</code>.</li>
<li><strong>Update local to latest</strong>:  Right click current local version &gt; <code>Update</code> &gt; Write the latest revision in <code>Update to &gt; Update</code>.</li>
<li><strong>Edit source</strong>.</li>
<li><strong>Push</strong>: <code>Commit &gt; Push outgoing changes to selected URL</code>.<br>Done if no conflict found with server version (e.g. no one pushed new revisions during our editing). If do find conflict, it will shows <code>abort: push creates new remote head xxxxxxx!</code> in TortoiseHg.</li>
<li><strong>Resolve conflicts</strong>:<ul>
<li>Get latest: <code>Repository &gt; Synchronize &gt; Pull</code>.</li>
<li>Merge: Right click latest revision by others that is just pulled <code>&gt; Merge with Local… &gt; Next &gt;</code> Click <code>resolved</code> in current Merge window to resolve conflicts &gt; Click the file (do this one by one) that we need to resolve in <code>Unresolved conflicts</code> sub-window and click <code>Tool Resolve</code> (assume <code>KDiff3</code> has been installed, this will call KDiff3 to compare both versions side by side) &gt; In the <code>Output</code> window, right click <code>?&lt;Merge Conflick&gt; &gt; Select Line(s) from</code> the version that you want (or both versions) <code>&gt; Save</code> and <code>Close</code> KDiff3 &gt; <code>Close</code> the Resolve Conflicts window &gt; Change Commit message if you need in the <code>Merge</code> window <code>&gt; Commit Now &gt; Finish</code>.</li>
</ul>
</li>
<li><strong>Push</strong>: Push outgoing changes to selected URL.</li>
</ol>
<h2 id="Other-remarks"><a href="#Other-remarks" class="headerlink" title="Other remarks"></a>Other remarks</h2><h3 id="Repo-grouping"><a href="#Repo-grouping" class="headerlink" title="Repo grouping"></a>Repo grouping</h3><p>Use <em>teams</em> to group repos (only way currently). Issues can also be import/export in <code>Settings-&gt;Import &amp; export-&gt;…</code></p>
<h3 id="Get-some-specific-version"><a href="#Get-some-specific-version" class="headerlink" title="Get some specific version"></a>Get some specific version</h3><ul>
<li><p>If there is no corresponding repo in your PC:</p>
<ol>
<li>Clone the repo to PC (done in TortoiseHg).</li>
<li>Open it by TortoiseHg. Then all its revisions will show in the right view.</li>
<li><p>Select the revision you want to get &gt; Right click &gt; <code>Export &gt; Archive</code> &gt; Choose the <code>Destination path &gt; Archive</code>.</p>
<blockquote>
<p>Clone vs. Archive:</p>
<ul>
<li>Clone will copy everything including <code>.hg</code> folder (can be opened by TortoiseHg).</li>
<li>Archive will copy everything except .hg folder (can NOT be opened by TortoiseHg).</li>
</ul>
</blockquote>
</li>
</ol>
</li>
<li><p>Otherwise:</p>
<ul>
<li>Select current revision &gt; Right click &gt; <code>Update…</code> &gt; Put the revision you want to get in the <code>Update to</code> box &gt; <code>Update</code>.</li>
</ul>
</li>
</ul>
<h3 id="Link-to-most-recent-version-of-given-file1"><a href="#Link-to-most-recent-version-of-given-file1" class="headerlink" title="Link to most-recent version of given file1"></a>Link to most-recent version of given file<sup><a href="#fn_1" id="reffn_1">1</a></sup></h3><ol>
<li>Get the file link of any version, e.g. <a href="https://bitbucket.org/herohuyongtao/files/src/f7b75d07772182019e80200a18e5f1130f75fc70/files/VC_call_MATLAB.cpp?at=default" target="_blank" rel="noopener">https://bitbucket.org/herohuyongtao/files/src/f7b75d07772182019e80200a18e5f1130f75fc70/files/VC_call_MATLAB.cpp?at=default</a></li>
<li><p>Change string corresponding to version (<code>f7b75d07772182019e80200a18e5f1130f75fc70</code> in above example) to <code>tip</code> or <code>default</code> (or any other branch name) and delete the tail until to the file type, i.e. to be   <a href="https://bitbucket.org/herohuyongtao/files/src/tip/files/VC_call_MATLAB.cpp" target="_blank" rel="noopener">https://bitbucket.org/herohuyongtao/files/src/tip/files/VC_call_MATLAB.cpp</a> or <a href="https://bitbucket.org/herohuyongtao/files/src/default/files/VC_call_MATLAB.cpp" target="_blank" rel="noopener">https://bitbucket.org/herohuyongtao/files/src/default/files/VC_call_MATLAB.cpp</a>.</p>
<blockquote>
<p>The difference between <code>tip</code> and <code>default</code> is that using <code>tip</code> for the very latest commit, regardless of branch. Instead, <code>default</code> or any other branch would link to the latest version under that branch.</p>
</blockquote>
</li>
</ol>
<h3 id="Delete-local-commits"><a href="#Delete-local-commits" class="headerlink" title="Delete local commits"></a>Delete local commits</h3><ul>
<li>If only need to delete last commit, <code>Repository &gt; Rollback/Undo...</code>. This will keep changes in local.</li>
<li><p>If want to delete all local commits<sup><a href="#fn_2" id="reffn_2">2</a></sup><sup>,</sup><sup><a href="#fn_6" id="reffn_6">6</a></sup> (this will also revert all changes):</p>
<ol>
<li><p>Enable <code>mq</code> extension by adding the following to <code>mercurial.ini</code> or enable it via <code>File &gt; Settings &gt; Extensions &gt; mq</code>:</p>
 <figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[extensions]</span></span><br><span class="line"><span class="attr">mq</span>=</span><br></pre></td></tr></table></figure></li>
<li>Run <code>hg strip &#39;roots(outgoing())&#39;</code> in console.<blockquote>
<p>Note: it seems that this doesn’t work for <code>graft</code> commits, in this case, just use <code>hg strip #changeset#</code>.</p>
</blockquote>
</li>
</ol>
</li>
</ul>
<h3 id="Copy-changes-from-other-commits"><a href="#Copy-changes-from-other-commits" class="headerlink" title="Copy changes from other commits"></a>Copy changes from other commits</h3><p>This can be viewed as one kind of merging except that all files are updated to other commits. This is very useful when you want to update old <code>default</code> branch to one new <code>branch</code>.</p>
<p>This can be done in the following steps<sup><a href="#fn_5" id="reffn_5">5</a></sup>:</p>
<ol>
<li>Set the current commit to which you want to be overwritten by other commits by right click \(\rightarrow\) <code>Update...</code> \(\rightarrow\) set the commit number.</li>
<li>Select the commit that you want to copy changes from \(\rightarrow\) right click \(\rightarrow\) <code>Graft to Local...</code>.</li>
</ol>
<h3 id="Ignore-given-files-folders"><a href="#Ignore-given-files-folders" class="headerlink" title="Ignore given files/folders"></a>Ignore given files/folders</h3><ul>
<li>Ignore all its content under folder, simply add <code>-path-to-folder-/folderName/</code> to file <code>.hgignore</code>.</li>
<li><p>Ignore all its content under folder except given files or given sub-folders, add similar conent to file <code>.hgignore</code> (note that, unlike folders, files should end with <code>$</code>):</p>
  <figure class="highlight"><table><tr><td class="code"><pre><span class="line">syntax: regexp</span><br><span class="line">-path-to-folder-/folderName/(?!exceptFile1.ext1$|exceptFile2.ext2$|exceptSubFolder1|exceptSubFolder2|)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Sub-repos"><a href="#Sub-repos" class="headerlink" title="Sub-repos"></a>Sub-repos</h3><p>Subrepositories allow you to have a standalone repository included within a parent repository<sup><a href="#fn_3" id="reffn_3">3</a></sup> (<a href="https://bitbucket.org/xixs/public" target="_blank" rel="noopener">hg example</a> / <a href="https://github.com/willyd/caffe-windows-dependencies" target="_blank" rel="noopener">git example</a>).</p>
<ol>
<li>In the main repo, create file <code>.hgsub</code>.</li>
<li><p>Add sub-repo mapping info in file <code>.hgsub</code> with format: <code>local_subrepo_path = external_repo_path</code> (where <code>local_subrepo_path</code> is relative to the root of your main repo). Suppose we want to add repo hosted at <code>https://me@bitbucket.org/me/subrepo</code> to folder <code>-path-to-main-repo-path-/libs/subrepo</code>, the content of file <code>.hgsub</code> will be like:</p>
 <figure class="highlight"><table><tr><td class="code"><pre><span class="line">libs/subrepo = https://me@bitbucket.org/me/subrepo</span><br></pre></td></tr></table></figure></li>
<li>Add and commit file <code>.hgsub</code> to the main repo. File structure identified by <code>local_subrepo_path</code> will be created. E.g. in above example, folder <code>libs/subrepo</code> will be created automatically.</li>
</ol>
<blockquote>
<p>Note: You must revert anything done to the sub-repo when pushing changes to the main repo, though you can modify it to fit your needs during development.</p>
</blockquote>
<p>Note that, when cloning the main repo, by default, all sub-repos (and their contents) are also cloned. If you only want to download some of the sub-repos (especially useful if the sub-repos are huge in terms of number and size), follow the following steps:</p>
<ol>
<li>Download the main repo from its download page.</li>
<li>In TortoiseHg \(\rightarrow\) <code>File</code> \(\rightarrow\) <code>New Repository...</code> \(\rightarrow\) browse to the download main folder \(\rightarrow\) <code>Create</code>.</li>
<li>Check on all files to commit (may need to press commit button twice).</li>
<li><p>Download sub-repos.</p>
<ul>
<li>One-by-one:<ul>
<li>In <code>Repository Registry</code> window \(\rightarrow\) click the main repo to expand all its sub-repos \(\rightarrow\) double click the sub-repo needed to download \(\rightarrow\) click <code>Pull</code> button.</li>
</ul>
</li>
<li><p>Batch style:</p>
<ol>
<li>Download file <a href="https://www.dropbox.com/s/zsx5av6mjeux47b/onsub.py" target="_blank" rel="noopener"><code>onsub.py</code></a> and put anywhere on your PC.</li>
<li><p>In TortoiseHg \(\rightarrow\) right click the main repo \(\rightarrow\) on the main repo’s repository setting window \(\rightarrow\) click <code>Edit File</code> \(\rightarrow\) add the following content to the opened file (i.e. <code>hgrc</code> file) and <code>Save</code>.</p>
 <figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[extensions]</span></span><br><span class="line"><span class="attr">onsub</span> = -path-to-<span class="literal">on</span>sub.py-/<span class="literal">on</span>sub.py</span><br></pre></td></tr></table></figure></li>
<li>Edit both files <code>.hgsub</code> and <code>.hgsubstate</code> to keep only the lines for the sub-repos that you want to download.</li>
<li>Run <code>hg onsub &quot;hg pull -u&quot;</code> in console<sup><a href="#fn_4" id="reffn_4">4</a></sup>.</li>
<li><em>(optional)</em> If you want to download given commit of one sub-repo, after the above steps, go to the sub-repo that you want to edit and update to the commit you want.</li>
</ol>
</li>
</ul>
</li>
</ol>
<hr>
<blockquote id="fn_1">
<sup>1</sup>. Link to most-recent version of static file: <a href="https://bitbucket.org/site/master/issue/3769/link-to-most-recent-version-of-static-file" target="_blank" rel="noopener">https://bitbucket.org/site/master/issue/3769/link-to-most-recent-version-of-static-file</a>.<a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. Delete all local changesets and revert to tree: <a href="http://stackoverflow.com/a/2143711/2589776" target="_blank" rel="noopener">http://stackoverflow.com/a/2143711/2589776</a>.<a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_3">
<sup>3</sup>. Getting Started With Mercurial Subrepositories: <a href="https://tomtech999.wordpress.com/2011/12/17/getting-started-with-mercurial-subrepositories/" target="_blank" rel="noopener">https://tomtech999.wordpress.com/2011/12/17/getting-started-with-mercurial-subrepositories/</a>.<a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_4">
<sup>4</sup>. OnsubExtension: <a href="https://www.mercurial-scm.org/wiki/OnsubExtension" target="_blank" rel="noopener">https://www.mercurial-scm.org/wiki/OnsubExtension</a>.<a href="#reffn_4" title="Jump back to footnote [4] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_5">
<sup>5</sup>. Copy changes from other branches onto the current branch: <a href="https://selenic.com/hg/help/graft" target="_blank" rel="noopener">https://selenic.com/hg/help/graft</a>.<a href="#reffn_5" title="Jump back to footnote [5] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_6">
<sup>6</sup>. Is there any way to delete local commits in Mercurial?: <a href="http://stackoverflow.com/questions/2338986/is-there-any-way-to-delete-local-commits-in-mercurial" target="_blank" rel="noopener">http://stackoverflow.com/questions/2338986/is-there-any-way-to-delete-local-commits-in-mercurial</a><a href="#reffn_6" title="Jump back to footnote [6] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>coding</tag>
        <tag>bitbucket</tag>
      </tags>
  </entry>
  <entry>
    <title>MATLAB/C++ Mixed Programming: distribute MATLAB code into independent C++ shared library</title>
    <url>/2012/04/29/MATLAB-C-Mixed-Programming-distribute-MATLAB-code-into-independent-C-shared-library/</url>
    <content><![CDATA[<p>There are two ways in VC++ to call MATLAB:</p>
<ol>
<li>distribute MATLAB code into MATLAB independent C++ shared library.</li>
<li>call MATLAB directly in VC++. Refer to the <a href="https://blog-tommyhu.github.io/2013/12/27/MATLAB-C-Mixed-Programming-call-MATLAB-directly-in-VC/">this blog</a> for details.</li>
</ol>
<p>This blog will focus on the first approach.</p>
<a id="more"></a>
<hr>
<p>Distributing MATLAB code into C++ libraries will enable us to call MATLAB in C++. This is further can be done to be MATLAB independent, which means we can call these libraries on any PC without MATLAB pre-installed. Also, good news is that, according to <a href="http://www.mathworks.com/support/solutions/en/data/1-GQC9MB/index.html" target="_blank" rel="noopener">MATLAB Support</a>, all deployed components and applications can be distributed free of charge. So, in this way, we can integrate MATLAB codes into our own product without concerning the license problem.</p>
<hr>
<p>In the following, I will show you how you can do this step by step.</p>
<!-- add TOC here -->
<div id="genTocHere"></div>

<h2 id="Pre-work"><a href="#Pre-work" class="headerlink" title="Pre-work:"></a>Pre-work:</h2><p>Take the following MATLAB function <code>myadd2.m</code> as an example, from which we want to generate MATLAB independent C++ shared library.</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[y, z]</span> = <span class="title">myadd2</span><span class="params">(a, b)</span></span></span><br><span class="line"><span class="comment">% dummy function, just to demonstrate the idea</span></span><br><span class="line">y = a+b;</span><br><span class="line">z = a+<span class="number">2</span>*b;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="Deploy-in-MATLAB"><a href="#Deploy-in-MATLAB" class="headerlink" title="Deploy in MATLAB:"></a>Deploy in MATLAB:</h2><ol>
<li>Setup mex in MATLAB if needed, see <a href="http://herohuyongtao.blogspot.hk/2012/04/matlabc-mex.html" target="_blank" rel="noopener">MATLAB/C++ Mixed Programming: setup mex in MATLAB</a>.</li>
<li>>&gt; <code>mcc -C -W cpplib:libmyadd2 -T link:lib myadd2.m</code> (<code>-C</code> option is needed to generate <code>.ctf</code> file).</li>
<li><p>Done. We can find the following files generated in the file folder.</p>
<ul>
<li><strong>libmyadd2.h</strong></li>
<li><strong>libmyadd2.ctf</strong></li>
<li><strong>libmyadd2.dll</strong></li>
<li><strong>libmyadd2.lib</strong></li>
<li>libmyadd2_mcc_component_data.c</li>
<li>libmyadd2.cpp</li>
<li>libmyadd2.exports</li>
<li>libmyadd2.exp</li>
<li><p>libmyadd2.prj</p>
<p>Among these, only the first 4 will be needed to be called in VC.</p>
</li>
</ul>
</li>
</ol>
<p>NOTE: alternately, we can use MATLAB <strong>deploytool</strong> to do this:</p>
<ol>
<li>>&gt; <code>deploytool</code></li>
<li>Pre-setup: In the <strong>Deployment Project</strong> window, edit project <code>Name</code> (also the name for the generated .h/.lib/.dll files, <code>libmyadd2</code> here), <code>Location</code> and most importantly choose the deployment <code>Type</code> to be <code>C++ shared library</code> (4 types in total to choose from including <code>Windows Standalone Application</code>, <code>Console Application</code>, <code>C Shared Library and C++ Shared Library</code>; the other 3 are not fully tested).</li>
<li>Add files: In the <strong>C++ Shared Library</strong> window, under <code>Build</code> menu, click <code>[Add files]</code> to add <code>myadd2.m</code> as our exported functions.</li>
<li>Setup: Click <code>Actions</code> Button in the <code>C++ Shared Library</code> window <code>&gt; Settings… &gt; General &gt;</code> uncheck the <code>&#39;Embed CTF archive into the Application&#39;</code>. Note that if we leave this option checked by default, it will not generate <code>.ctf</code> file. Their differences are:<ul>
<li>Without <code>.ctf</code>: when called in VC++, the runtime temp files needed will be generated in system Temp folder, i.e. <code>C:\Users\tommyhu\AppData\Local\Temp\tommyhu\mcrCache7.17\myadd20</code>.</li>
<li>With <code>.ctf</code>: when called in VC++, the runtime temp files needed will be generated in VC++ solution folder, i.e. <code>C:\Users\tommyhu\Documents\visual studio 2010\Projects\test\libmyadd2_mcr</code>.</li>
</ul>
</li>
<li>Build: Click <strong>Build</strong> Button in the <strong>C++ Shared Library window</strong> to do real building.</li>
<li>Done. Under <code>..\folderWeSet\libmyadd2\distrib</code>, we will find all files we need including:<ul>
<li><strong>libmyadd2.h</strong></li>
<li><strong>libmyadd2.ctf</strong></li>
<li><strong>libmyadd2.dll</strong></li>
<li><strong>libmyadd2.lib</strong></li>
</ul>
</li>
</ol>
<h2 id="Setup-client-PC"><a href="#Setup-client-PC" class="headerlink" title="Setup client PC:"></a>Setup client PC:</h2><p>Note: skip this step if you just want to call them in the same PC or another PC which has already installed MATLAB of the same version.</p>
<ul>
<li>Copy <strong>MCRInstaller.exe</strong> to client PC and install. Note that <strong>MCRInstaller.exe</strong> should be consistent with the MATLAB version. Usually you can find it under path like<code>…\MATLAB\R2012a\toolbox\compiler\deploy\win64</code>.</li>
</ul>
<p>Note: although we have generated MATLAB independent C++ shared libraries, we still need to slightly setup client PC in order to make it work. Actually we still need to install MATLAB Compiler Runtime (<strong>MCRInstaller.exe</strong>) of it, but at least not full of it, make it portable enough. In reality, we can package it together with our product (and install automatically).</p>
<h2 id="Call-in-VC"><a href="#Call-in-VC" class="headerlink" title="Call in VC++:"></a>Call in VC++:</h2><ol>
<li>Libraries preparation: copy the above 4 files into VC project.</li>
<li>VC setup:<ul>
<li>Add MATLAB Compiler Runtime include folder to project <code>Include files</code>: i.e. <code>C:\Program Files\MATLAB\MATLAB Compiler Runtime\v717\extern\include</code>.</li>
<li>Add MATLAB Compiler Runtime library folder to project <code>Library files</code>: i.e. <code>C:\Program Files\MATLAB\MATLAB Compiler Runtime\v717\extern\lib\win64\microsoft</code>.</li>
<li>Add MATLAB Compiler Runtime binary folder to project <code>Debugging&gt;Environment</code>: i.e. <code>PATH=%PATH%;C:\Program Files\MATLAB\MATLAB Compiler Runtime\v717\runtime\win64;C:\Program Files\MATLAB\MATLAB Compiler Runtime\v717\bin\win64</code>.</li>
<li>Add relevant libraries to <code>Linker&gt;Input&gt;Additional Dependencies</code>: <code>libmyadd2.lib mclmcrrt.lib mclmcr.lib</code>. (Note also to add <code>libmx.lib</code> and <code>libmat.lib</code> if you plan to use <code>mxArray</code> in your code.)</li>
<li>Add header to main code: <code>#include &quot;libmyadd2.h&quot;</code>.</li>
</ul>
</li>
<li>Calling: please refer to <a href="https://gitlab.com/herohuyongtao/files-public/-/blob/master/files/cplusplus/VC_call_MATLAB.cpp" target="_blank" rel="noopener"><code>VC_call_MATLAB.cpp</code></a>.</li>
</ol>
<p>Note that, if you just want to call them in the same PC or another PC which has already installed MATLAB of the same version, you don’t need step 2 to install MATLAB Compiler Runtime (<strong>MCRInstaller.exe</strong>) because these have been included when you install MATLAB. Under this condition, instead, you can setup VC as follows:</p>
<ul>
<li>VC setup:<ul>
<li>Add MATLAB include folder to project <strong>Include files</strong>: i.e. <code>C:\Program Files\MATLAB\R2012a\extern\include</code></li>
<li>Add MATLAB library folder to project <strong>Library files</strong>: i.e. <code>C:\Program Files\MATLAB\R2012a\extern\lib\win64\microsoft</code></li>
<li>Add relevant libraries to <strong>Linker&gt;Input&gt;Additional Dependencies</strong>: <code>libmyadd2.lib mclmcrrt.lib mclmcr.lib</code></li>
<li>Add header to main code: <code>#include &quot;libmyadd2.h&quot;</code></li>
</ul>
</li>
</ul>
<hr>
<h2 id="Other-Remarks"><a href="#Other-Remarks" class="headerlink" title="Other Remarks:"></a>Other Remarks:</h2><ol>
<li>When .m file that we want to distribute also calls several other .m files, we don’t need to particularly to indicate. The steps are the same: only the final .m file is need to be distributed.</li>
<li>Different distributed shared libraries perform independently, i.e., they cannot share variables to work together. For example, it is impossible for one library to use the data created by another library, which will be released when its library ends.</li>
<li><p><strong>Thread-safety</strong>: According to <a href="http://www.mathworks.com/help/matlab/matlab_external/using-matlab-engine.html" target="_blank" rel="noopener">MATLAB documentation</a>, MATLAB libraries are not thread-safe. If you create multithreaded applications, make sure only one thread accesses the engine application. For example, if you want to use the above <code>libmyadd2.lib</code>, use <code>ThreadLock.h/.cpp</code> as follows:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ThreadLock.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> ThreadLock Lock;</span><br><span class="line">Lock.Lock();</span><br><span class="line">myadd2(<span class="number">2</span>, y, z, a, b);</span><br><span class="line">Lock.Unlock();</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Type passing</strong>: Passing C++ native types to <code>mwArray</code> in order to call MATLAB</p>
<ul>
<li><p>When passing a grayscale <code>Mat</code> image, can use <code>mxINT8_CLASS</code> as follows.</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// assume we want to passing Mat img(rows, cols, CV_8UC1)</span></span><br><span class="line"><span class="keyword">int</span> rows = img.rows;</span><br><span class="line"><span class="keyword">int</span> cols = img.cols;</span><br><span class="line"><span class="function">mwArray <span class="title">imgP</span><span class="params">(rows, cols, mxUINT8_CLASS)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// remember to tranpose first because MATLAB is col-major</span></span><br><span class="line">transpose(mat, mat);</span><br><span class="line">imgP.SetData(mat.ptr(), rows*cols);</span><br></pre></td></tr></table></figure>
</li>
<li><p>When passing a color <code>Mat</code> image (assume in format <code>CV_RGB</code>), currently no way is found to pass it directly. Possible way is to pass the r, g, b channels independently and then combine them to be a color image in MATLAB as follows.</p>
<ul>
<li><p>In VC++:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// suppose we want to pass Mat img</span></span><br><span class="line"><span class="built_in">vector</span>&lt;Mat&gt; channels; <span class="comment">// R, G, B channels</span></span><br><span class="line">split(img, channels);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> rows = img.rows;</span><br><span class="line"><span class="keyword">int</span> cols = img.cols;</span><br><span class="line"><span class="function">mwArray <span class="title">image_R</span><span class="params">(rows, cols, mxUINT8_CLASS)</span></span>;</span><br><span class="line"><span class="function">mwArray <span class="title">image_G</span><span class="params">(rows, cols, mxUINT8_CLASS)</span></span>;</span><br><span class="line"><span class="function">mwArray <span class="title">image_B</span><span class="params">(rows, cols, mxUINT8_CLASS)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// remember to tranpose first because MATLAB is col-major</span></span><br><span class="line">transpose(channels[<span class="number">0</span>], channels[<span class="number">0</span>]);</span><br><span class="line">transpose(channels[<span class="number">1</span>], channels[<span class="number">1</span>]);</span><br><span class="line">transpose(channels[<span class="number">2</span>], channels[<span class="number">2</span>]);</span><br><span class="line">image_R.SetData(channels[<span class="number">0</span>].ptr(), rows*cols);</span><br><span class="line">image_G.SetData(channels[<span class="number">1</span>].ptr(), rows*cols);</span><br><span class="line">image_B.SetData(channels[<span class="number">2</span>].ptr(), rows*cols);</span><br></pre></td></tr></table></figure>
</li>
<li><p>In MATLAB:</p>
 <figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">image(:,:,<span class="number">1</span>) = image_R;</span><br><span class="line">image(:,:,<span class="number">2</span>) = image_G;</span><br><span class="line">image(:,:,<span class="number">3</span>) = image_B;</span><br></pre></td></tr></table></figure>
</li>
<li><p>The way to define the input parameter based on a <code>string</code> or <code>char []</code> is as follows:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ini input parameter: im_path based on string aString or char aString[]</span></span><br><span class="line"><span class="function">mwArray <span class="title">im_path</span><span class="params">(aString.c_str())</span></span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>For passing other types, we had better to use double (<code>mxDOUBLE_CLASS</code>) instead of int (<code>mxINT8_CLASS</code>) even though it actually is a int.</p>
</li>
<li><p>For passing complex values:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// passing to MATLAB</span></span><br><span class="line"><span class="keyword">double</span> rdata[<span class="number">4</span>] = &#123;<span class="number">1.0</span>, <span class="number">2.0</span>, <span class="number">3.0</span>, <span class="number">4.0</span>&#125;;</span><br><span class="line"><span class="keyword">double</span> idata[<span class="number">4</span>] = &#123;<span class="number">10.0</span>, <span class="number">20.0</span>, <span class="number">30.0</span>, <span class="number">40.0</span>&#125;;</span><br><span class="line"><span class="function">mwArray <span class="title">a</span><span class="params">(<span class="number">2</span>, <span class="number">2</span>, mxDOUBLE_CLASS, mxCOMPLEX)</span></span>;</span><br><span class="line">a.Real().SetData(rdata, <span class="number">4</span>);</span><br><span class="line">a.Imag().SetData(idata, <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// get back from MATLAB</span></span><br><span class="line"><span class="keyword">double</span> rbuffer[<span class="number">4</span>];</span><br><span class="line"><span class="keyword">double</span> ibuffer[<span class="number">4</span>];</span><br><span class="line">a.Real().GetData(rbuffer,<span class="number">4</span>);</span><br><span class="line">a.Imag().GetData(ibuffer,<span class="number">4</span>);</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
</ol>
]]></content>
      <tags>
        <tag>coding</tag>
        <tag>mixed_programming</tag>
        <tag>matlab</tag>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>MATLAB/C++ Mixed Programming: call MATLAB directly in VC++</title>
    <url>/2013/12/27/MATLAB-C-Mixed-Programming-call-MATLAB-directly-in-VC/</url>
    <content><![CDATA[<p>There are two ways in VC++ to call MATLAB:</p>
<ol>
<li><p>distribute MATLAB code into MATLAB independent C++ shared library. Refer to the <a href="https://blog-tommyhu.github.io/2012/04/29/MATLAB-C-Mixed-Programming-distribute-MATLAB-code-into-independent-C-shared-library/">previous blog</a> for details.</p>
</li>
<li><p>call MATLAB directly in VC++.</p>
</li>
</ol>
<hr>
<p>This blog will focus on the second approach (also the easier one).</p>
<a id="more"></a>
<h5 id="Pre-work"><a href="#Pre-work" class="headerlink" title="Pre-work:"></a>Pre-work:</h5><ul>
<li>Install MATLAB: unlike the first method, make sure you have the whole MATLAB application installed in order to call MATLAB directly in VC++ (only MATLAB Compiler Runtime is needed for the first method). We will take <strong>MATLAB-x64-R2013a</strong> as an example (installed under <code>C:\Program Files\MATLAB\R2013a</code>).</li>
<li><strong>Platform consistence:</strong> <strong><em>the platforms of MATLAB and VC++ compile platform must be the same</em></strong>, i.e. Win32/x86 VC++ compile platform can only use x86 MATLAB and x64 VC++ compile platform can only use x64 MATLAB.</li>
<li>Example: take the following example <code>myadd2.m</code> (assume under <code>C:\</code>):<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[y, z]</span> = <span class="title">myadd2</span><span class="params">(a, b)</span></span></span><br><span class="line"><span class="comment">% dummy function, just to demonstrate the idea</span></span><br><span class="line">y = a+b;</span><br><span class="line">z = a+<span class="number">2</span>*b;</span><br><span class="line"><span class="built_in">disp</span>(<span class="string">'Output from MATLAB.'</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="VC-setup"><a href="#VC-setup" class="headerlink" title="VC setup:"></a>VC setup:</h5><ol>
<li>Add MATLAB include folder to project <code>Include</code> files: i.e. <code>C:\Program Files\MATLAB\R2013a\extern\include</code></li>
<li>Add MATLAB library folder to project <code>Library</code> files: i.e. <code>C:\Program Files\MATLAB\R2013a\extern\lib\win64\microsoft</code></li>
<li>Add relevant libraries to <code>Linker&gt;Input&gt;Additional Dependencies</code>: <code>libmx.lib libeng.lib</code></li>
<li>Add MATLAB Compiler Runtime binary folder to project <code>Debugging&gt;Environment</code>: i.e. <code>PATH=%PATH%;$(ProjectDir)\dlls_x64;C:\Program Files\MATLAB\R2013a\runtime\win64;C:\Program Files\MATLAB\R2013a\bin\win64</code></li>
<li>Add header to main code: <code>#include &quot;engine.h&quot;</code></li>
<li><p>Call in VC++: refer to <a href="https://gitlab.com/herohuyongtao/files-public/-/blob/master/files/cplusplus/VC_call_MATLAB_directly.cpp" target="_blank" rel="noopener">VC_call_MATLAB_directly.cpp</a> for details.</p>
<p> In this cpp file, there are also ways to handle data passing of different types between VC++ and MATLAB (see the <code>SHOW_EXTEND_INFO</code> part), which includes:</p>
<ul>
<li><code>double</code> (or <code>int</code>/<code>float</code>/…)</li>
<li><code>string</code></li>
<li>matrix</li>
<li>gray-scale image</li>
<li>RGB image</li>
</ul>
</li>
</ol>
<h5 id="Other-Remarks"><a href="#Other-Remarks" class="headerlink" title="Other Remarks:"></a>Other Remarks:</h5><ul>
<li>Try to close the previous MATLAB window first (extra command window) if stuck at <code>engOpen(NULL)</code>.</li>
</ul>
]]></content>
      <tags>
        <tag>coding</tag>
        <tag>mixed_programming</tag>
        <tag>matlab</tag>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>MATLAB sumup</title>
    <url>/2012/08/30/MATLAB-sumup/</url>
    <content><![CDATA[<h1 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h1><h2 id="Dialog-box"><a href="#Dialog-box" class="headerlink" title="Dialog box"></a>Dialog box</h2><p>Refer to: <a href="https://blog.csdn.net/zjq2010014137/article/details/8535431" target="_blank" rel="noopener">matlab GUI之常用对话框</a></p>
<h2 id="Get-rect-from-mouse"><a href="#Get-rect-from-mouse" class="headerlink" title="Get rect from mouse"></a>Get rect from mouse</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">imshow(<span class="string">'test.jpg'</span>);</span><br><span class="line">rect = getrect;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="I-O"><a href="#I-O" class="headerlink" title="I/O"></a>I/O</h1><h2 id="Get-user-input"><a href="#Get-user-input" class="headerlink" title="Get user input"></a>Get user input</h2><ul>
<li>Via command window  <figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">strResponse = input(<span class="string">'Do you want more? Y/N [Y]: '</span>, <span class="string">'s'</span>);</span><br></pre></td></tr></table></figure></li>
<li>Via UI  <figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">prompt = &#123; <span class="string">'from:'</span>,<span class="string">'to:'</span>,<span class="string">'step'</span>&#125;;</span><br><span class="line">dlg_title = <span class="string">'choose images'</span>;</span><br><span class="line">num_lines = [<span class="number">4</span> <span class="number">1</span> <span class="number">3</span>]; <span class="comment">% can be a scaler number that applies to all</span></span><br><span class="line">defAns = &#123;<span class="string">'0'</span>, <span class="string">''</span>, <span class="string">'1'</span>&#125;;</span><br><span class="line">options = <span class="string">'on'</span>; <span class="comment">% enable to resize window</span></span><br><span class="line">answer = inputdlg(prompt,dlg_title,num_lines,defAns);</span><br><span class="line"></span><br><span class="line">from=str2num(cell2mat(answer(<span class="number">1</span>)));</span><br><span class="line">to=str2num(cell2mat(answer(<span class="number">2</span>)));</span><br><span class="line">stepsize=str2num(cell2mat(answer(<span class="number">3</span>)));</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Ouput-to-TXT"><a href="#Ouput-to-TXT" class="headerlink" title="Ouput to TXT"></a>Ouput to TXT</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">fileID = fopen(<span class="string">'faces.txt'</span>, <span class="string">'w'</span>);</span><br><span class="line">fprintf(fileID,<span class="string">'[%4.2f,%d,%d,%d]\n'</span>, x, y, z, t);</span><br><span class="line">fclose(fileID);</span><br></pre></td></tr></table></figure>
<h1 id="File"><a href="#File" class="headerlink" title="File"></a>File</h1><h2 id="Get-diff-parts-from-path-e-g-folder-filename-and-extension"><a href="#Get-diff-parts-from-path-e-g-folder-filename-and-extension" class="headerlink" title="Get diff parts from path (e.g., folder, filename and extension)"></a>Get diff parts from path (e.g., folder, filename and extension)</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">[pathstr,realname,ext] = fileparts(<span class="string">'C:\\images\\test.bmp'</span>);</span><br></pre></td></tr></table></figure>
<p>=&gt;</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">pathstr = <span class="string">'C:\images\'</span></span><br><span class="line"><span class="string">realname = '</span>test'</span><br><span class="line">ext = <span class="string">'.bmp'</span></span><br></pre></td></tr></table></figure>
<h2 id="Get-filename-via-UI"><a href="#Get-filename-via-UI" class="headerlink" title="Get filename via UI"></a>Get filename via UI</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">[filename, pathname] = uigetfile(&#123;<span class="string">'*.*'</span>;<span class="string">'*.avi'</span>;<span class="string">'*.mpg'</span>;<span class="string">'*.wmv'</span>;<span class="string">'*.asf'</span>;<span class="string">'*.asx'</span>;<span class="string">'*.mj2'</span>&#125;, <span class="string">'Select a VIDEO file...'</span>);</span><br><span class="line">video_file_name = fullfile(pathname, filename); <span class="comment">% use fullfile for OS independent</span></span><br></pre></td></tr></table></figure>
<h2 id="Get-folder-via-UI"><a href="#Get-folder-via-UI" class="headerlink" title="Get folder via UI"></a>Get folder via UI</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">output_images_folder = uigetdir(pwd, <span class="string">'Select the FOLDER where to save images...'</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Iterate-through-all-files-in-folder"><a href="#Iterate-through-all-files-in-folder" class="headerlink" title="Iterate through all files in folder"></a>Iterate through all files in folder</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">data_pwd = uigetdir;</span><br><span class="line">file_temp = sprintf(<span class="string">'%s\\*.%s'</span>, data_pwd, input_type);</span><br><span class="line">filearray = dir(file_temp);</span><br><span class="line">s=<span class="built_in">max</span>(<span class="built_in">size</span>(filearray));</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">1</span>:s</span><br><span class="line">    imgname=strcat(data_pwd,<span class="string">'\\'</span>,filearray(<span class="built_in">i</span>).name);</span><br><span class="line">    ... ...</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="Iterate-through-all-frames-of-a-video"><a href="#Iterate-through-all-frames-of-a-video" class="headerlink" title="Iterate through all frames of a video"></a>Iterate through all frames of a video</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">mov = VideoReader(video_file_name);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">1</span>:mov.numberofframes</span><br><span class="line">    b=read(mov,<span class="built_in">i</span>);</span><br><span class="line">	... ...</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="Get-image-height-width-channel"><a href="#Get-image-height-width-channel" class="headerlink" title="Get image height/width/channel"></a>Get image height/width/channel</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">img = imread(<span class="string">'C:\Users\tommyhu\Desktop\test\frame_0000.bmp'</span>);</span><br><span class="line">[h, w, c] = <span class="built_in">size</span>(img);</span><br></pre></td></tr></table></figure>
<h2 id="Functions-with-required-and-optional-inputs"><a href="#Functions-with-required-and-optional-inputs" class="headerlink" title="Functions with required and optional inputs"></a>Functions with required and optional inputs</h2><p>Refer to <a href="http://www.mathworks.com/help/matlab/matlab_prog/parse-function-inputs.html" target="_blank" rel="noopener">http://www.mathworks.com/help/matlab/matlab_prog/parse-function-inputs.html</a>.</p>
<h2 id="MEX-with-multiple-include-paths-1"><a href="#MEX-with-multiple-include-paths-1" class="headerlink" title="MEX with multiple include paths 1"></a>MEX with multiple include paths <sup><a href="#fn_1" id="reffn_1">1</a></sup></h2><p>You need to use two different variables or a cell array of paths:</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">path1 = [<span class="string">'-I'</span> fullfile(pwd, <span class="string">'tempInclude1'</span>)];</span><br><span class="line">path2 = [<span class="string">'-I'</span> fullfile(pwd, <span class="string">'tempInclude2'</span>)];</span><br><span class="line">mex(<span class="string">'-v'</span>, path1, path2, srcFile)</span><br></pre></td></tr></table></figure>
<p>or</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">ipaths = &#123;[<span class="string">'-I'</span> fullfile(pwd,<span class="string">'tempInclude1'</span>)], [<span class="string">'-I'</span> fullfile(pwd, <span class="string">'tempInclude2'</span>)];&#125;</span><br><span class="line">mex(<span class="string">'-v'</span>, ipaths&#123;:&#125;, srcFile)</span><br></pre></td></tr></table></figure>
<h2 id="String-catenation"><a href="#String-catenation" class="headerlink" title="String catenation"></a>String catenation</h2><ol>
<li><code>sprintf</code> <figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">file_temp = sprintf(<span class="string">'%s\\*.%s'</span>, data_pwd, input_type);</span><br></pre></td></tr></table></figure></li>
<li><code>strcat</code> <figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">imgname = strcat(data_pwd,<span class="string">'\\'</span>, filearray(<span class="built_in">i</span>).name);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<blockquote id="fn_1">
<sup>1</sup>. <a href="https://www.mathworks.com/matlabcentral/answers/279800-multiple-include-paths-in-mex" target="_blank" rel="noopener">Multiple include paths in mex</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>coding</tag>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>MFC sumup</title>
    <url>/2011/10/09/MFC-sumup/</url>
    <content><![CDATA[<h2 id="代码组织"><a href="#代码组织" class="headerlink" title="代码组织"></a>代码组织</h2><ul>
<li><strong>代码</strong>: 写在 <code>View</code> 中</li>
<li><strong>数据</strong>: 写在 <code>Doc</code> 中</li>
<li><strong>变量</strong>: 在 <code>View.h</code> 中申明, 在 <code>View.cpp</code> 的构造函数中初始化, 在 <code>View.cpp</code> 的析构函数中释放</li>
</ul>
<a id="more"></a>
<h2 id="添加消息函数"><a href="#添加消息函数" class="headerlink" title="添加消息函数"></a>添加消息函数</h2><p><strong>Class View</strong>视图 &gt; 右击<code>View</code>类 &gt; <strong>Properties</strong> &gt; 点击<a href="/2011/10/09/MFC-sumup/clip_image001.png"><strong>Messages</strong>图标</a> &gt; 找相应的</p>
<h2 id="注册函数-ON-COMMAND"><a href="#注册函数-ON-COMMAND" class="headerlink" title="注册函数 ON_COMMAND"></a>注册函数 <code>ON_COMMAND</code></h2><p><strong>Class View</strong>视图 &gt; 右击<code>View</code>类 &gt; <strong>Properties</strong> &gt; 点击<a href="/2011/10/09/MFC-sumup/clip_image002.png"><strong>Events</strong>图标</a> &gt; 找相应的<br>(注: 比如menu设置N选1型(menu 中选择其中之一会打钩$\checkmark$), 类似操作, 在每个项目的第二个点击添加, 然后代码类似如下:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">COpenGLView::OnUpdateButtonLighton</span><span class="params">(CCmdUI *pCmdUI)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Add your command update UI handler code here</span></span><br><span class="line">    pCmdUI-&gt;SetCheck(m_nLightState == LIGHT_ON);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="添加状态栏提示信息"><a href="#添加状态栏提示信息" class="headerlink" title="添加状态栏提示信息"></a>添加状态栏提示信息</h2><ul>
<li><p>在<code>MainFrm.cpp</code>中添加文字占位符, 粗体为新添加</p>
  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> UINT indicators[] =</span><br><span class="line">&#123;</span><br><span class="line">    ID_SEPARATOR, <span class="comment">// status line indicator</span></span><br><span class="line">    ID_SEPARATOR, <span class="comment">// for 2D &amp; 3D DT/VD</span></span><br><span class="line">    ID_SEPARATOR, <span class="comment">// for CGAL 2D &amp; 3D DT/VD</span></span><br><span class="line">    ID_INDICATOR_CAPS,</span><br><span class="line">    ID_INDICATOR_NUM,</span><br><span class="line">    ID_INDICATOR_SCRL,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li>
<li><p>在 <code>int CMainFrame::OnCreate(LPCREATESTRUCT lpCreateStruct)</code> 中设置所添加的占位符的宽度, 不设的话为默认值; 最后一个值是宽度值.</p>
  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">m_wndStatusBar.SetPaneInfo(<span class="number">1</span>,ID_SEPARATOR,<span class="number">0</span>,<span class="number">150</span>);</span><br><span class="line">m_wndStatusBar.SetPaneInfo(<span class="number">2</span>,ID_SEPARATOR,<span class="number">0</span>,<span class="number">150</span>);</span><br></pre></td></tr></table></figure></li>
<li><p>在想显示提示信息的地方添加如下代码即可:</p>
  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">CStatusBar * pStatus=(CStatusBar*) AfxGetApp()-&gt;m_pMainWnd-&gt;GetDescendantWindow(AFX_IDW_STATUS_BAR );</span><br><span class="line">pStatus-&gt;SetPaneText(<span class="number">1</span>, <span class="string">"xxxxxx"</span>); <span class="comment">// set first</span></span><br><span class="line">pStatus-&gt;SetPaneText(<span class="number">2</span>, <span class="string">"xxxxxx"</span>); <span class="comment">// set second</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Menu中的功能想放到Toolbars上"><a href="#Menu中的功能想放到Toolbars上" class="headerlink" title="Menu中的功能想放到Toolbars上"></a>Menu中的功能想放到Toolbars上</h2><p>可以先增加<strong>Toolbar</strong>, 再增加<strong>Menu</strong>, 使得两者的ID一样就OK.</p>
<h2 id="Warning提示信息"><a href="#Warning提示信息" class="headerlink" title="Warning提示信息"></a>Warning提示信息</h2><p>方式可以</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">MessageBox(<span class="string">"Could not delete RC"</span>);</span><br></pre></td></tr></table></figure>
<h2 id="键盘处理"><a href="#键盘处理" class="headerlink" title="键盘处理"></a>键盘处理</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool</span> keyDown[<span class="number">256</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">COpenGLView::OnKeyDown</span><span class="params">(UINT nChar, UINT nRepCnt, UINT nFlags)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Add your message handler code here and/or call default</span></span><br><span class="line">    <span class="keyword">char</span> nChar2=nChar;</span><br><span class="line">    <span class="keyword">if</span> (!GetAsyncKeyState(VK_LSHIFT) &amp;&amp; nChar2&lt;=<span class="string">'Z'</span> &amp;&amp; nChar2&gt;=<span class="string">'A'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        nChar2+=<span class="string">'a'</span>-<span class="string">'A'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    keyDown[nChar2] = <span class="literal">true</span>;</span><br><span class="line">    InvalidateRect(<span class="literal">NULL</span>,FALSE);</span><br><span class="line">    CView::OnKeyDown(nChar, nRepCnt, nFlags);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">COpenGLView::OnKeyUp</span><span class="params">(UINT nChar, UINT nRepCnt, UINT nFlags)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> nChar2=nChar;</span><br><span class="line">    <span class="keyword">if</span> (!GetAsyncKeyState(VK_LSHIFT) &amp;&amp; nChar2&lt;=<span class="string">'Z'</span>&amp;&amp;nChar2&gt;=<span class="string">'A'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        nChar2+=<span class="string">'a'</span>-<span class="string">'A'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    keyDown[nChar2] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>再在画的函数中进行真正处理:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">COpenGLView::RenderScene</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ... ...</span><br><span class="line">    <span class="keyword">if</span> (keyDown[<span class="string">'w'</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// handling here...</span></span><br><span class="line">    &#125;    </span><br><span class="line">    ... ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="鼠标处理"><a href="#鼠标处理" class="headerlink" title="鼠标处理"></a>鼠标处理</h2><ul>
<li><p>左键处理: (中键 – 右键 类似)</p>
  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> buttonState;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">COpenGLView::OnLButtonDown</span><span class="params">(UINT nFlags, CPoint point)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Add your message handler code here and/or call default</span></span><br><span class="line">    m_MouseDownPoint=point;</span><br><span class="line">    SetCapture();</span><br><span class="line">    buttonState = GLUT_LEFT_BUTTON;</span><br><span class="line">    CView::OnLButtonDown(nFlags, point);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">COpenGLView::OnLButtonUp</span><span class="params">(UINT nFlags, CPoint point)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Add your message handler code here and/or call default</span></span><br><span class="line">    m_MouseDownPoint=CPoint(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    ReleaseCapture();</span><br><span class="line">    buttonState = <span class="number">-1</span>;</span><br><span class="line">    CView::OnLButtonUp(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>真正的处理在 <code>OnMouseMove()</code> 函数中:</p>
  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">COpenGLView::OnMouseMove</span><span class="params">(UINT nFlags, CPoint point)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Add your message handler code here and/or call default</span></span><br><span class="line">    <span class="comment">// Check if we have captured the mouse</span></span><br><span class="line">    <span class="keyword">if</span> (GetCapture()==<span class="keyword">this</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">float</span> dx, dy;</span><br><span class="line">        dx = point.x - m_MouseDownPoint.x;</span><br><span class="line">        dy = point.y - m_MouseDownPoint.y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (buttonState == GLUT_LEFT_BUTTON)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (buttonState == GLUT_MIDDLE_BUTTON)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (buttonState == GLUT_RIGHT_BUTTON)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">    m_MouseDownPoint=point;</span><br><span class="line">    InvalidateRect(<span class="literal">NULL</span>,FALSE);</span><br><span class="line">    CView::OnMouseMove(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="打开文件对话框"><a href="#打开文件对话框" class="headerlink" title="打开文件对话框"></a>打开文件对话框</h2><p>添加方法如下:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">CFileDialog <span class="title">fOpenDlg</span><span class="params">(TRUE, <span class="string">"wrl"</span>, <span class="string">""</span>, OFN_HIDEREADONLY|OFN_FILEMUSTEXIST, <span class="string">"Mesh Files (*.wrl)|*.wrl|"</span>, <span class="keyword">this</span>)</span></span>;</span><br><span class="line">fOpenDlg.m_ofn.lpstrTitle=<span class="string">"Open Mesh Files"</span>;</span><br><span class="line">fOpenDlg.m_ofn.lpstrInitialDir=<span class="string">".\\data\\"</span>;</span><br><span class="line"><span class="keyword">if</span>(fOpenDlg.DoModal()==IDOK)</span><br><span class="line">&#123;</span><br><span class="line">    CString meshPath= fOpenDlg.GetPathName();</span><br><span class="line">    ... ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注: 若想能同时打开多个文件, 同时可以设置同时打开的上限, 默认20个, 方法如下(同样包含如何挨个获得每个文件的Path):</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">CFileDialog <span class="title">fOpenDlg</span><span class="params">(TRUE, <span class="string">"wrl"</span>, <span class="string">""</span>, OFN_HIDEREADONLY|OFN_FILEMUSTEXIST|OFN_ALLOWMULTISELECT|OFN_EXPLORER|OFN_ENABLEHOOK, <span class="string">"Mesh Files (*.wrl)|*.wrl|"</span>, <span class="keyword">this</span>)</span></span>;</span><br><span class="line">fOpenDlg.m_ofn.lpstrTitle=<span class="string">"Open Mesh Files"</span>;</span><br><span class="line">fOpenDlg.m_ofn.lpstrInitialDir=<span class="string">".\\data\\"</span>;</span><br><span class="line"><span class="comment">//extend to be able to open 100 files at a time, default only 20</span></span><br><span class="line">fOpenDlg.m_ofn.nMaxFile=<span class="number">100</span>*MAX_PATH;</span><br><span class="line">fOpenDlg.m_ofn.lpstrFile=<span class="keyword">new</span> TCHAR[fOpenDlg.m_ofn.nMaxFile];</span><br><span class="line">ZeroMemory(fOpenDlg.m_ofn.lpstrFile, <span class="keyword">sizeof</span>(TCHAR)*fOpenDlg.m_ofn.nMaxFile);</span><br><span class="line"><span class="keyword">if</span>(fOpenDlg.DoModal()==IDOK)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Retrieve file name(s).</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;CString&gt; meshPath;</span><br><span class="line">    POSITION fileNamesPosition = fOpenDlg.GetStartPosition();</span><br><span class="line">    <span class="keyword">while</span>(fileNamesPosition != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        CString stub = fOpenDlg.GetNextPathName(fileNamesPosition);</span><br><span class="line">        meshPath.push_back((CString)stub);</span><br><span class="line">    &#125;</span><br><span class="line">    ... ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>coding</tag>
        <tag>mfc</tag>
      </tags>
  </entry>
  <entry>
    <title>Movies worth watching twice</title>
    <url>/2012/06/15/Movies-worth-watching-twice/</url>
    <content><![CDATA[<p>This post lists those classic movies (in my opition) that are worth watching for multiple times.</p>
<a id="more"></a>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">Chinese Name</th>
<th style="text-align:center">Original Name</th>
<th style="text-align:center">Year</th>
<th style="text-align:center">Keywords</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">蜂蜜之地</td>
<td style="text-align:center">Медена земја</td>
<td style="text-align:center">2019</td>
<td style="text-align:center">纪录片, 自然, 质朴</td>
</tr>
<tr>
<td style="text-align:center">极盗车神</td>
<td style="text-align:center">Baby Driver</td>
<td style="text-align:center">2017</td>
<td style="text-align:center">音乐, 飙车, 犯罪</td>
</tr>
<tr>
<td style="text-align:center">八恶人</td>
<td style="text-align:center">The Hateful Eight</td>
<td style="text-align:center">2015</td>
<td style="text-align:center">西部片, 枪战</td>
</tr>
<tr>
<td style="text-align:center">听我说，马龙</td>
<td style="text-align:center">Listen to Me Marlon</td>
<td style="text-align:center">2015</td>
<td style="text-align:center">传记</td>
</tr>
<tr>
<td style="text-align:center">秘密特工</td>
<td style="text-align:center">The.Man.from.U.N.C.L.E</td>
<td style="text-align:center">2015</td>
<td style="text-align:center">动作, 幽默</td>
</tr>
<tr>
<td style="text-align:center">荒蛮故事</td>
<td style="text-align:center">Wild Tales</td>
<td style="text-align:center">2014</td>
<td style="text-align:center">荒诞, 黑色幽默, 报复</td>
</tr>
<tr>
<td style="text-align:center">红军冰球队</td>
<td style="text-align:center">Red Army</td>
<td style="text-align:center">2014</td>
<td style="text-align:center">纪录片, 体育, 政治</td>
</tr>
<tr>
<td style="text-align:center">互联网之子</td>
<td style="text-align:center">The Internet’s Own Boy: The Story of Aaron Swartz</td>
<td style="text-align:center">2014</td>
<td style="text-align:center">传记, 互联网, 自由</td>
</tr>
<tr>
<td style="text-align:center">岳父岳母真难当</td>
<td style="text-align:center">Qu’est-ce.qu’on.a.fait.au.Bon.Dieu</td>
<td style="text-align:center">2014</td>
<td style="text-align:center">宗族地域冲突,  温馨</td>
</tr>
<tr>
<td style="text-align:center">消失的爱人</td>
<td style="text-align:center">Gone Girl</td>
<td style="text-align:center">2014</td>
<td style="text-align:center">悬疑, 惊悚, 爱情, 婚姻</td>
</tr>
<tr>
<td style="text-align:center">醉乡民谣</td>
<td style="text-align:center">Inside Llewyn Davis</td>
<td style="text-align:center">2013</td>
<td style="text-align:center">音乐, 民谣, 理想与现实</td>
</tr>
<tr>
<td style="text-align:center">达拉斯买家俱乐部</td>
<td style="text-align:center">Dallas Buyers Club</td>
<td style="text-align:center">2013</td>
<td style="text-align:center">传记, 艾滋, 牛仔, 人权</td>
</tr>
<tr>
<td style="text-align:center">了不起的盖茨比</td>
<td style="text-align:center">The Great Gatsby</td>
<td style="text-align:center">2013</td>
<td style="text-align:center">剧情, 爱情</td>
</tr>
<tr>
<td style="text-align:center">桃姐</td>
<td style="text-align:center">A Simple Life</td>
<td style="text-align:center">2012</td>
<td style="text-align:center">真人真事改编, 亲情, 养老</td>
</tr>
<tr>
<td style="text-align:center">少年派的奇幻漂流</td>
<td style="text-align:center">Life of Pi</td>
<td style="text-align:center">2012</td>
<td style="text-align:center">宗教, 信仰, 人性</td>
</tr>
<tr>
<td style="text-align:center">战马</td>
<td style="text-align:center">War Horse</td>
<td style="text-align:center">2011</td>
<td style="text-align:center">马, 战争, 温暖</td>
</tr>
<tr>
<td style="text-align:center">点球成金</td>
<td style="text-align:center">Moneyball</td>
<td style="text-align:center">2011</td>
<td style="text-align:center">棒球, 人生</td>
</tr>
<tr>
<td style="text-align:center">龙纹身的女孩</td>
<td style="text-align:center">The Girl with the Dragon Tattoo</td>
<td style="text-align:center">2011</td>
<td style="text-align:center">悬疑, 冷酷</td>
</tr>
<tr>
<td style="text-align:center">赛德克·巴莱(上,下)</td>
<td style="text-align:center">Seediq Bale</td>
<td style="text-align:center">2011</td>
<td style="text-align:center">台湾, 部落, 战争, 史诗</td>
</tr>
<tr>
<td style="text-align:center">笨人晚宴</td>
<td style="text-align:center">Dinner for Schmucks</td>
<td style="text-align:center">2010</td>
<td style="text-align:center">喜剧, 小人物, 超Q的老鼠模型</td>
</tr>
<tr>
<td style="text-align:center">天龙特攻队</td>
<td style="text-align:center">The A-Team</td>
<td style="text-align:center">2010</td>
<td style="text-align:center">枪战, 动作, 幽默</td>
</tr>
<tr>
<td style="text-align:center">怦然心动</td>
<td style="text-align:center">Flipped</td>
<td style="text-align:center">2010</td>
<td style="text-align:center">恋爱 (早恋)</td>
</tr>
<tr>
<td style="text-align:center">让子弹飞</td>
<td style="text-align:center">Let The Bullets Fly</td>
<td style="text-align:center">2010</td>
<td style="text-align:center">枪战, 搞笑</td>
</tr>
<tr>
<td style="text-align:center">盗梦空间</td>
<td style="text-align:center">Inception</td>
<td style="text-align:center">2010</td>
<td style="text-align:center">梦境, 高智商</td>
</tr>
<tr>
<td style="text-align:center">海盗电台</td>
<td style="text-align:center">The Boat That Rocked</td>
<td style="text-align:center">2009</td>
<td style="text-align:center">摇滚音乐, Rock ‘n’ Roll</td>
</tr>
<tr>
<td style="text-align:center">疯狂的心</td>
<td style="text-align:center">Crazy Heart</td>
<td style="text-align:center">2009</td>
<td style="text-align:center">故事片, 里面音乐超赞, 歌词很touching</td>
</tr>
<tr>
<td style="text-align:center">阿凡达</td>
<td style="text-align:center">Avatar</td>
<td style="text-align:center">2009</td>
<td style="text-align:center">画面超赞</td>
</tr>
<tr>
<td style="text-align:center">杀手没有假期</td>
<td style="text-align:center">In Bruges</td>
<td style="text-align:center">2008</td>
<td style="text-align:center">杀手, 英式幽默, 很赞的景色和钢琴配乐</td>
</tr>
<tr>
<td style="text-align:center">热带惊雷</td>
<td style="text-align:center">Tropic Thunder</td>
<td style="text-align:center">2008</td>
<td style="text-align:center">喜剧, 无厘头, 搞笑</td>
</tr>
<tr>
<td style="text-align:center">返老还童</td>
<td style="text-align:center">The Curious Case Of Benjamin Button</td>
<td style="text-align:center">2008</td>
<td style="text-align:center">爱情, 奇人奇事</td>
</tr>
<tr>
<td style="text-align:center">蝙蝠侠前传2: 黑暗骑士</td>
<td style="text-align:center">The Dark Knight</td>
<td style="text-align:center">2008</td>
<td style="text-align:center">英雄, 小丑, 人性</td>
</tr>
<tr>
<td style="text-align:center">伟大的辩论家</td>
<td style="text-align:center">The Great Debaters</td>
<td style="text-align:center">2007</td>
<td style="text-align:center">黑人民权, 辩论, 真人真事改编, 辩词精彩到位</td>
</tr>
<tr>
<td style="text-align:center">时空线索</td>
<td style="text-align:center">Deja Vu</td>
<td style="text-align:center">2006</td>
<td style="text-align:center">探讨平行宇宙, 警匪, 悬疑</td>
</tr>
<tr>
<td style="text-align:center">局内人</td>
<td style="text-align:center">Inside Man</td>
<td style="text-align:center">2006</td>
<td style="text-align:center">抢劫, 警匪, 高智商</td>
</tr>
<tr>
<td style="text-align:center">人类之子</td>
<td style="text-align:center">Children of Men</td>
<td style="text-align:center">2006</td>
<td style="text-align:center">创新科幻, 灾难, 生命, 人性</td>
</tr>
<tr>
<td style="text-align:center">蝙蝠侠诞生</td>
<td style="text-align:center">Batman Begins</td>
<td style="text-align:center">2005</td>
<td style="text-align:center">科幻, 正义, 英雄</td>
</tr>
<tr>
<td style="text-align:center">断背山</td>
<td style="text-align:center">Brokeback Mountain</td>
<td style="text-align:center">2005</td>
<td style="text-align:center">同性恋, 爱情, 感人</td>
</tr>
<tr>
<td style="text-align:center">功夫</td>
<td style="text-align:center">Kung Fu Hustle</td>
<td style="text-align:center">2004</td>
<td style="text-align:center">喜剧, 无厘头, 武打</td>
</tr>
<tr>
<td style="text-align:center">卢旺达饭店</td>
<td style="text-align:center">Hotel Rwanda</td>
<td style="text-align:center">2004</td>
<td style="text-align:center">战争, 真人真事改编, 种族矛盾, 主权人权探讨</td>
</tr>
<tr>
<td style="text-align:center">灵魂歌王</td>
<td style="text-align:center">Ray</td>
<td style="text-align:center">2004</td>
<td style="text-align:center">传记, 音乐, 摇滚, 励志</td>
</tr>
<tr>
<td style="text-align:center">放牛班的春天(法国)</td>
<td style="text-align:center">Les Choristes</td>
<td style="text-align:center">2004</td>
<td style="text-align:center">教育探讨, 音乐(唯美,纯净), 感人</td>
</tr>
<tr>
<td style="text-align:center">海底总动员</td>
<td style="text-align:center">Finding Nemo</td>
<td style="text-align:center">2003</td>
<td style="text-align:center">动画, 亲情</td>
</tr>
<tr>
<td style="text-align:center">大卫·戈尔的一生</td>
<td style="text-align:center">The Life of David Gale</td>
<td style="text-align:center">2003</td>
<td style="text-align:center">人权, 殉道</td>
</tr>
<tr>
<td style="text-align:center">卧虎藏龙</td>
<td style="text-align:center">Crouching Tiger, Hidden Dragon</td>
<td style="text-align:center">2000</td>
<td style="text-align:center">武侠, 爱情</td>
</tr>
<tr>
<td style="text-align:center">偷拐抢骗</td>
<td style="text-align:center">Snatch</td>
<td style="text-align:center">2000</td>
<td style="text-align:center">黑幽默</td>
</tr>
<tr>
<td style="text-align:center">鬼子来了</td>
<td style="text-align:center">Devils on the Doorstep</td>
<td style="text-align:center">2000</td>
<td style="text-align:center">另类讲述战争, 反省, 人性</td>
</tr>
<tr>
<td style="text-align:center">角斗士</td>
<td style="text-align:center">Gladiator</td>
<td style="text-align:center">2000</td>
<td style="text-align:center">罗马战争, 忠诚, 背叛, 亲情</td>
</tr>
<tr>
<td style="text-align:center">绿里奇迹</td>
<td style="text-align:center">The Green Mile</td>
<td style="text-align:center">1999</td>
<td style="text-align:center">监狱, 善恶, 人性</td>
</tr>
<tr>
<td style="text-align:center">黑客帝国</td>
<td style="text-align:center">The Matrix</td>
<td style="text-align:center">1999</td>
<td style="text-align:center">科幻, 动作</td>
</tr>
<tr>
<td style="text-align:center">美国X档案</td>
<td style="text-align:center">American History X</td>
<td style="text-align:center">1998</td>
<td style="text-align:center">种族敌对问题, 暴力, 家庭教育探讨</td>
</tr>
<tr>
<td style="text-align:center">拯救大兵瑞恩</td>
<td style="text-align:center">Saving Private Ryan</td>
<td style="text-align:center">1998</td>
<td style="text-align:center">战争, 生命, 人性</td>
</tr>
<tr>
<td style="text-align:center">心理游戏</td>
<td style="text-align:center">The Game</td>
<td style="text-align:center">1997</td>
<td style="text-align:center">悬疑</td>
</tr>
<tr>
<td style="text-align:center">心灵捕手</td>
<td style="text-align:center">Good Will Hunting</td>
<td style="text-align:center">1997</td>
<td style="text-align:center">心灵 心结 天才</td>
</tr>
<tr>
<td style="text-align:center">美丽人生</td>
<td style="text-align:center">La Vita e bella</td>
<td style="text-align:center">1997</td>
<td style="text-align:center">亲情 爱情 纳粹 集中营 幽默</td>
</tr>
<tr>
<td style="text-align:center">泰坦尼克号</td>
<td style="text-align:center">Titanic</td>
<td style="text-align:center">1997</td>
<td style="text-align:center">爱情</td>
</tr>
<tr>
<td style="text-align:center">征服情海</td>
<td style="text-align:center">Jerry Maguire</td>
<td style="text-align:center">1996</td>
<td style="text-align:center">体育, 励志, 爱情</td>
</tr>
<tr>
<td style="text-align:center">盗火线</td>
<td style="text-align:center">Heat</td>
<td style="text-align:center">1995</td>
<td style="text-align:center">极品警匪片, 犯罪, 讨论情感、家庭、婚姻和寂寞</td>
</tr>
<tr>
<td style="text-align:center">真实的谎言</td>
<td style="text-align:center">True Lies</td>
<td style="text-align:center">1995</td>
<td style="text-align:center">动作片中的经典, 场面宏大真实, 动作中不乏幽默</td>
</tr>
<tr>
<td style="text-align:center">十二只猴子</td>
<td style="text-align:center">Twelve Monkeys</td>
<td style="text-align:center">1995</td>
<td style="text-align:center">科幻, 时间穿梭, 高智商</td>
</tr>
<tr>
<td style="text-align:center">理性与感性</td>
<td style="text-align:center">Sense and Sensibility</td>
<td style="text-align:center">1995</td>
<td style="text-align:center">理性 vs. 感性, 爱情</td>
</tr>
<tr>
<td style="text-align:center">七宗罪</td>
<td style="text-align:center">Se7en</td>
<td style="text-align:center">1995</td>
<td style="text-align:center">高智商, 犯罪, 悬疑</td>
</tr>
<tr>
<td style="text-align:center">大话西游之月光宝盒/仙履奇缘</td>
<td style="text-align:center">A Chinese Odyssey 1,2</td>
<td style="text-align:center">1994, 1995</td>
<td style="text-align:center">恶搞, 爱情</td>
</tr>
<tr>
<td style="text-align:center">燃情岁月</td>
<td style="text-align:center">Legends of the Fall</td>
<td style="text-align:center">1994</td>
<td style="text-align:center">亲情, 爱情, 写意, 唯美, 配乐超赞</td>
</tr>
<tr>
<td style="text-align:center">阿甘正传</td>
<td style="text-align:center">Forrest Gump</td>
<td style="text-align:center">1994</td>
<td style="text-align:center">人生</td>
</tr>
<tr>
<td style="text-align:center">肖申克的救赎</td>
<td style="text-align:center">The Shawshank Redemption</td>
<td style="text-align:center">1994</td>
<td style="text-align:center">越狱, 自由</td>
</tr>
<tr>
<td style="text-align:center">大河恋</td>
<td style="text-align:center">A River Runs Through It</td>
<td style="text-align:center">1992</td>
<td style="text-align:center">真人真事改编, 探讨亲情, 生活价值, 画面唯美, 平静</td>
</tr>
<tr>
<td style="text-align:center">闻香识女人</td>
<td style="text-align:center">Scent of a Woman</td>
<td style="text-align:center">1992</td>
<td style="text-align:center">从毁灭到重生 探戈 法拉利 演讲</td>
</tr>
<tr>
<td style="text-align:center">终结者2</td>
<td style="text-align:center">Terminator 2: Judgment Day</td>
<td style="text-align:center">1991</td>
<td style="text-align:center">科幻</td>
</tr>
<tr>
<td style="text-align:center">好家伙</td>
<td style="text-align:center">Goodfellas</td>
<td style="text-align:center">1990</td>
<td style="text-align:center">黑帮</td>
</tr>
<tr>
<td style="text-align:center">死亡诗社</td>
<td style="text-align:center">Dead Poets Society</td>
<td style="text-align:center">1989</td>
<td style="text-align:center">传统教育与自由教育探讨</td>
</tr>
<tr>
<td style="text-align:center">异形2</td>
<td style="text-align:center">Aliens</td>
<td style="text-align:center">1986</td>
<td style="text-align:center">科幻, 恐怖</td>
</tr>
<tr>
<td style="text-align:center">疤面煞星</td>
<td style="text-align:center">Scarface</td>
<td style="text-align:center">1983</td>
<td style="text-align:center">暴力 犯罪 黑帮</td>
</tr>
<tr>
<td style="text-align:center">克莱默夫妇</td>
<td style="text-align:center">Kramer vs. Kramer</td>
<td style="text-align:center">1979</td>
<td style="text-align:center">家庭, 婚姻, 亲情</td>
</tr>
<tr>
<td style="text-align:center">洛城机密</td>
<td style="text-align:center">L.A. Confidential</td>
<td style="text-align:center">1977</td>
<td style="text-align:center">高智商, 推理, 90年代最好的警匪片, 悬疑, 惊险</td>
</tr>
<tr>
<td style="text-align:center">洛奇</td>
<td style="text-align:center">Rocky</td>
<td style="text-align:center">1976</td>
<td style="text-align:center">励志, 拳击</td>
</tr>
<tr>
<td style="text-align:center">教父(1,2,3)</td>
<td style="text-align:center">The Godfather</td>
<td style="text-align:center">1972, 1974, 1990</td>
<td style="text-align:center">黑帮</td>
</tr>
<tr>
<td style="text-align:center">发条橙子</td>
<td style="text-align:center">A Clockwork Orange</td>
<td style="text-align:center">1971</td>
<td style="text-align:center">人性 暴力 犯罪 人权</td>
</tr>
<tr>
<td style="text-align:center">黄金三镖客</td>
<td style="text-align:center">The Good, the Bad and the Ugly</td>
<td style="text-align:center">1966</td>
<td style="text-align:center">西部片, 善,恶,丑, 配乐nice</td>
</tr>
<tr>
<td style="text-align:center">十二怒汉</td>
<td style="text-align:center">12 Angry Men</td>
<td style="text-align:center">1957</td>
<td style="text-align:center">人性, 偏见, 推理</td>
</tr>
<tr>
<td style="text-align:center">乱世佳人</td>
<td style="text-align:center">Gone with the Wind</td>
<td style="text-align:center">1939</td>
<td style="text-align:center">爱情, 战争</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <tags>
        <tag>fun</tag>
        <tag>movie</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenGL sumup</title>
    <url>/2011/10/09/OpenGL-sumup/</url>
    <content><![CDATA[<h2 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h2><p>Please refer to <a href="https://gitlab.com/herohuyongtao/opengl-setup" target="_blank" rel="noopener">here</a> on how to setup OpenGL.</p>
<h2 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h2><p><code>RenderScene()</code> 函数里面只放绘制的东西, 计算的所有代码独立出去, 保证速度!</p>
<a id="more"></a>
<h2 id="加速显示"><a href="#加速显示" class="headerlink" title="加速显示"></a>加速显示</h2><p>用显示列表, 把要绘制的语句写进显示列表, 然后只需要在 <code>RenderScene()</code> 中调用显示列表就行了, 如下:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// create one display list</span></span><br><span class="line">GLuint index = glGenLists(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// compile the display list, store a triangle in it</span></span><br><span class="line">glNewList(index, GL_COMPILE);</span><br><span class="line">glBegin(GL_TRIANGLES);</span><br><span class="line">glVertex3fv(v0);</span><br><span class="line">glVertex3fv(v1);</span><br><span class="line">glVertex3fv(v2);</span><br><span class="line">glEnd();</span><br><span class="line">glEndList();</span><br><span class="line"></span><br><span class="line"><span class="comment">// draw the display list</span></span><br><span class="line">glCallList(index);</span><br><span class="line"></span><br><span class="line"><span class="comment">// delete it if it is not used any more</span></span><br><span class="line">glDeleteLists(index, <span class="number">1</span>);</span><br></pre></td></tr></table></figure>
<h2 id="glPushMatrix-…-glPopMatrix-使用说明"><a href="#glPushMatrix-…-glPopMatrix-使用说明" class="headerlink" title="glPushMatrix(); … glPopMatrix();使用说明"></a><code>glPushMatrix(); … glPopMatrix();</code>使用说明</h2><p>这对语句使用目的是保存当前的View Matrix, 以后中间的代码会出现类似 <code>glRotatef; glTranslatef; glScalef;</code> 等改变View Matrix 的语句.</p>
<h2 id="3D世界坐标转换成2D屏幕坐标方法"><a href="#3D世界坐标转换成2D屏幕坐标方法" class="headerlink" title="3D世界坐标转换成2D屏幕坐标方法"></a>3D世界坐标转换成2D屏幕坐标方法</h2><p><code>beginWinCoords()</code>方法3D-&gt;2D, <code>endWinCoords()</code>方法2D-&gt;3D, 这两个方法直接的所有代码都会按2D屏幕绘制, 不会被3D干扰, 也不会有闪烁.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">COpenGLView::beginWinCoords</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glMatrixMode(GL_MODELVIEW);</span><br><span class="line">    glPushMatrix();</span><br><span class="line">    glLoadIdentity();</span><br><span class="line">    glTranslatef(<span class="number">0.0</span>, winHeight - <span class="number">1</span>, <span class="number">0.0</span>);</span><br><span class="line">    glScalef(<span class="number">1.0</span>, <span class="number">-1.0</span>, <span class="number">1.0</span>);</span><br><span class="line">    glMatrixMode(GL_PROJECTION);</span><br><span class="line">    glPushMatrix();</span><br><span class="line">    glLoadIdentity();</span><br><span class="line">    glOrtho(<span class="number">0</span>, winWidth, <span class="number">0</span>, winHeight, <span class="number">-1</span>, <span class="number">1</span>);</span><br><span class="line">    glMatrixMode(GL_MODELVIEW);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">COpenGLView::endWinCoords</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glMatrixMode(GL_PROJECTION);</span><br><span class="line">    glPopMatrix();</span><br><span class="line">    glMatrixMode(GL_MODELVIEW);</span><br><span class="line">    glPopMatrix();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="往2D屏幕上打印TXT"><a href="#往2D屏幕上打印TXT" class="headerlink" title="往2D屏幕上打印TXT"></a>往2D屏幕上打印TXT</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> *m_font;</span><br><span class="line">m_font = (<span class="keyword">void</span> *) GLUT_BITMAP_9_BY_15;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">COpenGLView::printTo2DWindow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">const</span> <span class="keyword">char</span> * s, <span class="keyword">float</span> * color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    beginWinCoords();</span><br><span class="line">    glColor3f(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    glPrint(x, y, s, m_font);</span><br><span class="line">    endWinCoords();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">COpenGLView::glPrint</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">const</span> <span class="keyword">char</span> * s, <span class="keyword">void</span> * font)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glRasterPos2f(x, y);</span><br><span class="line">    <span class="keyword">int</span> len = (<span class="keyword">int</span>) <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        glutBitmapCharacter(font, s[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="绘制带边框Border的图形"><a href="#绘制带边框Border的图形" class="headerlink" title="绘制带边框Border的图形"></a>绘制带边框Border的图形</h2><p>例如绘制带边框的四边形, 方法如下:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">glEnable(GL_POLYGON_OFFSET_FILL);</span><br><span class="line">glPolygonOffset(<span class="number">1.0</span>, <span class="number">1.0</span>);</span><br><span class="line">... ...</span><br><span class="line"></span><br><span class="line"><span class="comment">// draw the polygon as normal</span></span><br><span class="line"><span class="comment">/* e.g. :</span></span><br><span class="line"><span class="comment">    glBegin(GL_POLYGON);</span></span><br><span class="line"><span class="comment">    glVertex3f(x+0.5, y+0.5, z-0.5);</span></span><br><span class="line"><span class="comment">    glVertex3f(x+0.5, y+0.5, z+0.5);</span></span><br><span class="line"><span class="comment">    glVertex3f(x+0.5, y-0.5, z+0.5);</span></span><br><span class="line"><span class="comment">    glVertex3f(x+0.5, y-0.5, z-0.5);</span></span><br><span class="line"><span class="comment">    glEnd();</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">glDisable(GL_POLYGON_OFFSET_FILL);</span><br><span class="line">glColor3v(yourColor); <span class="comment">//Color for your polygon border</span></span><br><span class="line">glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);</span><br><span class="line">... ...</span><br><span class="line"></span><br><span class="line"><span class="comment">// draw the polygon with same procedure, as in above</span></span><br><span class="line">glPolygonMode(GL_FRONT_AND_BACK, GL_FILL);</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>coding</tag>
        <tag>opengl</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenCV sumup</title>
    <url>/2012/09/04/OpenCV-sumup/</url>
    <content><![CDATA[<h2 id="Data-types-of-Mat"><a href="#Data-types-of-Mat" class="headerlink" title="Data types of Mat"></a>Data types of Mat</h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">Name</th>
<th style="text-align:center">Data Type</th>
<th style="text-align:center">Bit Size</th>
<th style="text-align:center">Range</th>
<th style="text-align:center">Other</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>CV_8U</code></td>
<td style="text-align:center">uchar / unsigned char</td>
<td style="text-align:center">8</td>
<td style="text-align:center">0 ~ 255</td>
<td style="text-align:center">Default for image data</td>
</tr>
<tr>
<td style="text-align:center"><code>CV_8S</code></td>
<td style="text-align:center">char</td>
<td style="text-align:center">8</td>
<td style="text-align:center">-128 ~ 127</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><code>CV_16U</code></td>
<td style="text-align:center">ushort / unsigned short int</td>
<td style="text-align:center">16</td>
<td style="text-align:center">0 ~ 65535</td>
<td style="text-align:center">unsigned short</td>
</tr>
<tr>
<td style="text-align:center"><code>CV_16S</code></td>
<td style="text-align:center">short int</td>
<td style="text-align:center">16</td>
<td style="text-align:center">-32768 ~ 32767</td>
<td style="text-align:center">short</td>
</tr>
<tr>
<td style="text-align:center"><code>CV_32S</code></td>
<td style="text-align:center">int</td>
<td style="text-align:center">32</td>
<td style="text-align:center">-2147483648 ~ 2147483647</td>
<td style="text-align:center">long</td>
</tr>
<tr>
<td style="text-align:center"><code>CV_32F</code></td>
<td style="text-align:center">float</td>
<td style="text-align:center">32</td>
<td style="text-align:center">\(1.18\times10^{-38}\) ~ \(3.40\times10^{38}\)</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><code>CV_64F</code></td>
<td style="text-align:center">double</td>
<td style="text-align:center">64</td>
<td style="text-align:center">\(2.23\times10^{-308}\) ~ \(1.79\times10^{308}\)</td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
</div>
<a id="more"></a>
<h2 id="Conversion-between-Mat-and-IplImage"><a href="#Conversion-between-Mat-and-IplImage" class="headerlink" title="Conversion between Mat and IplImage"></a>Conversion between Mat and IplImage</h2><ol>
<li><p><strong><code>IplImage *</code> to <code>Mat</code></strong>:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">IplImage *ipl_img;</span><br><span class="line"><span class="function">Mat <span class="title">mat_img</span><span class="params">(ipl_img)</span></span>;</span><br></pre></td></tr></table></figure></li>
<li><p><strong><code>IplImage</code> to <code>Mat</code></strong>:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">IplImage ipl_img;</span><br><span class="line">Mat mat_img = cv::cvarrToMat(&amp;ipl_img, <span class="literal">true</span>);</span><br></pre></td></tr></table></figure></li>
<li><p><strong><code>Mat</code> to <code>IplImage</code></strong>:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Mat mat_img;</span><br><span class="line">IplImage ipl_img = mat_img;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Access-pixel-intensity-values-of-images"><a href="#Access-pixel-intensity-values-of-images" class="headerlink" title="Access pixel intensity values of images"></a>Access pixel intensity values of images</h2><ol>
<li><p><strong><code>Mat</code></strong> (e.g. <code>Mat img</code>)</p>
<ul>
<li><p><strong>Grayscale</strong> (<code>8UC1</code>)</p>
   <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">uchar intensity = img.at&lt;uchar&gt;(y, x);</span><br></pre></td></tr></table></figure></li>
<li><p><strong>Color image</strong> (<strong>BGR</strong> color ordering, the default format returned by <code>imread</code>)</p>
   <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Vec3b intensity = img.at&lt;Vec3b&gt;(y, x);</span><br><span class="line">uchar blue = intensity.val[<span class="number">0</span>];</span><br><span class="line">uchar green = intensity.val[<span class="number">1</span>];</span><br><span class="line">uchar red = intensity.val[<span class="number">2</span>];</span><br></pre></td></tr></table></figure>
<p>Note: the same method can be used to change pixel intensities.</p>
</li>
</ul>
</li>
<li><p><strong><code>IplImage</code></strong> (e.g. <code>IplImage* img</code>)</p>
<ul>
<li><p><strong>Grayscale</strong></p>
   <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">uchar intensity = CV_IMAGE_ELEM(img, uchar, h, w);</span><br></pre></td></tr></table></figure></li>
<li><p><strong>Color image</strong></p>
   <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">uchar blue = CV_IMAGE_ELEM(img, uchar, y, x*<span class="number">3</span>);</span><br><span class="line">uchar green = CV_IMAGE_ELEM(img, uchar, y, x*<span class="number">3</span>+<span class="number">1</span>);</span><br><span class="line">uchar red = CV_IMAGE_ELEM(img, uchar, y, x*<span class="number">3</span>+<span class="number">2</span>);</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
<h2 id="Content-transform-between-Mat-row-col-and-vector"><a href="#Content-transform-between-Mat-row-col-and-vector" class="headerlink" title="Content transform between Mat row/col and vector"></a>Content transform between Mat row/col and vector</h2><ol>
<li><p><strong><code>Mat</code> row/col to <code>Mat</code> row/col</strong><br>cc: <a href="http://opencv.willowgarage.com/documentation/cpp/basic_structures.html" target="_blank" rel="noopener">http://opencv.willowgarage.com/documentation/cpp/basic_structures.html</a></p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// add 5-th row, multiplied by 3 to the 3rd row</span></span><br><span class="line">M.row(<span class="number">3</span>) = M.row(<span class="number">3</span>) + M.row(<span class="number">5</span>)*<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// now copy 7-th column to the 1-st column</span></span><br><span class="line"><span class="comment">// M.col(1) = M.col(7); // this will not work</span></span><br><span class="line">Mat M1 = M.col(<span class="number">1</span>);</span><br><span class="line">M.col(<span class="number">7</span>).copyTo(M1);</span><br></pre></td></tr></table></figure></li>
<li><p><strong><code>Mat</code> row/col to <code>vector</code></strong></p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">Mat <span class="title">data</span><span class="params">(<span class="number">2</span>, <span class="number">2</span>, CV_32F)</span></span>;</span><br><span class="line">data.at&lt;<span class="keyword">float</span>&gt;(<span class="number">0</span>, <span class="number">0</span>) = <span class="number">1</span>;</span><br><span class="line">data.at&lt;<span class="keyword">float</span>&gt;(<span class="number">0</span>, <span class="number">1</span>) = <span class="number">2</span>;</span><br><span class="line">data.at&lt;<span class="keyword">float</span>&gt;(<span class="number">1</span>, <span class="number">0</span>) = <span class="number">3</span>;</span><br><span class="line">data.at&lt;<span class="keyword">float</span>&gt;(<span class="number">1</span>, <span class="number">1</span>) = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// copy second row data to p</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">float</span>&gt; p;  </span><br><span class="line">data.row(<span class="number">1</span>).copyTo(p);</span><br><span class="line"></span><br><span class="line"><span class="comment">// copy second col data to p2</span></span><br><span class="line">Mat data_transpose;</span><br><span class="line">transpose(data, data_transpose);</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">float</span>&gt; p2;  </span><br><span class="line">data_transpose.row(<span class="number">1</span>).copyTo(p2);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="About-cv-Rect"><a href="#About-cv-Rect" class="headerlink" title="About cv::Rect"></a>About cv::Rect</h2><p>Note that, the top and left boundary of the rectangle are inclusive, while the right and bottom boundaries are not.</p>
<ul>
<li>For <code>cv::Rect rect(x,y,w,h)</code>, its right bottom corner is <code>rect.br() = cv::Point(x+w, y+h)</code>, not <del><code>cv::Point(x+w-1, y+h-1)</code></del>.</li>
<li><p>To loop over an image ROI in OpenCV (where ROI is specified by <code>rect</code> ) is implemented as:</p>
  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y = roi.y; y &lt; roi.y + roi.height; y++) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> x = roi.x; x &lt; roi.x + roi.width; x++) &#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="About-CvBox2D"><a href="#About-CvBox2D" class="headerlink" title="About CvBox2D"></a>About CvBox2D</h2><p>The definition of <code>CvBox2D</code> in OpenCV 2.1 is as follows:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">CvBox2D</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    CvPoint2D32f center; <span class="comment">/* center of the box */</span></span><br><span class="line">    CvSize2D32f size; <span class="comment">/* box width and length */</span></span><br><span class="line">    <span class="keyword">float</span> angle; <span class="comment">/* angle between the horizontal axis and the first side (i.e. length) in radians */</span></span><br><span class="line">&#125;</span><br><span class="line">CvBox2D;</span><br></pre></td></tr></table></figure>
<p>However, there are several inconsistencies when using in practice (i.e. angle), where I found that:</p>
<ol>
<li><code>center</code>: no problem.</li>
<li><code>size</code>, take care of two things:<ul>
<li><code>size</code> is for the <strong>full size</strong>, not <del><strong>the half size</strong></del>. (Extremtly useful for ellipses respresented by <code>CvBox2D</code>).</li>
<li><code>size</code> is consisted of <code>width</code> and <code>height</code>. Note that no perticular garantee for the size relationship amont the two (who is larger), on the other hand, it seems <code>height</code> will be always larger than <code>width</code> obtained by default (need to verify!!!)</li>
</ul>
</li>
<li><p><code>angle</code>, several issues:</p>
<ul>
<li>Type: not <del><strong>radians</strong></del>, <strong>degrees</strong> instead.</li>
<li>Meaning: not <del><strong>angle between the horizontal axis and the first side (i.e. length)</strong></del>, <strong>the angle anticlockwisely from -y($\uparrow$) direction ( see the image plane in the following figure) to the first length edge instead</strong>.</li>
<li><p>Range: can be any size, but with cycle period of <strong>180 (\(\pi\))</strong>, so better to first <strong>normalize to [0, 180)</strong> in practise.</p>
<p> <img src="/2012/09/04/OpenCV-sumup/image_plane.png" alt="Image for showing image plane" title="Image plane"></p>
</li>
</ul>
</li>
</ol>
<h2 id="About-Sobel-operator"><a href="#About-Sobel-operator" class="headerlink" title="About Sobel operator"></a>About Sobel operator</h2><p>When using the following old version:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">CVAPI(<span class="keyword">void</span>) cvSobel( <span class="keyword">const</span> CvArr* src, CvArr* dst, <span class="keyword">int</span> xorder, <span class="keyword">int</span> yorder, <span class="keyword">int</span> aperture_size CV_DEFAULT(<span class="number">3</span>));</span><br></pre></td></tr></table></figure>
<p>, remember that, for <code>dst</code> (need to be created by using <code>cvCreateImage</code>), only <code>IPL_DEPTH_32F</code> can be used, which is different from OpenCV’s documentation.</p>
<p>For new version (together with the old version):</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">CV_EXPORTS_W <span class="keyword">void</span> <span class="title">Sobel</span><span class="params">( InputArray src, OutputArray dst, <span class="keyword">int</span> ddepth, <span class="keyword">int</span> dx, <span class="keyword">int</span> dy, <span class="keyword">int</span> ksize=<span class="number">3</span>, <span class="keyword">double</span> scale=<span class="number">1</span>, <span class="keyword">double</span> delta=<span class="number">0</span>, <span class="keyword">int</span> borderType=BORDER_DEFAULT)</span></span>;</span><br></pre></td></tr></table></figure>
<p>, remember that the following two versions will give the same result</p>
<ul>
<li><p>Old version</p>
  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">IplImage *xsobel, *ysobel;</span><br><span class="line">xsobel = cvCreateImage(cvSize(in-&gt;width, in-&gt;height), IPL_DEPTH_32F, <span class="number">1</span> );</span><br><span class="line">ysobel = cvCreateImage(cvSize(in-&gt;width, in-&gt;height), IPL_DEPTH_32F, <span class="number">1</span> );</span><br><span class="line">cvSobel(img_gray, xsobel, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">cvSobel(img_gray, ysobel, <span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure></li>
<li><p>New version</p>
  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Mat xsobel, ysobel;</span><br><span class="line">Sobel(img_gray, xsobel, CV_32F, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">0</span>, BORDER_REFLECT);</span><br><span class="line">Sobel(img_gray, ysobel, CV_32F, <span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">0</span>, BORDER_REFLECT);</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <tags>
        <tag>coding</tag>
        <tag>opencv</tag>
      </tags>
  </entry>
  <entry>
    <title>Track memory leaks in VS</title>
    <url>/2015/06/23/Track-memory-leaks-in-VS/</url>
    <content><![CDATA[<p>In VS, memory leaks can be detected by using C Run-Time (CRT) libraries [1]. A typical example of enabling this feature can be like:</p>
<a id="more"></a>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* the #include statements must follow the order shown here */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRTDBG_MAP_ALLOC <span class="comment">// show file name and line number when detecting leaked memory</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;crtdbg.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* make it work also for c++ new operator, together with malloc */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _DEBUG</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> DBG_NEW</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBG_NEW new ( _NORMAL_BLOCK , __FILE__ , __LINE__ )</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> new DBG_NEW</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span>  <span class="comment">// _DEBUG</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">/* these two lines will report all memory leaks after application exits */</span></span><br><span class="line">	_CrtSetDbgFlag(_CRTDBG_ALLOC_MEM_DF | _CRTDBG_LEAK_CHECK_DF);	<span class="comment">// turn on leak checking flag</span></span><br><span class="line">	_CrtSetReportMode(_CRT_ERROR, _CRTDBG_MODE_DEBUG);				<span class="comment">// set report to the Output window</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">/* set startint point that want to check memory leak */</span></span><br><span class="line">	_CrtMemState s1, s2, s3;</span><br><span class="line">	_CrtMemCheckpoint(&amp;s1);</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* ---your real code goes here--- */</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> *test = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];					<span class="comment">// line 26</span></span><br><span class="line">		<span class="keyword">int</span> *test2 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">20</span>];					<span class="comment">// line 27</span></span><br><span class="line">		<span class="keyword">int</span> *test3;</span><br><span class="line">		test3 = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>) * <span class="number">30</span>);	<span class="comment">// line 29</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* set ending point that want to check memory leak */</span></span><br><span class="line">	_CrtMemCheckpoint(&amp;s2);</span><br><span class="line">	<span class="keyword">if</span> (_CrtMemDifference(&amp;s3, &amp;s1, &amp;s2))&#123; <span class="comment">// only report memory leak if happens indeed</span></span><br><span class="line">		_CrtMemDumpStatistics(&amp;s3);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>This will report the memory leaks in the <strong>Output Window</strong> as follows:<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span> bytes in <span class="number">0</span> Free Blocks.</span><br><span class="line"><span class="number">240</span> bytes in <span class="number">3</span> Normal Blocks.</span><br><span class="line"><span class="number">0</span> bytes in <span class="number">0</span> CRT Blocks.</span><br><span class="line"><span class="number">0</span> bytes in <span class="number">0</span> Ignore Blocks.</span><br><span class="line"><span class="number">0</span> bytes in <span class="number">0</span> Client Blocks.</span><br><span class="line">Largest number used: <span class="number">240</span> bytes.</span><br><span class="line">Total allocations: <span class="number">240</span> bytes.</span><br><span class="line">-----------------------------------</span><br><span class="line">Detected memory leaks!</span><br><span class="line">Dumping objects -&gt;</span><br><span class="line">..\test\main.cpp(<span class="number">29</span>) : &#123;<span class="number">415</span>&#125; normal block at <span class="number">0x00A8FB60</span>, <span class="number">120</span> bytes <span class="keyword">long</span>.</span><br><span class="line"> Data: &lt;                &gt; CD CD CD CD CD CD CD CD CD CD CD CD CD CD CD CD </span><br><span class="line">..\test\main.cpp(<span class="number">27</span>) : &#123;<span class="number">414</span>&#125; normal block at <span class="number">0x00A8FAD0</span>, <span class="number">80</span> bytes <span class="keyword">long</span>.</span><br><span class="line"> Data: &lt;                &gt; CD CD CD CD CD CD CD CD CD CD CD CD CD CD CD CD </span><br><span class="line">..\test\main.cpp(<span class="number">26</span>) : &#123;<span class="number">413</span>&#125; normal block at <span class="number">0x00A8FA68</span>, <span class="number">40</span> bytes <span class="keyword">long</span>.</span><br><span class="line"> Data: &lt;                &gt; CD CD CD CD CD CD CD CD CD CD CD CD CD CD CD CD </span><br><span class="line">Object dump complete.</span><br></pre></td></tr></table></figure></p>
<p>Based on the memory leak report, we can easily identify where memory leaks happens (in this case, <strong>line 26/27/29</strong>) and how bad they are (e.g. <strong>leaking 120 bytes in line 29</strong>). </p>
<p>Note that:</p>
<ol>
<li><strong>The second part of the memory leak report that contains file names and line numbers is only available after the whole application exits</strong>.</li>
<li>To track memory leaks before application exit, we have to set starting and ending points in code, as we did in the above example. By moving the starting and ending points around, it is flexible for us to track the exact code that we’re focused on. Sample memory leak report can be seen from the first part of above report.</li>
</ol>
<h4 id="References"><a href="#References" class="headerlink" title="References"></a>References</h4><p>[1] Finding Memory Leaks Using the CRT Library: <a href="https://msdn.microsoft.com/en-us/library/x98tx3cf.aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/en-us/library/x98tx3cf.aspx</a></p>
]]></content>
      <tags>
        <tag>coding</tag>
      </tags>
  </entry>
  <entry>
    <title>Research Topics Related Useful Links</title>
    <url>/2011/11/15/Research-Topics-Related-Useful-Links/</url>
    <content><![CDATA[<h2 id="3D-face-facial-expressions-databases"><a href="#3D-face-facial-expressions-databases" class="headerlink" title="3D face (facial expressions) databases"></a>3D face (facial expressions) databases</h2><ul>
<li><a href="http://bosphorus.ee.boun.edu.tr/" target="_blank" rel="noopener">Bosphorus database (face &amp; hand)</a></li>
<li><a href="http://faces.cs.unibas.ch/bfm/main.php" target="_blank" rel="noopener">Morphace</a></li>
<li><a href="http://www.cs.binghamton.edu/~lijun/Research/3DFE/3DFE_Analysis.html" target="_blank" rel="noopener">Analyzing facial expressions in three dimensional space</a></li>
<li><a href="http://www.frav.es/research/facerecognition/" target="_blank" rel="noopener">Face recognition</a></li>
<li><a href="http://www.cbsr.ia.ac.cn/english/3DFace%20Databases.asp" target="_blank" rel="noopener">CASIA 3D face database</a></li>
<li><a href="http://www.bjut.edu.cn/sci/multimedia/mul-lab/3dface/face_database.htm" target="_blank" rel="noopener">BJUT-3D face database</a></li>
</ul>
<a id="more"></a>
<h2 id="Human-detection"><a href="#Human-detection" class="headerlink" title="Human detection"></a>Human detection</h2><ul>
<li>Dataset and ground-truth<ul>
<li><a href="http://www.milanton.de/data.html" target="_blank" rel="noopener">PETS 2009 | TUD | EPFL</a></li>
</ul>
</li>
<li>Papers:<ul>
<li><a href="http://vision.ucsd.edu/~pdollar/research.html#ObjectDetection" target="_blank" rel="noopener">Piotr Dollár’s work</a><ul>
<li>09 BMVC - Integral Channel Features</li>
<li>10 BMVC - The Fastest Pedestrian Detector in the West</li>
<li>12 ECCV - Crosstalk Cascades for Frame-Rate Pedestrian Detection</li>
<li>12 PAMI - Pedestrian Detection: An Evaluation of the State of the Art</li>
<li>14 PAMI - Fast Feature Pyramids for Object Detection</li>
</ul>
</li>
</ul>
</li>
<li>Other:<ul>
<li><a href="http://rodrigob.github.io/" target="_blank" rel="noopener">12 CVPR - Pedestrian detection at 100 frames per second</a></li>
</ul>
</li>
</ul>
<h2 id="Human-Pose-Estimation"><a href="#Human-Pose-Estimation" class="headerlink" title="Human Pose Estimation"></a>Human Pose Estimation</h2><ul>
<li>Dataset and Benchmark<ul>
<li><a href="http://human-pose.mpi-inf.mpg.de/" target="_blank" rel="noopener">MPII Human Pose Dataset</a></li>
</ul>
</li>
<li>Papers<ul>
<li><a href="http://users.cecs.anu.edu.au/~yili/humanpose.html" target="_blank" rel="noopener">13 CVPR - Beyond Physical Connections: Tree Models in Human Pose Estimation</a>: with MATLAB code</li>
</ul>
</li>
</ul>
<h2 id="Object-tracking"><a href="#Object-tracking" class="headerlink" title="Object tracking"></a>Object tracking</h2><ul>
<li>Dataset and ground-truth<ul>
<li><a href="http://www.milanton.de/data.html" target="_blank" rel="noopener">PETS 2009 | TUD-Stadtmitte | TUD-Campus | TUD-Crossing | ETH-Person</a></li>
</ul>
</li>
<li><p>Single camera tracking:</p>
<ul>
<li><p>Online object tracking:</p>
<ul>
<li><a href="http://cvlab.hanyang.ac.kr/tracker_benchmark/index.html" target="_blank" rel="noopener">Visual Tracker Benchmark</a></li>
<li><a href="http://www.votchallenge.net/" target="_blank" rel="noopener">Visual Object Tracking (VOT) challenge</a></li>
<li><a href="http://visual-tracking.net/" target="_blank" rel="noopener">13 CVPR - Online Object Tracking: A Benchmark</a></li>
<li><p><a href="http://tracking.cs.princeton.edu/eval.php" target="_blank" rel="noopener">13 ICCV - Tracking Revisited using RGBD Camera: Unified Benchmark and Baselines</a></p>
<blockquote>
<p>Deep Learning based trackers:</p>
<ul>
<li>15 ICML - Online Tracking by Learning Discriminative Saliency Map with Convolutional Neural Network</li>
<li>15 arXiv - Learning Multi-Domain Convolutional Neural Networks for Visual Tracking</li>
</ul>
</blockquote>
</li>
</ul>
</li>
<li><p>Tracking-by-detection/data-association:</p>
<ul>
<li><a href="http://www.milanton.de/contracking" target="_blank" rel="noopener">14 PAMI - Continuous Energy Minimization for Multi-Target Tracking</a>: with MATLAB code</li>
<li><a href="https://lrs.icg.tugraz.at/download#motog" target="_blank" rel="noopener">14 CVPR - Occlusion Geodesics for Online Multi-Object Tracking</a>: with MATLAB code</li>
<li><a href="http://www.milanton.de/dctracking/" target="_blank" rel="noopener">12 CVPR - Discrete-Continuous Energy Minimization for Multi-Target Tracking</a>: with MATLAB code</li>
<li><a href="http://iris.usc.edu/Outlines/papers/2012/yang-nevatia-cvpr-1-2012.pdf" target="_blank" rel="noopener">12 CVPR - Multi-Target Tracking by Online Learning of Non-linear Motion Patterns and Robust Appearance Models</a></li>
<li><a href="http://cs-people.bu.edu/jmzhang/tracker_hierarchy/Tracker_Hierarchy.htm" target="_blank" rel="noopener">12 AVSS - Online Multi-Person Tracking by Tracker Hierarchy</a>: with C++ code</li>
<li><a href="http://people.csail.mit.edu/hpirsiav/papers/tracking_cvpr11.pdf" target="_blank" rel="noopener">11 CVPR - Globally-Optimal Greedy Algorithms for Tracking a Variable Number of Objects</a>: with MATLAB code</li>
</ul>
</li>
</ul>
</li>
<li>Multiple camera tracking:<ul>
<li>Metrics and ground-truth labeling: <a href="http://www.milanton.de/files/cvprws2013/cvprws2013-anton.pdf" target="_blank" rel="noopener">13 CVPRW - Challenges of Ground Truth Evaluation of Multi-Target Tracking</a></li>
<li>Papers:<ul>
<li><a href="http://cvlab.epfl.ch/research/body/surv" target="_blank" rel="noopener">Tracking People using Multiple Cameras</a></li>
<li><a href="http://synesis.ru/en/surveillance/contents/mctintro" target="_blank" rel="noopener">The future of video surveillance: multiple camera tracking</a></li>
<li><a href="http://www.sentinelave.com/ave.html" target="_blank" rel="noopener">AVE Video Fusion</a></li>
<li><a href="http://www.cs.cmu.edu/~vsam/OldVsamWeb/vsamhome.html" target="_blank" rel="noopener">Video Surveillance and Monitoring (VSAM)</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="Saliency-detection"><a href="#Saliency-detection" class="headerlink" title="Saliency detection"></a>Saliency detection</h2><ul>
<li><a href="http://cs-people.bu.edu/jmzhang/fastmbd.html" target="_blank" rel="noopener">15 ICCV - Minimum Barrier Salient Object Detection at 80 FPS</a>: with exe</li>
</ul>
<h2 id="Image-feature-detection-and-description-1"><a href="#Image-feature-detection-and-description-1" class="headerlink" title="Image feature detection and description 1"></a>Image feature detection and description <sup><a href="#fn_1" id="reffn_1">1</a></sup></h2><h3 id="Keypoint-detectors"><a href="#Keypoint-detectors" class="headerlink" title="Keypoint detectors"></a>Keypoint detectors</h3><ul>
<li><a href="http://www.edwardrosten.com/work/fast.html" target="_blank" rel="noopener">FAST</a>: high-speed corner detector, in OpenCV</li>
<li><a href="http://www6.in.tum.de/Main/ResearchAgast" target="_blank" rel="noopener">AGAST</a>: even faster than the FAST. A multi-scale version of this method is used for the BRISK descriptor (10 ECCV).</li>
</ul>
<h3 id="Binary-descriptors"><a href="#Binary-descriptors" class="headerlink" title="Binary descriptors"></a>Binary descriptors</h3><ul>
<li><a href="http://cvlab.epfl.ch/research/detect/brief" target="_blank" rel="noopener">BRIEF</a> – fast and accurate interest point descriptor (not invariant to rotations and scale)</li>
<li><a href="http://docs.opencv.org/modules/features2d/doc/feature_detection_and_description.html" target="_blank" rel="noopener">ORB</a> – Oriented-Brief descriptor (invariant to rotations, but not scale), in OpenCV</li>
<li><a href="http://docs.opencv.org/modules/features2d/doc/feature_detection_and_description.html" target="_blank" rel="noopener">BRISK</a> – efficient binary descriptor invariant to rotations and scale, in OpenCV</li>
<li><a href="http://docs.opencv.org/modules/features2d/doc/feature_detection_and_description.html" target="_blank" rel="noopener">FREAK</a> – faster than BRISK (invariant to rotations and scale), in OpenCV</li>
</ul>
<h3 id="SIFT-amp-SURF-Implementations"><a href="#SIFT-amp-SURF-Implementations" class="headerlink" title="SIFT &amp; SURF Implementations"></a>SIFT &amp; SURF Implementations</h3><ul>
<li>SIFT: <a href="http://www.cs.ubc.ca/~lowe/keypoints/" target="_blank" rel="noopener">Original code by David Lowe</a> |  <a href="http://docs.opencv.org/modules/nonfree/doc/feature_detection.html" target="_blank" rel="noopener">OpenCV</a> | <a href="http://robwhess.github.com/opensift/" target="_blank" rel="noopener">OpenSIFT</a> | <a href="http://cs.unc.edu/~ccwu/siftgpu/" target="_blank" rel="noopener">GPU</a></li>
<li>SURF: <a href="http://www.vision.ee.ethz.ch/~surf/index.html" target="_blank" rel="noopener">Herbert Bay’s code</a> | <a href="http://docs.opencv.org/modules/nonfree/doc/feature_detection.html" target="_blank" rel="noopener">OpenCV</a> | <a href="(https://www.mpi-inf.mpg.de/departments/computer-vision-and-multimodal-computing/research/object-recognition-and-scene-understanding/cuda-surf-a-real-time-implementation-for-surf/">CUDA</a></li>
</ul>
<h3 id="Other-Local-Feature-Detectors-and-Descriptors"><a href="#Other-Local-Feature-Detectors-and-Descriptors" class="headerlink" title="Other Local Feature Detectors and Descriptors"></a>Other Local Feature Detectors and Descriptors</h3><ul>
<li><a href="http://www.robots.ox.ac.uk/~vgg/research/affine/" target="_blank" rel="noopener">VGG Affine Covariant features</a> – Oxford code for various affine covariant feature detectors and descriptors</li>
<li><a href="http://zhwang.me/publication/liop/index.html" target="_blank" rel="noopener">LIOP descriptor</a> – Local Intensity Order Pattern (LIOP) descriptor</li>
<li><a href="http://www.cs.cornell.edu/projects/symfeat/" target="_blank" rel="noopener">Local Symmetry Features</a> – matching of local symmetry features under large variations in lighting, age, and genTocHereg style</li>
</ul>
<h3 id="Global-Image-Descriptors"><a href="#Global-Image-Descriptors" class="headerlink" title="Global Image Descriptors"></a>Global Image Descriptors</h3><ul>
<li>GIST: <a href="http://people.csail.mit.edu/torralba/code/spatialenvelope/" target="_blank" rel="noopener">MATLAB</a> | <a href="http://lear.inrialpes.fr/src/lear_gist-1.2.tgz" target="_blank" rel="noopener">C++</a> (Lear’s version)</li>
<li><a href="https://sites.google.com/site/wujx2001/home/libhik" target="_blank" rel="noopener">CENTRIST</a> (in <code>libHIK</code>) – global visual descriptor for scene categorization and object detection. Another version can be found <a href="http://dovgalecs.com/blog/centrist-visual-descriptor-for-indoors-localization/" target="_blank" rel="noopener">here</a>.</li>
</ul>
<h2 id="Image-deblur"><a href="#Image-deblur" class="headerlink" title="Image deblur"></a>Image deblur</h2><ul>
<li>Overview by cwang: <a href="http://i.cs.hku.hk/~cwang/deblur/index.html" target="_blank" rel="noopener">Deblur-related Materials</a></li>
</ul>
<h2 id="Image-Dehaze"><a href="#Image-Dehaze" class="headerlink" title="Image Dehaze"></a>Image Dehaze</h2><ul>
<li><a href="http://research.microsoft.com/en-us/um/people/kahe/cvpr09/index.html" target="_blank" rel="noopener">09 CVPR - Single Image Haze Removal using Dark Channel Prior</a> | <a href="http://blog.csdn.net/polly_yang/article/details/48933383" target="_blank" rel="noopener">Blog</a></li>
</ul>
<h2 id="Steoro-matching"><a href="#Steoro-matching" class="headerlink" title="Steoro matching"></a>Steoro matching</h2><ul>
<li><a href="http://www.cs.cityu.edu.hk/~qiyang/publications/cvpr-12/pami/" target="_blank" rel="noopener">14 PAMI - Stereo Matching Using Tree Filtering</a></li>
<li><a href="http://cs.brown.edu/~pff/bp/index.html" target="_blank" rel="noopener">04 CVPR - Eﬃcient Belief Propagation for Early Vision</a></li>
</ul>
<h2 id="Filtering"><a href="#Filtering" class="headerlink" title="Filtering"></a>Filtering</h2><ul>
<li>Bilateral Filtering: <a href="http://www.cs.cityu.edu.hk/~qiyang/publications/hebf/" target="_blank" rel="noopener">14 PAMI - Hardware-Efficient Bilateral Filtering for Stereo Matching</a> (integrated)</li>
</ul>
<hr>
<blockquote id="fn_1">
<sup>1</sup>. Source page of SYSU: <a href="http://gitl.sysu.edu.cn/downloads" target="_blank" rel="noopener">http://gitl.sysu.edu.cn/downloads</a>.<a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>research</tag>
      </tags>
  </entry>
  <entry>
    <title>Running Python via Anaconda</title>
    <url>/2013/10/05/Running-Python-via-Anaconda/</url>
    <content><![CDATA[<h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><ol>
<li>Install <a href="https://www.anaconda.com/products/individual" target="_blank" rel="noopener">Anaconda</a>. (e.g. by default in <code>C:\Users\tommyhu\anaconda3</code>)</li>
<li>Add the following paths to <strong>Path</strong>:<ul>
<li><code>C:\Users\tommyhu\anaconda3</code></li>
<li><code>C:\Users\tommyhu\anaconda3\Scripts</code></li>
</ul>
</li>
</ol>
<a id="more"></a>
<h1 id="Add-libs"><a href="#Add-libs" class="headerlink" title="Add libs"></a>Add libs</h1><h2 id="Online-install"><a href="#Online-install" class="headerlink" title="Online install"></a>Online install</h2><h3 id="Install-directly"><a href="#Install-directly" class="headerlink" title="Install directly"></a>Install directly</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda install xxx</span><br></pre></td></tr></table></figure>
<h3 id="Via-Anaconda-cloud"><a href="#Via-Anaconda-cloud" class="headerlink" title="Via Anaconda cloud"></a>Via Anaconda cloud</h3><ol>
<li>Search the lib on <a href="https://anaconda.org/" target="_blank" rel="noopener">Anaconda Cloud</a></li>
<li>Use the command listed on the lib page<blockquote>
<p>Take OpenCV as an example, run </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda install -c conda-forge opencv</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ol>
<h2 id="Offline-install"><a href="#Offline-install" class="headerlink" title="Offline install"></a>Offline install</h2><h3 id="tar-bz2-type1"><a href="#tar-bz2-type1" class="headerlink" title="tar.bz2 type1"></a><code>tar.bz2</code> type<sup><a href="#fn_1" id="reffn_1">1</a></sup></h3><ol>
<li>Download lib of type <code>tar.bz2</code> (e.g. search <a href="https://anaconda.org/" target="_blank" rel="noopener">Anaconda Cloud</a>)<blockquote>
<p>Note: download the lib with correct PC versions, including</p>
<ul>
<li><strong>Python</strong> (e.g. lib name contains like <code>py37</code>), which can be checked on PC via cmd  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python</span><br></pre></td></tr></table></figure></li>
<li><strong>CUDA</strong> (e.g. lib name contains like <code>cuda92</code>), which can be checked on PC via cmd  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvcc --version</span><br></pre></td></tr></table></figure></li>
</ul>
</blockquote>
</li>
<li>Install in cmd   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda install --use-local xxx.tar.bz2</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="whl-type"><a href="#whl-type" class="headerlink" title="whl type"></a><code>whl</code> type</h3><blockquote>
<p>Some <code>whl</code> libs are available at <a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/" target="_blank" rel="noopener">Unofficial Windows Binaries for Python Extension Packages</a> | <a href="https://pypi.org/simple/dlib/" target="_blank" rel="noopener">dlib</a>.</p>
</blockquote>
<ol>
<li>Download lib of type <code>whl</code> (must match local Python and CUDA versions as above)</li>
<li>Install in cmd   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install xx.whl</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="From-source"><a href="#From-source" class="headerlink" title="From source"></a>From source</h3><p>Take <strong>dlib</strong> as an example</p>
<ol>
<li>Download its source <a href="https://pypi.org/project/dlib/" target="_blank" rel="noopener">here</a> (e.g. <strong>dlib-19.19.0.tar.gz</strong>).</li>
<li>Extract it and run cmd (may need to run twice) in the folder   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python setup.py install</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h1><ol>
<li>Run <strong>Anaconda Command Prompt</strong> or <strong>cmd</strong> (with <code>activate</code> command).</li>
<li>Change to the folder that contains the Python file that you want (assume <strong>xxx.py</strong>) to run.</li>
<li>Run   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python xxx.py</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="Case-study"><a href="#Case-study" class="headerlink" title="Case study"></a>Case study</h1><p>With Anaconda-3 (integrated with Python v3.7), installing <strong>OpenCV+CUDA+CUDNN+Torch</strong> on my laptop (with NVIDIA GeForce GTX 1050) will be like:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda install --use-local <span class="string">"&lt;_lib_folder_&gt;\opencv-3.4.2-py37h6fd60c2_0.tar.bz2"</span></span><br><span class="line">conda install --use-local <span class="string">"&lt;_lib_folder_&gt;\py-opencv-3.4.2-py37hc319ecb_0.tar.bz2"</span></span><br><span class="line">conda install --use-local <span class="string">"&lt;_lib_folder_&gt;\libopencv-3.4.2-h20b85fd_0.tar.bz2"</span></span><br><span class="line">conda install --use-local <span class="string">"&lt;_lib_folder_&gt;\cudatoolkit-10.0.130-0.tar.bz2"</span></span><br><span class="line">conda install --use-local <span class="string">"&lt;_lib_folder_&gt;\cudnn-7.6.5-cuda10.0_0.tar.bz2"</span></span><br><span class="line">conda install --use-local <span class="string">"&lt;_lib_folder_&gt;\pytorch-1.2.0-py3.7_cuda100_cudnn7_1.tar.bz2"</span></span><br><span class="line">conda install --use-local <span class="string">"&lt;_lib_folder_&gt;\pytorch-gpu-1.3.1-0.tar.bz2"</span></span><br><span class="line">conda install --use-local <span class="string">"&lt;_lib_folder_&gt;\torchvision-0.4.0-py37_cu100.tar.bz2"</span></span><br></pre></td></tr></table></figure></p>
<blockquote id="fn_1">
<sup>1</sup>. <a href="https://blog.csdn.net/qq_33039859/article/details/80785535" target="_blank" rel="noopener">Conda install 本地压缩包文件tar.bz2</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>setup</tag>
        <tag>coding</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Sorting algorithms: implementation and comparison</title>
    <url>/2013/08/29/Sorting-algorithms-implementation-and-comparison/</url>
    <content><![CDATA[<h5 id="Implementation"><a href="#Implementation" class="headerlink" title="Implementation:"></a>Implementation:</h5><p>Implementation of 10 sorting algorithms can be found <a href="https://gitlab.com/herohuyongtao/files-public/-/blob/master/files/cplusplus/Sorting.cpp" target="_blank" rel="noopener">here</a>, including</p>
<ol>
<li>SelectionSort</li>
<li>InsertSort</li>
<li>ShellSort</li>
<li>BubbleSort</li>
<li>HeapSort</li>
<li>QuickSort</li>
<li>MergeSort</li>
<li>CountingSort</li>
<li>RadixSort</li>
<li>BucketSort</li>
</ol>
<a id="more"></a>
<p>Animation for above soring algorithms can be found <a href="http://www.cs.usfca.edu/~galles/visualization/Algorithms.html" target="_blank" rel="noopener">here</a>.</p>
<h5 id="Comparison"><a href="#Comparison" class="headerlink" title="Comparison:"></a>Comparison:</h5><div class="table-container">
<table>
<thead>
<tr>
<th>Algorithm</th>
<th>Average Time</th>
<th>Worst Time</th>
<th>Best Time</th>
<th>Stable?</th>
<th>Auxiliary Space</th>
<th>Constraints</th>
</tr>
</thead>
<tbody>
<tr>
<td>SelectionSort</td>
<td>$O(n^2)$</td>
<td>$O(n^2)$</td>
<td>$O(n^2)$</td>
<td>$\checkmark$</td>
<td>$C$</td>
<td></td>
</tr>
<tr>
<td>InsertSort</td>
<td>$O(n^2)$</td>
<td>$O(n^2)$</td>
<td>$O(n)$</td>
<td>$\checkmark$</td>
<td>$C$</td>
<td></td>
</tr>
<tr>
<td>ShellSort</td>
<td><em>N/A</em></td>
<td><em>N/A</em></td>
<td><em>N/A</em></td>
<td>x</td>
<td>$C$</td>
<td></td>
</tr>
<tr>
<td>BubbleSort</td>
<td>$O(n^2)$</td>
<td>$O(n^2)$</td>
<td>$O(n^2)$</td>
<td>$\checkmark$</td>
<td>$C$</td>
<td></td>
</tr>
<tr>
<td>HeapSort</td>
<td>$O(nlogn)$</td>
<td>$O(nlogn)$</td>
<td>$O(nlogn)$</td>
<td>x</td>
<td>$C$</td>
<td></td>
</tr>
<tr>
<td>QuickSort</td>
<td>$O(nlogn)$</td>
<td>$O(n^2)$</td>
<td>$O(nlogn)$</td>
<td>x</td>
<td>$C$</td>
<td></td>
</tr>
<tr>
<td>MergeSort</td>
<td>$O(nlogn)$</td>
<td>$O(nlogn)$</td>
<td>$O(nlogn)$</td>
<td>$\checkmark$</td>
<td>$n$</td>
<td></td>
</tr>
<tr>
<td>CountingSort</td>
<td>$O(n+k)$</td>
<td>$O(n+k)$</td>
<td>$O(n+k)$</td>
<td>$\checkmark$</td>
<td>$n+k+C$</td>
<td>non-negative and within some range</td>
</tr>
<tr>
<td>RadixSort</td>
<td>$O(n)$</td>
<td>$O(n)$</td>
<td>$O(n)$</td>
<td>$\checkmark$</td>
<td>$n+k+C$</td>
<td>non-negative</td>
</tr>
<tr>
<td>BucketSort</td>
<td>$O(n)$</td>
<td>$O(n)$</td>
<td>$O(n)$</td>
<td>$\checkmark$</td>
<td>$2n+C$</td>
<td>elements distribute in buckets evenly and independent</td>
</tr>
</tbody>
</table>
</div>
<p>Note: $C$ is a small constant; $k$ is the max element; $n$ is the number of total elements. <em>N/A</em> means it depends on selection of increment value.</p>
]]></content>
      <tags>
        <tag>coding</tag>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>Run SH/shell-script in Win10</title>
    <url>/2020/03/10/Run-SH-shell-script-in-Win10/</url>
    <content><![CDATA[<h1 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h1><p>Install <strong>Windows Subsystem for Linux (WSL)</strong></p>
<ol>
<li><strong>Settings</strong> -&gt; <strong>Turn Windows features on or off</strong> -&gt; check on <strong>Windows Subsystem for Linux</strong> -&gt; Reboot.</li>
<li><p>If has error <strong>Windows Subsystem for Linux has no installed distributions</strong>, run in cmd</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lxrun /install</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Note: in Windows 10 1803 and later, <code>lxrun</code> is deprecated, will need to install it via Windows App Store following the link showing on the screen.</p>
</blockquote>
</li>
</ol>
<a id="more"></a>
<h1 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h1><p>Run cmd <code>sh</code> file folder<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash xxx.sh</span><br></pre></td></tr></table></figure></p>
]]></content>
      <tags>
        <tag>setup</tag>
        <tag>sh</tag>
      </tags>
  </entry>
  <entry>
    <title>Using MSXML to read/write XML files</title>
    <url>/2012/07/11/Using-MSXML-to-read-write-XML-files/</url>
    <content><![CDATA[<p>In <a href="https://blog-tommyhu.github.io/2012/06/18/Using-Libxml2-library-in-VC/">previous post</a>, I talked about how to use <a href="http://www.xmlsoft.org/" target="_blank" rel="noopener">Libxml2</a> library to read/write xml files. Actually, there are many <a href="http://lars.ruoff.free.fr/xmlcpp/" target="_blank" rel="noopener">Free C or C++ XML Parser Libraries</a>. From now no, I will turn to <a href="http://msdn.microsoft.com/en-us/library/ms763742.aspx" target="_blank" rel="noopener">MSXML</a> instead because of Libxml2’s poor support for Windows-x64 systems.</p>
<p>In the followings, I will show how to use MSXML to read/write xml files.</p>
<a id="more"></a>
<h2 id="Pre-work"><a href="#Pre-work" class="headerlink" title="Pre-work:"></a>Pre-work:</h2><ul>
<li>To install MSXML is quite easy, you just need to install Windows SDK, where it is integrated.</li>
<li>Add <code>#import &lt;msxml3.dll&gt;</code> to the beginning part of your code.</li>
<li><p>Use the following xml files as an example:</p>
  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Appearance_model</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Feature</span> <span class="attr">index</span>=<span class="string">"6"</span> <span class="attr">weight</span>=<span class="string">"0.017783"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Feature</span> <span class="attr">index</span>=<span class="string">"10"</span> <span class="attr">weight</span>=<span class="string">"0.003343"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Appearance_model</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Read-from-xml-files"><a href="#Read-from-xml-files" class="headerlink" title="Read from xml files:"></a>Read from xml files:</h2><p>For example, we want to load the above xml data to a <code>vector&lt;pair&lt;int, float&gt;&gt;</code> (<code>name</code> to a string), do like the following code, where input parameter gives the path of above xml file.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">vector&lt;pair&lt;int, float&gt;&gt; load_appearance_model_from_xml(string file, string &amp; name)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">float</span>&gt;&gt; app_model;</span><br><span class="line"></span><br><span class="line">    CoInitialize(<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//read XML</span></span><br><span class="line">    MSXML2::IXMLDOMDocumentPtr spXMLDoc;</span><br><span class="line">    spXMLDoc.CreateInstance(__uuidof(MSXML2::DOMDocument30));</span><br><span class="line">    spXMLDoc-&gt;load(file.c_str());</span><br><span class="line"></span><br><span class="line">    MSXML2::IXMLDOMElementPtr spRoot = spXMLDoc-&gt;documentElement; <span class="comment">//root node</span></span><br><span class="line">    <span class="keyword">if</span> (spRoot-&gt;nodeName == (<span class="keyword">_bstr_t</span>)<span class="string">"Appearance_model"</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        MSXML2::IXMLDOMNodeListPtr spNodeList = spRoot-&gt;childNodes;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// traverse child's nodes</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">long</span> i = <span class="number">0</span>; i != spNodeList-&gt;length; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            MSXML2::IXMLDOMNodePtr spNode = spNodeList-&gt;item[i];</span><br><span class="line">            <span class="keyword">if</span> (spNode-&gt;nodeName == (<span class="keyword">_bstr_t</span>)<span class="string">"name"</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                name = (<span class="keyword">char</span> *) spNode-&gt;Gettext();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (spNode-&gt;nodeName == (<span class="keyword">_bstr_t</span>)<span class="string">"Feature"</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> index;</span><br><span class="line">                <span class="keyword">float</span> weight;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// traverse node's attributes</span></span><br><span class="line">                MSXML2::IXMLDOMNamedNodeMapPtr spNameNodeMap = spNode-&gt;attributes;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">long</span> j = <span class="number">0</span>; j != spNameNodeMap-&gt;length; ++j)</span><br><span class="line">                &#123;</span><br><span class="line">                    MSXML2::IXMLDOMNodePtr spNode2 = spNameNodeMap-&gt;item[j];</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (spNode2-&gt;nodeName == (<span class="keyword">_bstr_t</span>)<span class="string">"index"</span>)</span><br><span class="line">                        index = (<span class="keyword">int</span>)spNode2-&gt;nodeValue;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (spNode2-&gt;nodeName == (<span class="keyword">_bstr_t</span>)<span class="string">"weight"</span>)</span><br><span class="line">                        weight = (<span class="keyword">float</span>)spNode2-&gt;nodeValue;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                app_model.push_back(make_pair(index, weight));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    spRoot.Release();</span><br><span class="line">    spXMLDoc.Release();</span><br><span class="line">    CoUninitialize();    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> app_model;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Write-to-xml-files"><a href="#Write-to-xml-files" class="headerlink" title="Write to xml files:"></a>Write to xml files:</h2><p>Do like the following code, where input parameter file gives the file name that you want to save.</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write_appearance_model_to_xml</span><span class="params">(<span class="built_in">string</span> file, <span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">float</span>&gt;&gt; app_model, <span class="built_in">string</span> name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CoInitialize(<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//read XML</span></span><br><span class="line">    MSXML2::IXMLDOMDocumentPtr spXMLDoc;</span><br><span class="line">    MSXML2::IXMLDOMElementPtr  spRoot;</span><br><span class="line">    HRESULT hr = spXMLDoc.CreateInstance(__uuidof(MSXML2::DOMDocument30));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!SUCCEEDED(hr))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Unable to create xml file.\n"</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        spXMLDoc-&gt;raw_createElement((<span class="keyword">_bstr_t</span>)<span class="string">"Appearance_model"</span>, &amp;spRoot);</span><br><span class="line">        spXMLDoc-&gt;raw_appendChild(spRoot, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">        MSXML2::IXMLDOMElementPtr childNode2;</span><br><span class="line">        spXMLDoc-&gt;raw_createElement((<span class="keyword">_bstr_t</span>)<span class="string">"name"</span>, &amp;childNode2);</span><br><span class="line">        childNode2-&gt;put_text((<span class="keyword">_bstr_t</span>)xxx);</span><br><span class="line">        spRoot-&gt;appendChild(childNode2);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;app_model.<span class="built_in">size</span>(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            MSXML2::IXMLDOMElementPtr childNode;</span><br><span class="line">            spXMLDoc-&gt;raw_createElement((<span class="keyword">_bstr_t</span>)<span class="string">"Feature"</span>, &amp;childNode);</span><br><span class="line"></span><br><span class="line">            childNode-&gt;setAttribute(<span class="string">"index"</span>, app_model[i].first);</span><br><span class="line">            childNode-&gt;setAttribute(<span class="string">"weight"</span>, app_model[i].second);</span><br><span class="line"></span><br><span class="line">            spRoot-&gt;appendChild(childNode);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        spXMLDoc-&gt;save(file.c_str());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    spRoot.Release();</span><br><span class="line">    spXMLDoc.Release();</span><br><span class="line">    CoUninitialize();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>Note:</strong> Above writing xml with <code>&lt;name&gt;xxx&lt;/name&gt;</code> style is not fully tested.</p>
]]></content>
      <tags>
        <tag>coding</tag>
        <tag>xml</tag>
      </tags>
  </entry>
  <entry>
    <title>fwrite/fread for different data types</title>
    <url>/2012/06/13/fwrite-fread-for-different-data-types/</url>
    <content><![CDATA[<p>We use <code>fwrite</code> to write formated data to disk and use <code>fread</code> to later read them back from disk. Different data types are very different in using <code>fwrite/fread</code>. The following shows how to do for <code>vector</code> (simple), <code>Mat</code>, <code>vector&lt;Mat&gt;</code>, <code>struct</code> (simple), <code>struct</code> (complex).</p>
<a id="more"></a>
<h2 id="for-vector-simple"><a href="#for-vector-simple" class="headerlink" title="for vector (simple):"></a>for <code>vector</code> (simple):</h2><ol>
<li><p><code>fwrite</code>:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write_vector</span><span class="params">(<span class="built_in">string</span> file, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// write data to file</span></span><br><span class="line">    FILE *fo;</span><br><span class="line">    fo = fopen(file.c_str(), <span class="string">"wb"</span>);</span><br><span class="line">    <span class="comment">//size_element = result[0].elemSize()*result[0].total();</span></span><br><span class="line">    fwrite(&amp;a[<span class="number">0</span>], a.size(), <span class="keyword">sizeof</span>(<span class="keyword">int</span>), fo);</span><br><span class="line">    fclose(fo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p><code>fread</code>:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">load_vector</span><span class="params">(<span class="built_in">string</span> file, <span class="keyword">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; result;</span><br><span class="line">    result.resize(size);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// read data from file</span></span><br><span class="line">    FILE *fi;</span><br><span class="line">    fi = fopen(file.c_str(), <span class="string">"rb"</span>);</span><br><span class="line"></span><br><span class="line">    fread( &amp;result[<span class="number">0</span>], <span class="keyword">sizeof</span>(<span class="keyword">int</span>), result.size(), fi );</span><br><span class="line">    fclose(fi);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>Usage:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a;</span><br><span class="line">a.push_back(<span class="number">0</span>);</span><br><span class="line">a.push_back(<span class="number">1</span>);</span><br><span class="line">a.push_back(<span class="number">2</span>);</span><br><span class="line">write_vector(<span class="string">"vector.dat"</span>, a);</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; b = load_vector(<span class="string">"vector.dat"</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="for-Mat"><a href="#for-Mat" class="headerlink" title="for Mat:"></a>for <code>Mat</code>:</h2><ol>
<li><p><code>fwrite</code>:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write_mat</span><span class="params">(<span class="built_in">string</span> file, Mat a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// write data to file</span></span><br><span class="line">    FILE *fo;</span><br><span class="line">    fo = fopen(file.c_str(), <span class="string">"wb"</span>);</span><br><span class="line">    <span class="comment">//size_element = result[0].elemSize()*result[0].total();</span></span><br><span class="line">    fwrite(a.ptr(), <span class="number">1</span>, (<span class="keyword">size_t</span>)(a.elemSize()*a.total()), fo);</span><br><span class="line">    fclose(fo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p><code>fread</code>:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">Mat <span class="title">load_mat</span><span class="params">(<span class="built_in">string</span> file, <span class="keyword">int</span> rows, <span class="keyword">int</span> cols, <span class="keyword">int</span> type)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Mat <span class="title">result</span><span class="params">(rows, cols, type)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// read data from file</span></span><br><span class="line">    FILE *fi;</span><br><span class="line">    fi = fopen(file.c_str(), <span class="string">"rb"</span>);</span><br><span class="line">    fread(result.ptr(), (<span class="keyword">size_t</span>)(result.elemSize()*result.total()), <span class="number">1</span>, fi);</span><br><span class="line">    fclose(fi);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>Usage:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Mat a = Mat::eye(<span class="number">3</span>, <span class="number">3</span>, CV_32FC1);</span><br><span class="line">write_mat(<span class="string">"mat.dat"</span>, a);</span><br><span class="line">Mat b = load_mat(<span class="string">"mat.dat"</span>, <span class="number">3</span>, <span class="number">3</span>, CV_32FC1);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="for-vector-lt-Mat-gt-every-Mat-have-similar-data"><a href="#for-vector-lt-Mat-gt-every-Mat-have-similar-data" class="headerlink" title="for vector&lt;Mat&gt; (every Mat have similar data):"></a>for <code>vector&lt;Mat&gt;</code> (every <code>Mat</code> have similar data):</h2><ol>
<li><p><code>fwrite</code>:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write_all_images_content_to_disk</span><span class="params">(<span class="built_in">vector</span>&lt;Mat&gt; result, <span class="built_in">string</span> file, <span class="keyword">size_t</span> &amp; size_mat)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// write data to file</span></span><br><span class="line">    FILE *fo;</span><br><span class="line">    fo = fopen(file.c_str(), <span class="string">"wb"</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;result.size(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Mat stub = result[i];</span><br><span class="line"></span><br><span class="line">        size_mat = (<span class="keyword">size_t</span>)(stub.elemSize()*stub.total());</span><br><span class="line">        fwrite(stub.ptr(), size_mat, <span class="number">1</span>, fo);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p><code>fread</code>:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="built_in">vector</span>&lt;Mat&gt; <span class="title">load_images_content_from_disk</span><span class="params">(<span class="built_in">string</span> file, <span class="keyword">size_t</span> size_mat, <span class="keyword">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;Mat&gt; result;</span><br><span class="line">    result.resize(size);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// read data from file</span></span><br><span class="line">    FILE *fi;</span><br><span class="line">    fi = fopen(file.c_str(), <span class="string">"rb"</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;size; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">Mat <span class="title">stub</span><span class="params">(WIDTH_IMAGE, HEIGHT_IMAGE, CV_8UC3)</span></span>;</span><br><span class="line"></span><br><span class="line">        fread(stub.ptr(), size_mat, <span class="number">1</span>, fi);</span><br><span class="line"></span><br><span class="line">        result.push_back(stub);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fi);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>Usage:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// for vector&lt;Mat&gt; IMAGES_CONTENT;</span></span><br><span class="line"><span class="keyword">size_t</span> size_mat;</span><br><span class="line">write_all_images_content_to_disk(IMAGES_CONTENT, <span class="string">"images.dat"</span>, size_mat);</span><br><span class="line"><span class="built_in">vector</span>&lt;Mat&gt; stub = load_images_content_from_disk(<span class="string">"images.dat"</span>, size_mat, IMAGES_CONTENT.size());</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="for-struct-simple"><a href="#for-struct-simple" class="headerlink" title="for struct (simple):"></a>for <code>struct</code> (simple):</h2><p>Take the following struct as an example:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PERSON</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">30</span>];</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<ol>
<li><p><code>fwrite</code>:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write_struct</span><span class="params">(<span class="built_in">string</span> file, PERSON a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// write data to file</span></span><br><span class="line">    FILE *fo;</span><br><span class="line">    fo = fopen(file.c_str(), <span class="string">"wb"</span>);</span><br><span class="line">    fwrite(&amp;a, <span class="keyword">sizeof</span>(struct PERSON), <span class="number">1</span>, fo);</span><br><span class="line">    fclose(fo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p><code>fread</code>:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">load_struct</span><span class="params">(<span class="built_in">string</span> file, PERSON &amp; result)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// read data from file</span></span><br><span class="line">    FILE *fi;</span><br><span class="line">    fi = fopen(file.c_str(), <span class="string">"rb"</span>);</span><br><span class="line">    fread(&amp;result, <span class="keyword">sizeof</span>(struct PERSON), <span class="number">1</span>, fi);</span><br><span class="line">    fclose(fi);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>Usage:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">PERSON a;</span><br><span class="line"><span class="built_in">strcpy</span>(a.name, <span class="string">"Tommy"</span>);</span><br><span class="line">a.age = <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line">write_struct(<span class="string">"person.dat"</span>, a);</span><br><span class="line">PERSON b;</span><br><span class="line">load_struct(<span class="string">"person.dat"</span>, b);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="for-struct-contains-vector-and-Mat"><a href="#for-struct-contains-vector-and-Mat" class="headerlink" title="for struct (contains vector and Mat):"></a>for <code>struct</code> (contains <code>vector</code> and <code>Mat</code>):</h2><p>Take the following struct as an example:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">FEATURE_RECT</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    Rect rect;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">float</span>&gt; color_hist;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">float</span>&gt; hog;</span><br><span class="line">    Mat region_mat;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<ol>
<li><p><code>fwrite</code>:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write_struct</span><span class="params">(<span class="built_in">string</span> file, FEATURE_RECT a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// write data to file</span></span><br><span class="line">    FILE *fo;</span><br><span class="line">    fo = fopen(file.c_str(), <span class="string">"wb"</span>);</span><br><span class="line">    fwrite(&amp;a, <span class="keyword">sizeof</span>(struct FEATURE_RECT), <span class="number">1</span>, fo);</span><br><span class="line">    fwrite(&amp;a.color_hist[<span class="number">0</span>], <span class="keyword">sizeof</span>(<span class="keyword">float</span>), a.color_hist.size(), fo);</span><br><span class="line">    fwrite(&amp;a.hog[<span class="number">0</span>], <span class="keyword">sizeof</span>(<span class="keyword">float</span>), a.hog.size(), fo);</span><br><span class="line">    fclose(fo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p><code>fread</code>:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">load_struct</span><span class="params">(<span class="built_in">string</span> file, FEATURE_RECT &amp; result)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// read data from file</span></span><br><span class="line">    FILE *fi;</span><br><span class="line">    fi = fopen(file.c_str(), <span class="string">"rb"</span>);</span><br><span class="line">    fread(&amp;result, <span class="keyword">sizeof</span>(struct FEATURE_RECT ), <span class="number">1</span>, fi);</span><br><span class="line">    fread(&amp;result.color_hist[<span class="number">0</span>], <span class="keyword">sizeof</span>(<span class="keyword">float</span>), result.color_hist.size(), fi);</span><br><span class="line">    fread(&amp;result.hog[<span class="number">0</span>], <span class="keyword">sizeof</span>(<span class="keyword">float</span>), result.hog.size(), fi);</span><br><span class="line">    fclose(fi);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>Usage:</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">FEATURE_RECT test;</span><br><span class="line">test.rect = Rect(<span class="number">1</span>,<span class="number">2</span>,<span class="number">100</span>,<span class="number">200</span>);</span><br><span class="line">test.color_hist.push_back(<span class="number">0</span>);</span><br><span class="line">test.hog.push_back(<span class="number">1</span>);</span><br><span class="line">test.region_mat = Mat::eye(<span class="number">3</span>,<span class="number">3</span>,CV_32FC1);</span><br><span class="line"></span><br><span class="line">write_struct(<span class="string">"struct.dat"</span>, test);</span><br><span class="line">FEATURE_RECT test2;</span><br><span class="line">load_struct(<span class="string">"struct.dat"</span>, test2);</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <tags>
        <tag>coding</tag>
        <tag>i/o</tag>
      </tags>
  </entry>
  <entry>
    <title>Using Libxml2 library in VC++</title>
    <url>/2012/06/18/Using-Libxml2-library-in-VC/</url>
    <content><![CDATA[<p><a href="http://www.xmlsoft.org/" target="_blank" rel="noopener">Libxml2</a> is the XML C parser and toolkit developed for the Gnome project (but usable outside of the Gnome platform), it is free software available under the MIT License. We can use it to read/write data from XML data file.</p>
<a id="more"></a>
<p>Steps to use Libxml2 library is as follows:</p>
<ol>
<li>Download <a href="http://gnuwin32.sourceforge.net/" target="_blank" rel="noopener">GnuWin</a> (note that currently GnuWin is only for win32, for win64, we can simply copy installed files in win32 to win64 system, it did work :)) and intall it to anywhere on your PC.</li>
<li>Download Libxml2 and extract it to anywhere on your PC.</li>
<li>In VC++ project:<ul>
<li>Add path <code>&lt;Libxml2 root&gt;/include</code> to VC++ Include Directories.</li>
<li>Add path <code>&lt;GnuWin root&gt;/include</code> to VC++ Include Directories.</li>
<li>Add path <code>&lt;Libxml2 root&gt;/lib</code> to VC++ Library Directories.</li>
<li>Add path <code>&lt;GnuWin root&gt;/lib</code> to VC++ Library Directories.</li>
<li>Add <code>libiconv.lib</code> and <code>libxml2.lib</code> to Project Linker Input Additional Dependencies.</li>
<li>Copy <code>libxml2.dll</code> under path <code>&lt;Libxml2 root&gt;/bin</code> to project folder.</li>
<li>Copy <a href="https://gitlab.com/herohuyongtao/using-libxml2-library-in-vs/-/blob/master/src/Opencv2.3.1/iconv.dll" target="_blank" rel="noopener"><code>iconv.dll</code></a> and <a href="https://gitlab.com/herohuyongtao/using-libxml2-library-in-vs/-/blob/master/src/Opencv2.3.1/zlib1.dll" target="_blank" rel="noopener"><code>zlib1.dll</code></a> to project folder.</li>
</ul>
</li>
<li>Do like <a href="https://gitlab.com/herohuyongtao/using-libxml2-library-in-vs" target="_blank" rel="noopener">project</a> to read/write data from/to XML files.</li>
</ol>
]]></content>
      <tags>
        <tag>coding</tag>
        <tag>xml</tag>
      </tags>
  </entry>
  <entry>
    <title>Weird things in programming</title>
    <url>/2012/12/19/Weird-things-in-programming/</url>
    <content><![CDATA[<p>Weird things often occur in programming. We can tell so-called reasons to some of them. For others, the only thing we can do is, how the hell could these be? We have to pay extra attention to avoid these in order not to fall into debugging nightmares.</p>
<a id="more"></a>
<h2 id="10000000000000000-10000000000000000"><a href="#10000000000000000-10000000000000000" class="headerlink" title="10000000000000000 != 10000000000000000 ???"></a>10000000000000000 != 10000000000000000 ???</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">float</span> a = <span class="number">10000000000000000.0</span>;</span><br><span class="line"><span class="keyword">float</span> b = a - <span class="number">10000000000000000.0</span>;</span><br></pre></td></tr></table></figure>
<p>When printing them, it turns out:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">a = <span class="number">10000000272564224.000000</span></span><br><span class="line">b = <span class="number">272564224.000000</span></span><br></pre></td></tr></table></figure>
<p>When viewing them in Watch under Debug, it turns out:</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">Name</th>
<th style="text-align:center">Value</th>
<th style="text-align:center">Type</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">a</td>
<td style="text-align:center">1.0000000e+016</td>
<td style="text-align:center">float</td>
</tr>
<tr>
<td style="text-align:center">b</td>
<td style="text-align:center"><span style="color:red">2.7256422e+008</span></td>
<td style="text-align:center">float</td>
</tr>
</tbody>
</table>
</div>
<p>Reason: discussed in <a href="http://stackoverflow.com/questions/18877902/why-is-10000000000000000-10000000000000000" target="_blank" rel="noopener">here</a>.</p>
<h2 id="215510-10000-2155100000"><a href="#215510-10000-2155100000" class="headerlink" title="215510*10000 != 2155100000 ???"></a>215510*10000 != 2155100000 ???</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">UINT64 time1 = <span class="number">215510</span>*<span class="number">10000</span>;</span><br><span class="line">UINT64 time2 = (UINT64)(<span class="number">215510</span> * <span class="number">10000</span>);</span><br></pre></td></tr></table></figure>
<p>When printing them or in Watch, it turns out:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">time1 = <span class="number">18446744071569684320</span></span><br><span class="line">time2 = <span class="number">18446744071569684320</span></span><br></pre></td></tr></table></figure>
<p>We have to use one of the following codes in order to get correct answer:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">UINT64 time3 = (UINT64)<span class="number">215510</span> * <span class="number">10000</span>;</span><br><span class="line">UINT64 time4 = <span class="number">215510</span> * (UINT64)<span class="number">10000</span>;</span><br><span class="line">UINT64 time5 = (UINT64)<span class="number">215510</span> * (UINT64)<span class="number">10000</span>;</span><br></pre></td></tr></table></figure>
<p>Reason: discussed in <a href="http://stackoverflow.com/questions/20727531/why-is-21551010000-2155100000" target="_blank" rel="noopener">here</a>.</p>
<h2 id="3-lt-–1"><a href="#3-lt-–1" class="headerlink" title="3 &lt; –1 ???"></a>3 &lt; –1 ???</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> start = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; data;</span><br><span class="line">data.push_back(<span class="number">0</span>);</span><br><span class="line">data.push_back(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=start; i&lt;data.size()-start; i++)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"In...\n"</span>);</span><br></pre></td></tr></table></figure>
<p>When running the above code, it will run <code>printf(&quot;In...\n&quot;);</code> infinitely. Although based on the condition (<code>3&lt;-1</code>) of the <code>for</code> loop, it should never do this. Weird, huh?</p>
<p>To avoid this, you have to compute the long condition equation first, like:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">... ...</span><br><span class="line"><span class="keyword">int</span> end = data.size()-start;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=start; i&lt;end; i++)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"In...\n"</span>);</span><br></pre></td></tr></table></figure>
<p><strong>Reason</strong>: discussed in <a href="http://stackoverflow.com/questions/20728649/why-is-31-in-code" target="_blank" rel="noopener">here</a>.</p>
]]></content>
      <tags>
        <tag>coding</tag>
        <tag>debugging</tag>
      </tags>
  </entry>
</search>
